// –°–∫—Ä–∏–ø—Ç –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ä–µ–∞–ª—å–Ω—ã—Ö —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π –ø–æ—Å–ª–µ –º–∞—Å—Å–æ–≤–æ–π –∑–∞–≥—Ä—É–∑–∫–∏
// –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –∫–æ–≥–¥–∞ —É –≤–∞—Å –µ—Å—Ç—å –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏

const fs = require('fs');
const path = require('path');

const ADMIN_TOKEN = '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';
const ADMIN_URL = 'https://phuket-telegram-shop-117ck.myshopify.com/admin/api/2025-07/graphql.json';

// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –º–µ—Å—Ç–∞
const photoConfigs = {
  'central-phuket-floresta': {
    photosDir: 'photos/central/',
    description: 'Central Phuket Floresta',
    expectedPhotos: 6
  },
  'robinson-lifestyle-phuket': {
    photosDir: 'photos/robinson/',
    description: 'Robinson Lifestyle Phuket',
    expectedPhotos: 6
  }
  // –î–æ–±–∞–≤–∏–º –æ—Å—Ç–∞–ª—å–Ω—ã–µ –º–µ—Å—Ç–∞...
};

const GET_PRODUCT_ID_QUERY = `
  query productByHandle($handle: String!) {
    productByHandle(handle: $handle) {
      id
      title
    }
  }
`;

const DELETE_MEDIA_MUTATION = `
  mutation productDeleteMedia($productId: ID!, $mediaIds: [ID!]!) {
    productDeleteMedia(productId: $productId, mediaIds: $mediaIds) {
      deletedMediaIds
      userErrors {
        field
        message
      }
    }
  }
`;

const CREATE_MEDIA_MUTATION = `
  mutation productCreateMedia($productId: ID!, $media: [CreateMediaInput!]!) {
    productCreateMedia(productId: $productId, media: $media) {
      media {
        id
        alt
      }
      userErrors {
        field
        message
      }
    }
  }
`;

async function addRealPhotos(handle) {
  const config = photoConfigs[handle];
  if (!config) {
    console.error(`‚ùå –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –¥–ª—è ${handle} –Ω–µ –Ω–∞–π–¥–µ–Ω–∞`);
    return;
  }
  
  const photosDir = path.join(__dirname, '..', config.photosDir);
  
  if (!fs.existsSync(photosDir)) {
    console.error(`‚ùå –ü–∞–ø–∫–∞ ${config.photosDir} –Ω–µ –Ω–∞–π–¥–µ–Ω–∞`);
    console.log(`üìÅ –°–æ–∑–¥–∞–π—Ç–µ –ø–∞–ø–∫—É –∏ –¥–æ–±–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏:`);
    console.log(`   mkdir -p ${config.photosDir}`);
    console.log(`   # –î–æ–±–∞–≤—å—Ç–µ ${config.expectedPhotos} –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö —Ñ–æ—Ç–æ`);
    return;
  }
  
  const files = fs.readdirSync(photosDir)
    .filter(file => /\.(jpg|jpeg|png|webp)$/i.test(file))
    .sort();
  
  if (files.length === 0) {
    console.error(`‚ùå –í –ø–∞–ø–∫–µ ${config.photosDir} –Ω–µ—Ç —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π`);
    return;
  }
  
  console.log(`üì∏ –î–æ–±–∞–≤–ª—è–µ–º —Ä–µ–∞–ª—å–Ω—ã–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –¥–ª—è ${config.description}`);
  console.log(`üìÅ –ù–∞–π–¥–µ–Ω–æ ${files.length} —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π –≤ ${config.photosDir}`);
  
  try {
    // 1. –ü–æ–ª—É—á–∞–µ–º ID –ø—Ä–æ–¥—É–∫—Ç–∞
    const productResponse = await fetch(ADMIN_URL, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
        'X-Shopify-Access-Token': ADMIN_TOKEN,
      },
      body: JSON.stringify({
        query: GET_PRODUCT_ID_QUERY,
        variables: { handle }
      }),
    });
    
    const productResult = await productResponse.json();
    
    if (productResult.errors || !productResult.data.productByHandle) {
      console.error(`‚ùå –ü—Ä–æ–¥—É–∫—Ç ${handle} –Ω–µ –Ω–∞–π–¥–µ–Ω`);
      return;
    }
    
    const productId = productResult.data.productByHandle.id;
    console.log(`‚úÖ –ù–∞–π–¥–µ–Ω –ø—Ä–æ–¥—É–∫—Ç: ${productId}`);
    
    // 2. –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏
    const mediaInputs = [];
    
    for (let i = 0; i < Math.min(files.length, config.expectedPhotos); i++) {
      const file = files[i];
      const filePath = path.join(photosDir, file);
      
      try {
        const fileBuffer = fs.readFileSync(filePath);
        const base64Image = fileBuffer.toString('base64');
        const mimeType = file.endsWith('.png') ? 'image/png' : 
                        file.endsWith('.webp') ? 'image/webp' : 'image/jpeg';
        
        mediaInputs.push({
          originalSource: `data:${mimeType};base64,${base64Image}`,
          alt: `${config.description} - ${file.replace(/\.[^/.]+$/, '')}`,
          mediaContentType: "IMAGE"
        });
        
        console.log(`   ‚úÖ –ü–æ–¥–≥–æ—Ç–æ–≤–ª–µ–Ω–æ: ${file}`);
      } catch (error) {
        console.log(`   ‚ùå –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è ${file}: ${error.message}`);
      }
    }
    
    if (mediaInputs.length === 0) {
      console.error(`‚ùå –ù–µ—Ç –ø–æ–¥—Ö–æ–¥—è—â–∏—Ö —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏`);
      return;
    }
    
    // 3. –ó–∞–≥—Ä—É–∂–∞–µ–º —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏
    console.log(`üöÄ –ó–∞–≥—Ä—É–∂–∞–µ–º ${mediaInputs.length} —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π...`);
    
    const mediaResponse = await fetch(ADMIN_URL, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
        'X-Shopify-Access-Token': ADMIN_TOKEN,
      },
      body: JSON.stringify({
        query: CREATE_MEDIA_MUTATION,
        variables: {
          productId: productId,
          media: mediaInputs
        }
      }),
    });
    
    const mediaResult = await mediaResponse.json();
    
    if (mediaResult.errors) {
      console.error(`‚ùå –û—à–∏–±–∫–∏ –∑–∞–≥—Ä—É–∑–∫–∏:`, mediaResult.errors);
    } else if (mediaResult.data.productCreateMedia.userErrors.length > 0) {
      console.error(`‚ùå –û—à–∏–±–∫–∏ —Å–æ–∑–¥–∞–Ω–∏—è –º–µ–¥–∏–∞:`, mediaResult.data.productCreateMedia.userErrors);
    } else {
      console.log(`‚úÖ –£—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω–æ ${mediaInputs.length} —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π!`);
      console.log(`üåê –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç: http://localhost:8080/place/${handle}`);
    }
    
  } catch (error) {
    console.error(`‚ùå –û—à–∏–±–∫–∞:`, error.message);
  }
}

// –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:
// node scripts/add-real-photos-later.cjs central-phuket-floresta
// node scripts/add-real-photos-later.cjs robinson-lifestyle-phuket

const handle = process.argv[2];
if (handle) {
  addRealPhotos(handle);
} else {
  console.log('üìã –ò–°–ü–û–õ–¨–ó–û–í–ê–ù–ò–ï:');
  console.log('node scripts/add-real-photos-later.cjs <handle>');
  console.log('');
  console.log('üìù –î–æ—Å—Ç—É–ø–Ω—ã–µ –º–µ—Å—Ç–∞:');
  Object.keys(photoConfigs).forEach(handle => {
    console.log(`   ${handle} - ${photoConfigs[handle].description}`);
  });
}
