// –ú–∞—Å—Å–æ–≤–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ –≤—Å–µ—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π –ë–ï–ó —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π
// –°–æ–∑–¥–∞–µ–º placeholder –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏ —Å–æ—Å—Ä–µ–¥–æ—Ç–∞—á–∏–≤–∞–µ–º—Å—è –Ω–∞ –∫–æ–Ω—Ç–µ–Ω—Ç–µ

const fs = require('fs');
const path = require('path');

const ADMIN_TOKEN = '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';
const ADMIN_URL = 'https://phuket-telegram-shop-117ck.myshopify.com/admin/api/2025-07/graphql.json';

// –°–æ–∑–¥–∞–µ–º –ø—Ä–æ—Å—Ç—ã–µ placeholder –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ base64
const createPlaceholderImage = (title, color = '#3B82F6') => {
  const svg = `
<svg width="800" height="600" xmlns="http://www.w3.org/2000/svg">
  <defs>
    <linearGradient id="grad" x1="0%" y1="0%" x2="100%" y2="100%">
      <stop offset="0%" style="stop-color:${color};stop-opacity:1" />
      <stop offset="100%" style="stop-color:${color}CC;stop-opacity:1" />
    </linearGradient>
  </defs>
  <rect width="800" height="600" fill="url(#grad)"/>
  <rect x="50" y="50" width="700" height="500" fill="rgba(255,255,255,0.1)" stroke="rgba(255,255,255,0.3)" stroke-width="2" rx="20"/>
  <text x="400" y="280" font-family="Arial, sans-serif" font-size="20" font-weight="bold" text-anchor="middle" fill="white">
    ${title}
  </text>
  <text x="400" y="320" font-family="Arial, sans-serif" font-size="14" text-anchor="middle" fill="rgba(255,255,255,0.8)">
    Placeholder Image
  </text>
  <text x="400" y="500" font-family="Arial, sans-serif" font-size="12" text-anchor="middle" fill="rgba(255,255,255,0.6)">
    Replace with Real Photo
  </text>
</svg>`;
  
  return `data:image/svg+xml;base64,${Buffer.from(svg).toString('base64')}`;
};

// –î–∞–Ω–Ω—ã–µ –¥–ª—è –≤—Å–µ—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π (–ø—Ä–∏–º–µ—Ä - —Ç–æ—Ä–≥–æ–≤—ã–µ —Ü–µ–Ω—Ç—Ä—ã)
const shoppingCenters = [
  {
    title: "Central Phuket Floresta (–¶–µ–Ω—Ç—Ä–∞–ª –ü—Ö—É–∫–µ—Ç –§–ª–æ—Ä–µ—Å—Ç–∞)",
    handle: "central-phuket-floresta",
    description: "–°–∞–º—ã–π –±–æ–ª—å—à–æ–π —Ç–æ—Ä–≥–æ–≤—ã–π —Ü–µ–Ω—Ç—Ä –Ω–∞ –ü—Ö—É–∫–µ—Ç–µ —Å –¥–≤—É–º—è –∫–æ—Ä–ø—É—Å–∞–º–∏: Festival –∏ Floresta. 300+ –º–∞–≥–∞–∑–∏–Ω–æ–≤, —Ä–µ—Å—Ç–æ—Ä–∞–Ω—ã, –∫–∏–Ω–æ—Ç–µ–∞—Ç—Ä, –∞–∫–≤–∞—Ä–∏—É–º.",
    tags: ["info", "insider", "category:shopping", "district:PhuketTown", "shopping", "mall", "luxury", "popular"],
    metafields: [
      { namespace: "custom", key: "coordinates", value: "7.8904,98.2924", type: "single_line_text_field" },
      { namespace: "custom", key: "rating", value: "4.6", type: "single_line_text_field" },
      { namespace: "custom", key: "district", value: "PhuketTown", type: "single_line_text_field" },
      { namespace: "custom", key: "working_hours", value: "10:00-22:00 –µ–∂–µ–¥–Ω–µ–≤–Ω–æ", type: "single_line_text_field" },
      { namespace: "custom", key: "amenities", value: "–ü–∞—Ä–∫–æ–≤–∫–∞,–ö–æ–Ω–¥–∏—Ü–∏–æ–Ω–µ—Ä—ã,Food Court,–ö–∏–Ω–æ—Ç–µ–∞—Ç—Ä,–î–µ—Ç—Å–∫–∞—è –∑–æ–Ω–∞,Wi‚ÄëFi,–ë–∞–Ω–∫–æ–º–∞—Ç—ã,–û–±–º–µ–Ω –≤–∞–ª—é—Ç—ã,–ê–∫–≤–∞—Ä–∏—É–º", type: "single_line_text_field" }
    ]
  },
  {
    title: "Robinson Lifestyle Phuket (–†–æ–±–∏–Ω—Å–æ–Ω –õ–∞–π—Ñ—Å—Ç–∞–π–ª –ü—Ö—É–∫–µ—Ç)",
    handle: "robinson-lifestyle-phuket",
    description: "–°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ç–æ—Ä–≥–æ–≤—ã–π —Ü–µ–Ω—Ç—Ä —Å —Ñ—É–¥-–∫–æ—Ä—Ç–æ–º, –∫–∏–Ω–æ—Ç–µ–∞—Ç—Ä–æ–º SF Cinema, –º–∞–≥–∞–∑–∏–Ω–∞–º–∏ –∏ —Ä–µ—Å—Ç–æ—Ä–∞–Ω–∞–º–∏. –£–¥–æ–±–Ω–∞—è –ø–∞—Ä–∫–æ–≤–∫–∞ –∏ –∫–æ–Ω–¥–∏—Ü–∏–æ–Ω–µ—Ä—ã.",
    tags: ["info", "insider", "category:shopping", "district:PhuketTown", "shopping", "mall", "modern", "popular"],
    metafields: [
      { namespace: "custom", key: "coordinates", value: "7.8965,98.2965", type: "single_line_text_field" },
      { namespace: "custom", key: "rating", value: "4.4", type: "single_line_text_field" },
      { namespace: "custom", key: "district", value: "PhuketTown", type: "single_line_text_field" },
      { namespace: "custom", key: "working_hours", value: "10:00-22:00 –µ–∂–µ–¥–Ω–µ–≤–Ω–æ", type: "single_line_text_field" },
      { namespace: "custom", key: "amenities", value: "–ü–∞—Ä–∫–æ–≤–∫–∞,–ö–æ–Ω–¥–∏—Ü–∏–æ–Ω–µ—Ä—ã,Food Court,–ö–∏–Ω–æ—Ç–µ–∞—Ç—Ä,Wi‚ÄëFi,–ë–∞–Ω–∫–æ–º–∞—Ç—ã", type: "single_line_text_field" }
    ]
  }
  // –î–æ–±–∞–≤–∏–º –æ—Å—Ç–∞–ª—å–Ω—ã–µ —Ç–æ—Ä–≥–æ–≤—ã–µ —Ü–µ–Ω—Ç—Ä—ã...
];

const CREATE_PRODUCT_MUTATION = `
  mutation productCreate($input: ProductInput!) {
    productCreate(input: $input) {
      product {
        id
        title
        handle
        descriptionHtml
      }
      userErrors {
        field
        message
      }
    }
  }
`;

const CREATE_MEDIA_MUTATION = `
  mutation productCreateMedia($productId: ID!, $media: [CreateMediaInput!]!) {
    productCreateMedia(productId: $productId, media: $media) {
      media {
        id
        alt
      }
      userErrors {
        field
        message
      }
    }
  }
`;

async function massUploadWithoutPhotos() {
  console.log('üöÄ –ú–ê–°–°–û–í–ê–Ø –ó–ê–ì–†–£–ó–ö–ê –ë–ï–ó –§–û–¢–û–ì–†–ê–§–ò–ô\n');
  console.log('üìã –°—Ç—Ä–∞—Ç–µ–≥–∏—è:');
  console.log('‚úÖ –°–æ–∑–¥–∞–µ–º –ø—Ä–æ–¥—É–∫—Ç—ã —Å placeholder –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏');
  console.log('‚úÖ –°–æ—Å—Ä–µ–¥–æ—Ç–∞—á–∏–≤–∞–µ–º—Å—è –Ω–∞ –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω–æ–º –∫–æ–Ω—Ç–µ–Ω—Ç–µ');
  console.log('‚úÖ –§–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –¥–æ–±–∞–≤–∏–º –ø–æ–∑–∂–µ –≤—Ä—É—á–Ω—É—é\n');
  
  let successCount = 0;
  let errorCount = 0;
  
  for (let i = 0; i < shoppingCenters.length; i++) {
    const center = shoppingCenters[i];
    console.log(`üì¶ [${i + 1}/${shoppingCenters.length}] –°–æ–∑–¥–∞–µ–º: ${center.title}`);
    
    try {
      // 1. –°–æ–∑–¥–∞–µ–º –ø—Ä–æ–¥—É–∫—Ç
      const productResponse = await fetch(ADMIN_URL, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
          'X-Shopify-Access-Token': ADMIN_TOKEN,
        },
        body: JSON.stringify({
          query: CREATE_PRODUCT_MUTATION,
          variables: {
            input: {
              title: center.title,
              handle: center.handle,
              productType: "Information",
              tags: center.tags,
              descriptionHtml: center.description,
              metafields: center.metafields
            }
          }
        }),
      });
      
      const productResult = await productResponse.json();
      
      if (productResult.errors) {
        console.error(`   ‚ùå GraphQL –æ—à–∏–±–∫–∏:`, productResult.errors);
        errorCount++;
        continue;
      }
      
      if (productResult.data.productCreate.userErrors.length > 0) {
        console.error(`   ‚ùå –û—à–∏–±–∫–∏ —Å–æ–∑–¥–∞–Ω–∏—è:`, productResult.data.productCreate.userErrors);
        errorCount++;
        continue;
      }
      
      const productId = productResult.data.productCreate.product.id;
      console.log(`   ‚úÖ –ü—Ä–æ–¥—É–∫—Ç —Å–æ–∑–¥–∞–Ω: ${productId}`);
      
      // 2. –î–æ–±–∞–≤–ª—è–µ–º 2 placeholder –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
      const placeholderImages = [
        createPlaceholderImage(center.title, '#3B82F6'),
        createPlaceholderImage(center.title, '#10B981')
      ];
      
      const mediaResponse = await fetch(ADMIN_URL, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
          'X-Shopify-Access-Token': ADMIN_TOKEN,
        },
        body: JSON.stringify({
          query: CREATE_MEDIA_MUTATION,
          variables: {
            productId: productId,
            media: placeholderImages.map((img, index) => ({
              originalSource: img,
              alt: `${center.title} - Placeholder ${index + 1}`,
              mediaContentType: "IMAGE"
            }))
          }
        }),
      });
      
      const mediaResult = await mediaResponse.json();
      
      if (mediaResult.errors) {
        console.log(`   ‚ö†Ô∏è –û—à–∏–±–∫–∏ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–æ—Ç–æ:`, mediaResult.errors);
      } else {
        console.log(`   ‚úÖ Placeholder –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –¥–æ–±–∞–≤–ª–µ–Ω—ã`);
      }
      
      successCount++;
      
    } catch (error) {
      console.error(`   ‚ùå –û—à–∏–±–∫–∞:`, error.message);
      errorCount++;
    }
    
    // –ü–∞—É–∑–∞ –º–µ–∂–¥—É –∑–∞–ø—Ä–æ—Å–∞–º–∏
    await new Promise(resolve => setTimeout(resolve, 2000));
  }
  
  console.log('\nüìä === –†–ï–ó–£–õ–¨–¢–ê–¢–´ ===');
  console.log(`‚úÖ –£—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–æ: ${successCount}`);
  console.log(`‚ùå –û—à–∏–±–æ–∫: ${errorCount}`);
  console.log(`üì¶ –í—Å–µ–≥–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ: ${shoppingCenters.length}`);
  
  console.log('\nüéØ –°–õ–ï–î–£–Æ–©–ò–ï –®–ê–ì–ò:');
  console.log('1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –Ω–∞ —Å–∞–π—Ç–µ');
  console.log('2. –î–æ–±–∞–≤—å—Ç–µ —Ä–µ–∞–ª—å–Ω—ã–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –≤—Ä—É—á–Ω—É—é');
  console.log('3. –ü—Ä–∏–º–µ–Ω–∏—Ç–µ —ç—Ç–æ—Ç –ø–æ–¥—Ö–æ–¥ –∫ –¥—Ä—É–≥–∏–º –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º');
}

massUploadWithoutPhotos();
