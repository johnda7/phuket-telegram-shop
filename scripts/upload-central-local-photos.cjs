const https = require('https');
const fs = require('fs');
const path = require('path');

const SHOPIFY_STORE = 'phuket-telegram-shop-117ck.myshopify.com';
const SHOPIFY_ACCESS_TOKEN = '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';
const PRODUCT_ID = '7972352950326'; // Central Phuket Floresta

// –ü–æ–ø—Ä–æ–±—É–µ–º –∑–∞–≥—Ä—É–∑–∏—Ç—å –°–£–©–ï–°–¢–í–£–Æ–©–ò–ô –ª–æ–∫–∞–ª—å–Ω—ã–π —Ñ–∞–π–ª (phi-phi-hero.jpg) –¥–ª—è —Ç–µ—Å—Ç–∞
const testImagePath = path.join(__dirname, '../src/assets/phi-phi-hero.jpg');

function uploadImageToProduct(filePath, filename) {
  return new Promise((resolve, reject) => {
    console.log(`üìÅ –ß–∏—Ç–∞–µ–º —Ñ–∞–π–ª: ${filePath}`);
    
    if (!fs.existsSync(filePath)) {
      reject(new Error(`–§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: ${filePath}`));
      return;
    }
    
    const fileBuffer = fs.readFileSync(filePath);
    const base64Image = fileBuffer.toString('base64');
    const fileSizeKB = (fileBuffer.length / 1024).toFixed(2);
    
    console.log(`üìä –†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞: ${fileSizeKB} KB`);
    console.log(`üì§ –ó–∞–≥—Ä—É–∂–∞–µ–º –≤ Shopify...`);
    
    const imageData = JSON.stringify({
      image: {
        attachment: base64Image,
        filename: filename
      }
    });

    const options = {
      hostname: SHOPIFY_STORE,
      path: `/admin/api/2025-07/products/${PRODUCT_ID}/images.json`,
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
        'X-Shopify-Access-Token': SHOPIFY_ACCESS_TOKEN,
        'Content-Length': Buffer.byteLength(imageData)
      }
    };

    const req = https.request(options, (res) => {
      let data = '';

      res.on('data', (chunk) => {
        data += chunk;
      });

      res.on('end', () => {
        console.log(`üì• Response status: ${res.statusCode}`);
        
        if (res.statusCode === 200 || res.statusCode === 201) {
          const result = JSON.parse(data);
          resolve(result.image);
        } else {
          console.log(`üìÑ Response body:`, data);
          reject(new Error(`HTTP ${res.statusCode}: ${data}`));
        }
      });
    });

    req.on('error', (error) => {
      reject(error);
    });

    req.write(imageData);
    req.end();
  });
}

async function testUpload() {
  console.log('üß™ –¢–ï–°–¢: –ó–∞–≥—Ä—É–∂–∞–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–π —Ñ–∞–π–ª phi-phi-hero.jpg\n');
  console.log('üéØ –¶–µ–ª—å: –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Ä–∞–±–æ—Ç–∞–µ—Ç –ª–∏ –∑–∞–≥—Ä—É–∑–∫–∞ –ª–æ–∫–∞–ª—å–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤\n');
  
  try {
    const result = await uploadImageToProduct(testImagePath, 'central-phuket-test.jpg');
    console.log('\n‚úÖ –£–°–ü–ï–•! –§–æ—Ç–æ –∑–∞–≥—Ä—É–∂–µ–Ω–æ!');
    console.log(`üì∑ Image ID: ${result.id}`);
    console.log(`üîó URL: ${result.src}`);
    console.log('\nüí° –í–´–í–û–î: Trial account –†–ê–ó–†–ï–®–ê–ï–¢ –∑–∞–≥—Ä—É–∑–∫—É –õ–û–ö–ê–õ–¨–ù–´–• —Ñ–∞–π–ª–æ–≤ —á–µ—Ä–µ–∑ base64!');
    console.log('üöÄ –¢–µ–ø–µ—Ä—å –Ω—É–∂–Ω–æ —Å–∫–∞—á–∞—Ç—å –¢–í–û–ò 4 —Ñ–æ—Ç–æ Central Festival –ª–æ–∫–∞–ª—å–Ω–æ –∏ –∑–∞–≥—Ä—É–∑–∏—Ç—å!');
  } catch (error) {
    console.error('\n‚ùå –û–®–ò–ë–ö–ê:', error.message);
    console.log('\nü§î –ï—Å–ª–∏ –æ—à–∏–±–∫–∞ "trial accounts" - –∑–Ω–∞—á–∏—Ç –ø—Ä–æ–±–ª–µ–º–∞ –Ω–µ –≤ –º–µ—Ç–æ–¥–µ –∑–∞–≥—Ä—É–∑–∫–∏');
  }
}

testUpload();

