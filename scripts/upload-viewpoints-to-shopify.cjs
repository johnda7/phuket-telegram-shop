#!/usr/bin/env node

/**
 * üî• –°–ö–†–ò–ü–¢ –ó–ê–ì–†–£–ó–ö–ò –°–ú–û–¢–†–û–í–´–• –ü–õ–û–©–ê–î–û–ö –í SHOPIFY üî•
 * 
 * –ó–∞–≥—Ä—É–∂–∞–µ—Ç –≤—Å–µ viewpoints –∏–∑ src/data/viewpoints.ts –≤ Shopify –∫–∞–∫ Products
 * —Å —Ç–∏–ø–æ–º "place" –∏ –≤—Å–µ–º–∏ metafields
 */

require('dotenv').config();

// –ò–º–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö
const viewpointsData = [
  {
    title: "–ú—ã—Å –ü—Ä–æ–º—Ç–µ–ø (Promthep Cape)",
    handle: "promthep-cape",
    description: `**üåÖ –ú—ã—Å –ü—Ä–æ–º—Ç–µ–ø** ‚Äî —Å–∞–º–∞—è —é–∂–Ω–∞—è —Ç–æ—á–∫–∞ –ü—Ö—É–∫–µ—Ç–∞ –∏ **–ª—É—á—à–µ–µ –º–µ—Å—Ç–æ –¥–ª—è –Ω–∞–±–ª—é–¥–µ–Ω–∏—è –∑–∞ –∑–∞–∫–∞—Ç–æ–º**!

**–ü–æ—á–µ–º—É —Å—Ç–æ–∏—Ç –ø–æ—Å–µ—Ç–∏—Ç—å:**
- üåÖ –õ–µ–≥–µ–Ω–¥–∞—Ä–Ω—ã–µ –∑–∞–∫–∞—Ç—ã –Ω–∞–¥ –ê–Ω–¥–∞–º–∞–Ω—Å–∫–∏–º –º–æ—Ä–µ–º
- üóº –ö—Ä–∞—Å–∏–≤—ã–π –±–µ–ª—ã–π –º–∞—è–∫
- üì∏ –°–º–æ—Ç—Ä–æ–≤–∞—è –ø–ª–æ—â–∞–¥–∫–∞ 360¬∞ —Å –ø–∞–Ω–æ—Ä–∞–º–Ω—ã–º –≤–∏–¥–æ–º
- üêò –°—Ç–∞—Ç—É—è —Å–ª–æ–Ω–∞ –ì–∞–Ω–µ—à–∏
- üé≠ –°—É–≤–µ–Ω–∏—Ä–Ω—ã–µ –ª–∞–≤–∫–∏ –∏ —Ñ–æ—Ç–æ-–∑–æ–Ω—ã

**–õ—É—á—à–µ–µ –≤—Ä–µ–º—è:**
–ü—Ä–∏–µ–∑–∂–∞–π—Ç–µ –∑–∞ 30-40 –º–∏–Ω—É—Ç –¥–æ –∑–∞–∫–∞—Ç–∞ (–ø—Ä–∏–º–µ—Ä–Ω–æ 18:00-18:30). –ú–µ—Å—Ç–æ –ø–æ–ø—É–ª—è—Ä–Ω–æ–µ, –±—É–¥–µ—Ç –º–Ω–æ–≥–æ —Ç—É—Ä–∏—Å—Ç–æ–≤!

**–ö–∞–∫ –¥–æ–±—Ä–∞—Ç—å—Å—è:**
- üöó 15 –º–∏–Ω—É—Ç –æ—Ç –ø–ª—è–∂–∞ –ù–∞–π—Ö–∞—Ä–Ω
- üõµ –ù–∞ –±–∞–π–∫–µ –ø–æ –∂–∏–≤–æ–ø–∏—Å–Ω–æ–π –¥–æ—Ä–æ–≥–µ
- üöï –¢–∞–∫—Å–∏ –∏–∑ –†–∞–≤–∞—è (~10 –º–∏–Ω—É—Ç)

**–°–æ–≤–µ—Ç—ã:**
- –ë–µ—Ä–∏—Ç–µ –≤–æ–¥—É - –º–æ–∂–µ—Ç –±—ã—Ç—å –∂–∞—Ä–∫–æ
- –û–¥–µ–≤–∞–π—Ç–µ —É–¥–æ–±–Ω—É—é –æ–±—É–≤—å
- –ü—Ä–∏—Ö–æ–¥–∏—Ç–µ –ø–æ—Ä–∞–Ω—å—à–µ –¥–ª—è –ª—É—á—à–∏—Ö –º–µ—Å—Ç
- –í—Ö–æ–¥ –±–µ—Å–ø–ª–∞—Ç–Ω—ã–π!`,
    productType: "place",
    vendor: "PhuketDa Insider",
    tags: [
      "place",
      "info",
      "insider",
      "category:viewpoints",
      "district:Rawai",
      "viewpoint",
      "sunset",
      "popular",
      "free",
      "photo-spot",
      "lighthouse",
      "instagram"
    ],
    metafields: [
      { namespace: "custom", key: "coordinates", value: "7.7625,98.3056", type: "single_line_text_field" },
      { namespace: "custom", key: "rating", value: "4.8", type: "single_line_text_field" },
      { namespace: "custom", key: "district", value: "Rawai", type: "single_line_text_field" },
      { namespace: "custom", key: "duration", value: "1-2 —á–∞—Å–∞", type: "single_line_text_field" },
      { namespace: "custom", key: "best_time", value: "–ó–∞–∫–∞—Ç (18:00-19:00)", type: "single_line_text_field" },
      { namespace: "custom", key: "working_hours", value: "24/7", type: "single_line_text_field" },
      { namespace: "custom", key: "amenities", value: "–ü–∞—Ä–∫–æ–≤–∫–∞,–¢—É–∞–ª–µ—Ç—ã,–°—É–≤–µ–Ω–∏—Ä—ã,–ú–∞—è–∫,–§–æ—Ç–æ-–∑–æ–Ω—ã", type: "single_line_text_field" },
      { namespace: "custom", key: "price_level", value: "0", type: "single_line_text_field" },
      { namespace: "custom", key: "entrance_fee", value: "–ë–µ—Å–ø–ª–∞—Ç–Ω–æ", type: "single_line_text_field" },
      { namespace: "custom", key: "map_url", value: "https://maps.app.goo.gl/promthep", type: "single_line_text_field" }
    ]
  },
  // ... –æ—Å—Ç–∞–ª—å–Ω—ã–µ viewpoints –±—É–¥—É—Ç –¥–æ–±–∞–≤–ª–µ–Ω—ã –Ω–∏–∂–µ
];

const SHOPIFY_STORE = process.env.SHOPIFY_STORE_PERMANENT_DOMAIN;
const SHOPIFY_ACCESS_TOKEN = process.env.SHOPIFY_ADMIN_ACCESS_TOKEN;
const SHOPIFY_API_VERSION = '2024-01';

if (!SHOPIFY_STORE || !SHOPIFY_ACCESS_TOKEN) {
  console.error('‚ùå Missing required environment variables:');
  console.error('SHOPIFY_STORE_PERMANENT_DOMAIN:', SHOPIFY_STORE ? '‚úÖ' : '‚ùå');
  console.error('SHOPIFY_ADMIN_ACCESS_TOKEN:', SHOPIFY_ACCESS_TOKEN ? '‚úÖ' : '‚ùå');
  process.exit(1);
}

const GRAPHQL_ENDPOINT = `https://${SHOPIFY_STORE}/admin/api/${SHOPIFY_API_VERSION}/graphql.json`;

// GraphQL mutation –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–æ–¥—É–∫—Ç–∞
const CREATE_PRODUCT_MUTATION = `
  mutation createProduct($input: ProductInput!) {
    productCreate(input: $input) {
      product {
        id
        handle
        title
      }
      userErrors {
        field
        message
      }
    }
  }
`;

async function shopifyRequest(query, variables) {
  const response = await fetch(GRAPHQL_ENDPOINT, {
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
      'X-Shopify-Access-Token': SHOPIFY_ACCESS_TOKEN,
    },
    body: JSON.stringify({ query, variables }),
  });

  if (!response.ok) {
    throw new Error(`HTTP error! status: ${response.status}`);
  }

  const data = await response.json();
  
  if (data.errors) {
    throw new Error(`GraphQL error: ${JSON.stringify(data.errors)}`);
  }

  return data;
}

async function uploadViewpoint(viewpoint) {
  console.log(`\nüìç –ó–∞–≥—Ä—É–∂–∞—é: ${viewpoint.title}`);

  const input = {
    title: viewpoint.title,
    handle: viewpoint.handle,
    productType: viewpoint.productType,
    vendor: viewpoint.vendor,
    description: viewpoint.description,
    tags: viewpoint.tags,
    
    // Price = 0 –¥–ª—è –º–µ—Å—Ç (–Ω–µ –ø—Ä–æ–¥–∞—é—Ç—Å—è)
    variants: [{
      price: "0.00",
      inventoryPolicy: "CONTINUE"
    }],
    
    // Metafields
    metafields: viewpoint.metafields.map(field => ({
      namespace: field.namespace,
      key: field.key,
      value: field.value,
      type: field.type
    }))
  };

  try {
    const result = await shopifyRequest(CREATE_PRODUCT_MUTATION, { input });
    
    if (result.data.productCreate.userErrors.length > 0) {
      console.error(`‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è:`, result.data.productCreate.userErrors);
      return false;
    }
    
    console.log(`‚úÖ –°–æ–∑–¥–∞–Ω–æ: ${result.data.productCreate.product.handle}`);
    return true;
  } catch (error) {
    console.error(`‚ùå –û—à–∏–±–∫–∞:`, error.message);
    return false;
  }
}

async function main() {
  console.log('üöÄ –ù–∞—á–∏–Ω–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É —Å–º–æ—Ç—Ä–æ–≤—ã—Ö –ø–ª–æ—â–∞–¥–æ–∫ –≤ Shopify...\n');
  console.log(`üìä –í—Å–µ–≥–æ –º–µ—Å—Ç: ${viewpointsData.length}\n`);

  let successCount = 0;
  let errorCount = 0;

  for (const viewpoint of viewpointsData) {
    const success = await uploadViewpoint(viewpoint);
    if (success) {
      successCount++;
    } else {
      errorCount++;
    }
    
    // –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –º–µ–∂–¥—É –∑–∞–ø—Ä–æ—Å–∞–º–∏
    await new Promise(resolve => setTimeout(resolve, 500));
  }

  console.log('\n' + '='.repeat(50));
  console.log(`‚úÖ –£—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω–æ: ${successCount}`);
  console.log(`‚ùå –û—à–∏–±–æ–∫: ${errorCount}`);
  console.log('='.repeat(50));
}

main().catch(console.error);
