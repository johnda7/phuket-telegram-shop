/**
 * üóÇÔ∏è –ì–õ–ê–í–ù–û–ï –ú–ï–ù–Æ PhuketDa
 * 
 * –°—Ç—Ä—É–∫—Ç—É—Ä–∞:
 * - 4 –û–°–ù–û–í–ù–´–• –°–ï–†–í–ò–°–ê (–ø—Ä–æ–¥–∞–∂–∏): –¢—É—Ä—ã, –ê—Ä–µ–Ω–¥–∞ –∞–≤—Ç–æ, –ù–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç—å, –û–±–º–µ–Ω –≤–∞–ª—é—Ç—ã
 * - –ü–æ–ª–µ–∑–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è (–≤—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω–æ–µ): –í—Å–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –¥–ª—è —Ç—É—Ä–∏—Å—Ç–æ–≤
 * 
 * –§–∏–ª–æ—Å–æ—Ñ–∏—è:
 * - –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ = –≤—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–π –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç –¥–ª—è —Ç—É—Ä–∏—Å—Ç–æ–≤ (–∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—ã–π)
 * - –í –∫–∞–∂–¥–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –º—ã –ø—Ä–æ–¥–∞–µ–º (—Å—Å—ã–ª–∫–∏ –Ω–∞ —Å–µ—Ä–≤–∏—Å—ã –≤–Ω–∏–∑—É)
 * - –ê–∫—Ü–µ–Ω—Ç –Ω–∞ 4 –æ—Å–Ω–æ–≤–Ω—ã—Ö —Å–µ—Ä–≤–∏—Å–∞—Ö (—ç—Ç–æ –Ω–∞—à–µ –æ—Å–Ω–æ–≤–Ω–æ–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ)
 */

import { useState } from "react";
import { Link } from "react-router-dom";
import { ChevronDown, ChevronRight, Ship, Car, Home, DollarSign, Info, Grid3x3 } from "lucide-react";
import {
  Sheet,
  SheetContent,
  SheetHeader,
  SheetTitle,
  SheetTrigger,
} from "@/components/ui/sheet";
import { Button } from "@/components/ui/button";
import { cn } from "@/lib/utils";
import { getAllServices } from "@/config/services";

interface MenuItem {
  icon: React.ComponentType<{ className?: string }>;
  label: string;
  href: string;
  description?: string;
  highlight?: boolean; // –î–ª—è –æ—Å–Ω–æ–≤–Ω—ã—Ö —Å–µ—Ä–≤–∏—Å–æ–≤
}

interface MainMenuProps {
  trigger?: React.ReactNode;
}

export const TourMenu = ({ trigger }: MainMenuProps) => {
  const [isOpen, setIsOpen] = useState(false);
  
  // 4 –û–°–ù–û–í–ù–´–• –°–ï–†–í–ò–°–ê (–ø—Ä–æ–¥–∞–∂–∏) - –∏–∑ —Ü–µ–Ω—Ç—Ä–∞–ª–∏–∑–æ–≤–∞–Ω–Ω–æ–≥–æ –∫–æ–Ω—Ñ–∏–≥–∞
  const services = getAllServices();
  
  // –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é: 4 —Å–µ—Ä–≤–∏—Å–∞ + –ü–æ–ª–µ–∑–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
  const mainMenuItems: MenuItem[] = [
    // –û–°–ù–û–í–ù–´–ï –°–ï–†–í–ò–°–´ (–ø—Ä–æ–¥–∞–∂–∏) - –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç!
    ...services.map(service => ({
      icon: service.icon,
      label: service.title,
      href: service.path,
      description: service.subtitle,
      highlight: true, // –í—ã–¥–µ–ª—è–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ —Å–µ—Ä–≤–∏—Å—ã
    })),
    // –ü–æ–ª–µ–∑–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è (–≤—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω–æ–µ)
    {
      icon: Info,
      label: "–ü–æ–ª–µ–∑–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è",
      href: "/categories",
      description: "–í—Å–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –¥–ª—è —Ç—É—Ä–∏—Å—Ç–æ–≤",
      highlight: false,
    }
  ];

  return (
    <Sheet open={isOpen} onOpenChange={setIsOpen}>
      <SheetTrigger asChild>
        {trigger || (
          <Button variant="ghost" size="sm" className="gap-2 min-h-[44px]">
            <span className="text-lg">‚ò∞</span>
            <span className="hidden sm:inline">–ú–µ–Ω—é</span>
          </Button>
        )}
      </SheetTrigger>
      <SheetContent side="left" className="w-[320px] sm:w-[380px] overflow-y-auto">
        <SheetHeader className="mb-6 pb-4 border-b border-gray-200">
          <SheetTitle className="text-2xl font-bold text-gray-900">
            PhuketDa
          </SheetTitle>
          <p className="text-xs text-gray-500 mt-1">–ö–æ–Ω—Å—å–µ—Ä–∂-—Å–µ—Ä–≤–∏—Å –Ω–∞ –ü—Ö—É–∫–µ—Ç–µ</p>
        </SheetHeader>
        
        <nav className="space-y-1">
          {mainMenuItems.map((item) => {
            const Icon = item.icon;
            return (
              <Link
                key={item.href}
                to={item.href}
                onClick={() => setIsOpen(false)}
                className={cn(
                  "flex items-start gap-3 px-4 py-3 rounded-xl transition-all group",
                  item.highlight
                    ? "bg-gradient-to-r from-blue-50 to-blue-50/50 hover:from-blue-100 hover:to-blue-100/50 border border-blue-100/50"
                    : "hover:bg-gray-50 border border-transparent"
                )}
              >
                <div className={cn(
                  "w-10 h-10 rounded-xl flex items-center justify-center flex-shrink-0 transition-all",
                  item.highlight
                    ? "bg-[#007AFF] text-white"
                    : "bg-gray-100 text-gray-600 group-hover:bg-gray-200"
                )}>
                  <Icon className="w-5 h-5" />
                </div>
                <div className="flex-1 min-w-0">
                  <div className={cn(
                    "font-semibold text-sm leading-tight mb-0.5",
                    item.highlight ? "text-gray-900" : "text-gray-700"
                  )}>
                    {item.label}
                  </div>
                  {item.description && (
                    <div className="text-xs text-gray-500 line-clamp-1">
                      {item.description}
                    </div>
                  )}
                </div>
                <ChevronRight className={cn(
                  "w-4 h-4 flex-shrink-0 transition-opacity",
                  item.highlight ? "text-[#007AFF] opacity-60" : "text-gray-400 opacity-0 group-hover:opacity-100"
                )} />
              </Link>
            );
          })}
        </nav>

        {/* –†–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å */}
        <div className="my-6 h-px bg-gray-200" />

        {/* –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Å—Å—ã–ª–∫–∏ */}
        <div className="space-y-1">
          <Link
            to="/map"
            onClick={() => setIsOpen(false)}
            className="flex items-center gap-3 px-4 py-2.5 rounded-lg hover:bg-gray-50 transition-all text-sm text-gray-700"
          >
            <Grid3x3 className="w-4 h-4 text-gray-500" />
            <span>–ö–∞—Ä—Ç–∞ –ø—É—Ç–µ—à–µ—Å—Ç–≤–µ–Ω–Ω–∏–∫–∞</span>
            <ChevronRight className="w-3 h-3 ml-auto text-gray-400 opacity-0 group-hover:opacity-100 transition-opacity" />
          </Link>
        </div>
      </SheetContent>
    </Sheet>
  );
};
