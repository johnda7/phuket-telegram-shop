// –î–æ–±–∞–≤–ª—è–µ–º placeholder —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –∫ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–º –ø—Ä–æ–¥—É–∫—Ç–∞–º
// –ò—Å–ø–æ–ª—å–∑—É–µ–º –∫–æ–≥–¥–∞ –ø—Ä–æ–¥—É–∫—Ç—ã —É–∂–µ —Å–æ–∑–¥–∞–Ω—ã, –Ω–æ –Ω–µ—Ç —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π

const ADMIN_TOKEN = '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';
const ADMIN_URL = 'https://phuket-telegram-shop-117ck.myshopify.com/admin/api/2025-07/graphql.json';

// –°–æ–∑–¥–∞–µ–º –ø—Ä–æ—Å—Ç—ã–µ placeholder –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ base64
const createPlaceholderImage = (title, color = '#3B82F6') => {
  const svg = `
<svg width="800" height="600" xmlns="http://www.w3.org/2000/svg">
  <defs>
    <linearGradient id="grad" x1="0%" y1="0%" x2="100%" y2="100%">
      <stop offset="0%" style="stop-color:${color};stop-opacity:1" />
      <stop offset="100%" style="stop-color:${color}CC;stop-opacity:1" />
    </linearGradient>
  </defs>
  <rect width="800" height="600" fill="url(#grad)"/>
  <rect x="50" y="50" width="700" height="500" fill="rgba(255,255,255,0.1)" stroke="rgba(255,255,255,0.3)" stroke-width="2" rx="20"/>
  <text x="400" y="280" font-family="Arial, sans-serif" font-size="20" font-weight="bold" text-anchor="middle" fill="white">
    ${title}
  </text>
  <text x="400" y="320" font-family="Arial, sans-serif" font-size="14" text-anchor="middle" fill="rgba(255,255,255,0.8)">
    Placeholder Image
  </text>
  <text x="400" y="500" font-family="Arial, sans-serif" font-size="12" text-anchor="middle" fill="rgba(255,255,255,0.6)">
    Replace with Real Photo
  </text>
</svg>`;
  
  return `data:image/svg+xml;base64,${Buffer.from(svg).toString('base64')}`;
};

// –°–ø–∏—Å–æ–∫ –ø—Ä–æ–¥—É–∫—Ç–æ–≤ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è placeholder —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π
const products = [
  {
    handle: 'central-phuket-floresta',
    title: 'Central Phuket Floresta',
    colors: ['#3B82F6', '#10B981', '#F59E0B']
  },
  {
    handle: 'robinson-lifestyle-phuket',
    title: 'Robinson Lifestyle Phuket',
    colors: ['#8B5CF6', '#EC4899', '#06B6D4']
  }
  // –î–æ–±–∞–≤–∏–º –æ—Å—Ç–∞–ª—å–Ω—ã–µ —Ç–æ—Ä–≥–æ–≤—ã–µ —Ü–µ–Ω—Ç—Ä—ã...
];

const GET_PRODUCT_ID_QUERY = `
  query productByHandle($handle: String!) {
    productByHandle(handle: $handle) {
      id
      title
      images(first: 10) {
        edges {
          node {
            id
            url
            altText
          }
        }
      }
    }
  }
`;

const CREATE_MEDIA_MUTATION = `
  mutation productCreateMedia($productId: ID!, $media: [CreateMediaInput!]!) {
    productCreateMedia(productId: $productId, media: $media) {
      media {
        id
        alt
      }
      userErrors {
        field
        message
      }
    }
  }
`;

async function addPlaceholderPhotos() {
  console.log('üñºÔ∏è –î–û–ë–ê–í–õ–Ø–ï–ú PLACEHOLDER –§–û–¢–û–ì–†–ê–§–ò–ò\n');
  console.log('üìã –°—Ç—Ä–∞—Ç–µ–≥–∏—è:');
  console.log('‚úÖ –î–æ–±–∞–≤–ª—è–µ–º 2-3 placeholder –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∫ –∫–∞–∂–¥–æ–º—É –ø—Ä–æ–¥—É–∫—Ç—É');
  console.log('‚úÖ –†–∞–∑–Ω—ã–µ —Ü–≤–µ—Ç–∞ –¥–ª—è –≤–∏–∑—É–∞–ª—å–Ω–æ–≥–æ —Ä–∞–∑–Ω–æ–æ–±—Ä–∞–∑–∏—è');
  console.log('‚úÖ –ü–æ–∑–∂–µ –∑–∞–º–µ–Ω–∏–º –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏\n');
  
  let successCount = 0;
  let errorCount = 0;
  
  for (let i = 0; i < products.length; i++) {
    const product = products[i];
    console.log(`üì¶ [${i + 1}/${products.length}] –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º: ${product.title}`);
    
    try {
      // 1. –ü–æ–ª—É—á–∞–µ–º ID –ø—Ä–æ–¥—É–∫—Ç–∞ –∏ –ø—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ —Ñ–æ—Ç–æ
      const productResponse = await fetch(ADMIN_URL, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
          'X-Shopify-Access-Token': ADMIN_TOKEN,
        },
        body: JSON.stringify({
          query: GET_PRODUCT_ID_QUERY,
          variables: { handle: product.handle }
        }),
      });
      
      const productResult = await productResponse.json();
      
      if (productResult.errors || !productResult.data.productByHandle) {
        console.error(`   ‚ùå –ü—Ä–æ–¥—É–∫—Ç ${product.handle} –Ω–µ –Ω–∞–π–¥–µ–Ω`);
        errorCount++;
        continue;
      }
      
      const productData = productResult.data.productByHandle;
      const productId = productData.id;
      const existingImages = productData.images.edges;
      
      console.log(`   ‚úÖ –ù–∞–π–¥–µ–Ω –ø—Ä–æ–¥—É–∫—Ç: ${productId}`);
      console.log(`   üì∑ –°—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö —Ñ–æ—Ç–æ: ${existingImages.length}`);
      
      // –ï—Å–ª–∏ —É–∂–µ –µ—Å—Ç—å —Ñ–æ—Ç–æ, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º
      if (existingImages.length > 0) {
        console.log(`   ‚ö†Ô∏è –£ –ø—Ä–æ–¥—É–∫—Ç–∞ —É–∂–µ –µ—Å—Ç—å —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º`);
        continue;
      }
      
      // 2. –°–æ–∑–¥–∞–µ–º placeholder –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
      const placeholderImages = product.colors.map((color, index) => 
        createPlaceholderImage(product.title, color)
      );
      
      console.log(`   üé® –°–æ–∑–¥–∞–µ–º ${placeholderImages.length} placeholder –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π`);
      
      // 3. –ó–∞–≥—Ä—É–∂–∞–µ–º placeholder –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
      const mediaResponse = await fetch(ADMIN_URL, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
          'X-Shopify-Access-Token': ADMIN_TOKEN,
        },
        body: JSON.stringify({
          query: CREATE_MEDIA_MUTATION,
          variables: {
            productId: productId,
            media: placeholderImages.map((img, index) => ({
              originalSource: img,
              alt: `${product.title} - Placeholder ${index + 1}`,
              mediaContentType: "IMAGE"
            }))
          }
        }),
      });
      
      const mediaResult = await mediaResponse.json();
      
      if (mediaResult.errors) {
        console.error(`   ‚ùå –û—à–∏–±–∫–∏ –∑–∞–≥—Ä—É–∑–∫–∏:`, mediaResult.errors);
        errorCount++;
      } else if (mediaResult.data.productCreateMedia.userErrors.length > 0) {
        console.error(`   ‚ùå –û—à–∏–±–∫–∏ —Å–æ–∑–¥–∞–Ω–∏—è –º–µ–¥–∏–∞:`, mediaResult.data.productCreateMedia.userErrors);
        errorCount++;
      } else {
        console.log(`   ‚úÖ –£—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–æ ${placeholderImages.length} placeholder –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π!`);
        successCount++;
      }
      
    } catch (error) {
      console.error(`   ‚ùå –û—à–∏–±–∫–∞:`, error.message);
      errorCount++;
    }
    
    // –ü–∞—É–∑–∞ –º–µ–∂–¥—É –∑–∞–ø—Ä–æ—Å–∞–º–∏
    await new Promise(resolve => setTimeout(resolve, 2000));
  }
  
  console.log('\nüìä === –†–ï–ó–£–õ–¨–¢–ê–¢–´ ===');
  console.log(`‚úÖ –£—Å–ø–µ—à–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ: ${successCount}`);
  console.log(`‚ùå –û—à–∏–±–æ–∫: ${errorCount}`);
  console.log(`üì¶ –í—Å–µ–≥–æ –ø—Ä–æ–¥—É–∫—Ç–æ–≤: ${products.length}`);
  
  console.log('\nüéØ –°–õ–ï–î–£–Æ–©–ò–ï –®–ê–ì–ò:');
  console.log('1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –Ω–∞ —Å–∞–π—Ç–µ');
  console.log('2. –î–æ–±–∞–≤—å—Ç–µ —Ä–µ–∞–ª—å–Ω—ã–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –∫–æ–º–∞–Ω–¥–æ–π:');
  console.log('   node scripts/add-real-photos-later.cjs <handle>');
  console.log('3. –ü—Ä–∏–º–µ–Ω–∏—Ç–µ —ç—Ç–æ—Ç –ø–æ–¥—Ö–æ–¥ –∫ –¥—Ä—É–≥–∏–º –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º');
}

addPlaceholderPhotos();
