const https = require('https');

const SHOPIFY_STORE = 'phuket-telegram-shop-117ck.myshopify.com';
const SHOPIFY_ACCESS_TOKEN = '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';

// –î–∞–Ω–Ω—ã–µ –¥–ª—è –≤—Å–µ—Ö —Ç–æ—Ä–≥–æ–≤—ã—Ö —Ü–µ–Ω—Ç—Ä–æ–≤
const shoppingCentersData = {
  'jungceylon-shopping-center': {
    title: 'Jungceylon Shopping Center (–î–∂–∞–Ω–≥—Ü–µ–ª–æ–Ω)',
    shortTitle: 'Jungceylon (–î–∂–∞–Ω–≥—Ü–µ–ª–æ–Ω)',
    description: '–ö—Ä—É–ø–Ω–µ–π—à–∏–π –º–æ–ª–ª –≤ –ü–∞—Ç–æ–Ω–≥–µ —Å –∫–∏–Ω–æ—Ç–µ–∞—Ç—Ä–æ–º, –±–æ—É–ª–∏–Ω–≥–æ–º –∏ —à–∏—Ä–æ–∫–∏–º –≤—ã–±–æ—Ä–æ–º –º–∞–≥–∞–∑–∏–Ω–æ–≤',
    rating: 4.4,
    priceLevel: 2,
    district: 'Patong',
    workingHours: '11:00-23:00 –µ–∂–µ–¥–Ω–µ–≤–Ω–æ',
    features: [
      { icon: 'üé¨', title: '–ö–∏–Ω–æ—Ç–µ–∞—Ç—Ä', desc: 'Major Cineplex' },
      { icon: 'üé≥', title: '–ë–æ—É–ª–∏–Ω–≥', desc: '–†–∞–∑–≤–ª–µ—á–µ–Ω–∏—è –¥–ª—è –≤—Å–µ–π —Å–µ–º—å–∏' },
      { icon: 'üèñÔ∏è', title: '–†—è–¥–æ–º —Å –ø–ª—è–∂–µ–º', desc: '5 –º–∏–Ω—É—Ç –¥–æ –ü–∞—Ç–æ–Ω–≥–∞' }
    ],
    amenities: ['Wi-Fi', '–ü–∞—Ä–∫–æ–≤–∫–∞', '–§—É–¥-–∫–æ—Ä—Ç', '–ö–∏–Ω–æ', '–ë–æ—É–ª–∏–Ω–≥', '–ë–∞–Ω–∫–æ–º–∞—Ç']
  },
  'premium-outlet-phuket': {
    title: 'Premium Outlet Phuket (–ü—Ä–µ–º–∏—É–º –ê—É—Ç–ª–µ—Ç –ü—Ö—É–∫–µ—Ç)',
    shortTitle: 'Premium Outlet (–ü—Ä–µ–º–∏—É–º –ê—É—Ç–ª–µ—Ç)',
    description: '–ê—É—Ç–ª–µ—Ç-—Ü–µ–Ω—Ç—Ä —Å–æ —Å–∫–∏–¥–∫–∞–º–∏ –¥–æ 70% –Ω–∞ –±—Ä–µ–Ω–¥–æ–≤—É—é –æ–¥–µ–∂–¥—É Nike, Adidas, Levi\'s –∏ –¥—Ä—É–≥–∏–µ',
    rating: 4.3,
    priceLevel: 2,
    district: 'Thalang',
    workingHours: '10:00-22:00 –µ–∂–µ–¥–Ω–µ–≤–Ω–æ',
    features: [
      { icon: 'üí∞', title: '–°–∫–∏–¥–∫–∏ –¥–æ 70%', desc: '–ö—Ä—É–≥–ª—ã–π –≥–æ–¥' },
      { icon: 'üëï', title: '–ë—Ä–µ–Ω–¥—ã', desc: 'Nike, Adidas, Levi\'s' },
      { icon: '‚úàÔ∏è', title: '–†—è–¥–æ–º —Å –∞—ç—Ä–æ–ø–æ—Ä—Ç–æ–º', desc: '15 –º–∏–Ω—É—Ç' }
    ],
    amenities: ['Wi-Fi', '–ü–∞—Ä–∫–æ–≤–∫–∞', '–§—É–¥-–∫–æ—Ä—Ç', '–ë–∞–Ω–∫–æ–º–∞—Ç', '–°–∫–∏–¥–∫–∏', '–ë—Ä–µ–Ω–¥—ã']
  },
  'big-c-supercenter-phuket': {
    title: 'Big C Supercenter Phuket (–ë–∏–≥ –°–∏ –°—É–ø–µ—Ä—Ü–µ–Ω—Ç—Ä –ü—Ö—É–∫–µ—Ç)',
    shortTitle: 'Big C (–ë–∏–≥ –°–∏)',
    description: '–ë–æ–ª—å—à–æ–π —Å—É–ø–µ—Ä–º–∞—Ä–∫–µ—Ç —Å –ø—Ä–æ–¥—É–∫—Ç–∞–º–∏, –æ–¥–µ–∂–¥–æ–π, —ç–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–æ–π –∏ —Ñ—É–¥-–∫–æ—Ä—Ç–æ–º',
    rating: 4.2,
    priceLevel: 1,
    district: 'Chalong',
    workingHours: '08:00-22:00 –µ–∂–µ–¥–Ω–µ–≤–Ω–æ',
    features: [
      { icon: 'üõí', title: '–°—É–ø–µ—Ä–º–∞—Ä–∫–µ—Ç', desc: '–ü—Ä–æ–¥—É–∫—Ç—ã –∏ —Ç–æ–≤–∞—Ä—ã' },
      { icon: 'üçΩÔ∏è', title: '–§—É–¥-–∫–æ—Ä—Ç', desc: '–¢–∞–π—Å–∫–∞—è –∏ –º–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω–∞—è –∫—É—Ö–Ω—è' },
      { icon: 'üí∞', title: '–ë—é–¥–∂–µ—Ç–Ω–æ', desc: '–î–æ—Å—Ç—É–ø–Ω—ã–µ —Ü–µ–Ω—ã' }
    ],
    amenities: ['Wi-Fi', '–ü–∞—Ä–∫–æ–≤–∫–∞', '–§—É–¥-–∫–æ—Ä—Ç', '–ë–∞–Ω–∫–æ–º–∞—Ç', '–ü—Ä–æ–¥—É–∫—Ç—ã', '–≠–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∞']
  },
  'tesco-lotus-phuket': {
    title: 'Tesco Lotus Phuket (–¢–µ—Å–∫–æ –õ–æ—Ç—É—Å –ü—Ö—É–∫–µ—Ç)',
    shortTitle: 'Tesco Lotus (–¢–µ—Å–∫–æ –õ–æ—Ç—É—Å)',
    description: '–ü–æ–ø—É–ª—è—Ä–Ω—ã–π –≥–∏–ø–µ—Ä–º–∞—Ä–∫–µ—Ç —Å —à–∏—Ä–æ–∫–∏–º –∞—Å—Å–æ—Ä—Ç–∏–º–µ–Ω—Ç–æ–º —Ç–æ–≤–∞—Ä–æ–≤ –ø–æ –¥–æ—Å—Ç—É–ø–Ω—ã–º —Ü–µ–Ω–∞–º',
    rating: 4.1,
    priceLevel: 2,
    district: 'Chalong',
    workingHours: '08:00-22:00 –µ–∂–µ–¥–Ω–µ–≤–Ω–æ',
    features: [
      { icon: 'üåç', title: '–ò–º–ø–æ—Ä—Ç—ã', desc: '–ú–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã' },
      { icon: '‚≠ê', title: '–ö–∞—á–µ—Å—Ç–≤–æ', desc: '–ü—Ä–æ–≤–µ—Ä–µ–Ω–Ω—ã–µ –±—Ä–µ–Ω–¥—ã' },
      { icon: 'üë•', title: '–î–ª—è —ç–∫—Å–ø–∞—Ç–æ–≤', desc: '–ó–Ω–∞–∫–æ–º—ã–µ —Ç–æ–≤–∞—Ä—ã' }
    ],
    amenities: ['Wi-Fi', '–ü–∞—Ä–∫–æ–≤–∫–∞', '–§—É–¥-–∫–æ—Ä—Ç', '–ë–∞–Ω–∫–æ–º–∞—Ç', '–ò–º–ø–æ—Ä—Ç—ã', '–ö–∞—á–µ—Å—Ç–≤–æ']
  },
  'robinson-lifestyle-phuket': {
    title: 'Robinson Lifestyle Phuket (–†–æ–±–∏–Ω—Å–æ–Ω –õ–∞–π—Ñ—Å—Ç–∞–π–ª –ü—Ö—É–∫–µ—Ç)',
    shortTitle: 'Robinson (–†–æ–±–∏–Ω—Å–æ–Ω)',
    description: '–¢–æ—Ä–≥–æ–≤—ã–π —Ü–µ–Ω—Ç—Ä —Å –º–æ–¥–Ω–æ–π –æ–¥–µ–∂–¥–æ–π, –∫–æ—Å–º–µ—Ç–∏–∫–æ–π –∏ —Ä–µ—Å—Ç–æ—Ä–∞–Ω–∞–º–∏',
    rating: 4.3,
    priceLevel: 2,
    district: 'Karon',
    workingHours: '10:00-22:00 –µ–∂–µ–¥–Ω–µ–≤–Ω–æ',
    features: [
      { icon: 'üëó', title: '–ú–æ–¥–∞', desc: '–û–¥–µ–∂–¥–∞ –∏ –∞–∫—Å–µ—Å—Å—É–∞—Ä—ã' },
      { icon: 'üíÑ', title: '–ö–æ—Å–º–µ—Ç–∏–∫–∞', desc: 'Sephora –∏ –¥—Ä—É–≥–∏–µ' },
      { icon: 'üèñÔ∏è', title: '–†—è–¥–æ–º —Å –ø–ª—è–∂–µ–º', desc: '5 –º–∏–Ω—É—Ç –¥–æ –ö–∞—Ä–æ–Ω–∞' }
    ],
    amenities: ['Wi-Fi', '–ü–∞—Ä–∫–æ–≤–∫–∞', '–§—É–¥-–∫–æ—Ä—Ç', '–ö–∏–Ω–æ', '–ú–æ–¥–∞', '–ö–æ—Å–º–µ—Ç–∏–∫–∞']
  },
  'patong-night-market': {
    title: 'Patong Night Market (–ù–æ—á–Ω–æ–π —Ä—ã–Ω–æ–∫ –ü–∞—Ç–æ–Ω–≥)',
    shortTitle: 'Night Market (–ù–æ—á–Ω–æ–π —Ä—ã–Ω–æ–∫)',
    description: '–ù–æ—á–Ω–æ–π —Ä—ã–Ω–æ–∫ –≤ —Ü–µ–Ω—Ç—Ä–µ –ü–∞—Ç–æ–Ω–≥–∞ —Å —Å—É–≤–µ–Ω–∏—Ä–∞–º–∏, –æ–¥–µ–∂–¥–æ–π –∏ —É–ª–∏—á–Ω–æ–π –µ–¥–æ–π',
    rating: 4.5,
    priceLevel: 1,
    district: 'Patong',
    workingHours: '17:00-23:00 –µ–∂–µ–¥–Ω–µ–≤–Ω–æ',
    features: [
      { icon: 'üåô', title: '–ù–æ—á–Ω–æ–π —Ä—ã–Ω–æ–∫', desc: '–ü–æ—Å–ª–µ –∑–∞–∫–∞—Ç–∞' },
      { icon: 'üí¨', title: '–¢–æ—Ä–≥', desc: '–ú–æ–∂–Ω–æ —Ç–æ—Ä–≥–æ–≤–∞—Ç—å—Å—è' },
      { icon: 'üçú', title: '–£–ª–∏—á–Ω–∞—è –µ–¥–∞', desc: '–¢–∞–π—Å–∫–∏–µ –¥–µ–ª–∏–∫–∞—Ç–µ—Å—ã' }
    ],
    amenities: ['–£–ª–∏—á–Ω–∞—è –µ–¥–∞', '–°—É–≤–µ–Ω–∏—Ä—ã', '–¢–æ—Ä–≥', '–ù–æ—á–Ω–æ–π', '–†—ã–Ω–æ–∫', '–†–∞–∑–≤–ª–µ—á–µ–Ω–∏—è']
  }
};

function generateTelegramStyleDescription(center) {
  return `
<div class="space-y-6">
  <!-- Hero Section -->
  <div class="bg-gradient-to-r from-blue-500 to-purple-600 rounded-2xl p-6 text-white">
    <h1 class="text-2xl font-bold mb-2">üè¢ ${center.title}</h1>
    <p class="text-blue-100 text-lg">${center.description}</p>
    <div class="flex items-center gap-4 mt-4">
      <div class="flex items-center gap-1">
        <span class="text-yellow-300">‚≠ê</span>
        <span class="font-semibold">${center.rating}</span>
      </div>
      <div class="flex items-center gap-1">
        <span class="text-green-300">üí∞</span>
        <span>${'$'.repeat(center.priceLevel)}</span>
      </div>
      <div class="flex items-center gap-1">
        <span class="text-blue-300">üìç</span>
        <span>${center.district}</span>
      </div>
    </div>
  </div>

  <!-- Quick Info Cards -->
  <div class="grid grid-cols-2 gap-4">
    <div class="bg-white rounded-xl p-4 shadow-sm border border-gray-100">
      <div class="flex items-center gap-2 mb-2">
        <span class="text-2xl">üïê</span>
        <span class="font-semibold text-gray-900">–ß–∞—Å—ã —Ä–∞–±–æ—Ç—ã</span>
      </div>
      <p class="text-gray-600 text-sm">${center.workingHours}</p>
    </div>
    
    <div class="bg-white rounded-xl p-4 shadow-sm border border-gray-100">
      <div class="flex items-center gap-2 mb-2">
        <span class="text-2xl">üöó</span>
        <span class="font-semibold text-gray-900">–ü–∞—Ä–∫–æ–≤–∫–∞</span>
      </div>
      <p class="text-gray-600 text-sm">–ë–µ—Å–ø–ª–∞—Ç–Ω–∞—è</p>
    </div>
  </div>

  <!-- Main Description -->
  <div class="bg-white rounded-xl p-6 shadow-sm border border-gray-100">
    <h2 class="text-xl font-bold text-gray-900 mb-4">–û —Ç–æ—Ä–≥–æ–≤–æ–º —Ü–µ–Ω—Ç—Ä–µ</h2>
    <p class="text-gray-600 leading-relaxed mb-4">
      ${center.description}
    </p>
  </div>

  <!-- Features Grid -->
  <div class="grid grid-cols-1 md:grid-cols-3 gap-4">
    ${center.features.map(feature => `
      <div class="bg-gradient-to-br from-orange-50 to-orange-100 rounded-xl p-5 border border-orange-200">
        <div class="flex items-center gap-3 mb-3">
          <span class="text-3xl">${feature.icon}</span>
          <h3 class="text-lg font-bold text-gray-900">${feature.title}</h3>
        </div>
        <p class="text-gray-600 text-sm">${feature.desc}</p>
      </div>
    `).join('')}
  </div>

  <!-- Must-See Highlight -->
  <div class="bg-gradient-to-r from-yellow-400 to-orange-500 rounded-xl p-5 text-white">
    <div class="flex items-center gap-3 mb-3">
      <span class="text-2xl">‚≠ê</span>
      <h3 class="text-lg font-bold">–û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –∫ –ø–æ—Å–µ—â–µ–Ω–∏—é!</h3>
    </div>
    <div class="space-y-2">
      <div class="flex items-center gap-2">
        <span class="text-2xl">${center.features[0].icon}</span>
        <div>
          <p class="font-semibold">${center.features[0].title}</p>
          <p class="text-yellow-100 text-sm">${center.features[0].desc}</p>
        </div>
      </div>
    </div>
  </div>

  <!-- Amenities -->
  <div class="bg-white rounded-xl p-6 shadow-sm border border-gray-100">
    <h3 class="text-lg font-bold text-gray-900 mb-4">–£–¥–æ–±—Å—Ç–≤–∞</h3>
    <div class="grid grid-cols-2 md:grid-cols-3 gap-3">
      ${center.amenities.map(amenity => `
        <div class="flex items-center gap-2 p-2 rounded-lg bg-gray-50">
          <span class="text-green-500">üì∂</span>
          <span class="text-sm text-gray-700">${amenity}</span>
        </div>
      `).join('')}
    </div>
  </div>

  <!-- Action Buttons - Telegram WebApp Style -->
  <div class="space-y-4">
    <h3 class="text-lg font-bold text-gray-900">–ü–ª–∞–Ω–∏—Ä—É–µ—Ç–µ –ø–æ–µ–∑–¥–∫—É?</h3>
    
    <div class="grid grid-cols-1 md:grid-cols-3 gap-3">
      <a href="/phuket" class="group bg-gradient-to-r from-blue-500 to-blue-600 text-white rounded-xl p-4 text-center hover:from-blue-600 hover:to-blue-700 transition-all duration-200 shadow-lg hover:shadow-xl transform hover:scale-105">
        <div class="flex items-center justify-center gap-2 mb-2">
          <span class="text-xl">üèùÔ∏è</span>
          <span class="font-semibold">–¢—É—Ä—ã</span>
        </div>
        <p class="text-blue-100 text-sm">–° –≥–∏–¥–æ–º</p>
      </a>
      
      <a href="/services/car-rental" class="group bg-gradient-to-r from-green-500 to-green-600 text-white rounded-xl p-4 text-center hover:from-green-600 hover:to-green-700 transition-all duration-200 shadow-lg hover:shadow-xl transform hover:scale-105">
        <div class="flex items-center justify-center gap-2 mb-2">
          <span class="text-xl">üöó</span>
          <span class="font-semibold">–ê—Ä–µ–Ω–¥–∞ –∞–≤—Ç–æ</span>
        </div>
        <p class="text-green-100 text-sm">–°–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ</p>
      </a>
      
      <a href="/services/currency-exchange" class="group bg-gradient-to-r from-purple-500 to-purple-600 text-white rounded-xl p-4 text-center hover:from-purple-600 hover:to-purple-700 transition-all duration-200 shadow-lg hover:shadow-xl transform hover:scale-105">
        <div class="flex items-center justify-center gap-2 mb-2">
          <span class="text-xl">üí±</span>
          <span class="font-semibold">–û–±–º–µ–Ω –≤–∞–ª—é—Ç—ã</span>
        </div>
        <p class="text-purple-100 text-sm">–í—ã–≥–æ–¥–Ω—ã–π –∫—É—Ä—Å</p>
      </a>
    </div>
  </div>

  <!-- Final CTA -->
  <div class="bg-gradient-to-r from-gray-50 to-gray-100 rounded-xl p-6 text-center">
    <p class="text-gray-600 italic">
      ${center.shortTitle} ‚Äî —ç—Ç–æ –æ—Ç–ª–∏—á–Ω–æ–µ –º–µ—Å—Ç–æ –¥–ª—è —à–æ–ø–∏–Ω–≥–∞, —Ä–∞–∑–≤–ª–µ—á–µ–Ω–∏–π –∏ –∑–Ω–∞–∫–æ–º—Å—Ç–≤–∞ —Å –º–µ—Å—Ç–Ω–æ–π –∫—É–ª—å—Ç—É—Ä–æ–π. 
      –ò–¥–µ–∞–ª—å–Ω–æ –ø–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è —Ç—É—Ä–∏—Å—Ç–æ–≤ –∏ –º–µ—Å—Ç–Ω—ã—Ö –∂–∏—Ç–µ–ª–µ–π.
    </p>
  </div>
</div>
`;
}

async function updateAllShoppingCenters() {
  try {
    console.log('üöÄ –û–±–Ω–æ–≤–ª—è–µ–º –≤—Å–µ —Ç–æ—Ä–≥–æ–≤—ã–µ —Ü–µ–Ω—Ç—Ä—ã –≤ —Å—Ç–∏–ª–µ Telegram WebApp...');
    
    for (const [handle, centerData] of Object.entries(shoppingCentersData)) {
      console.log(`\nüìù –û–±–Ω–æ–≤–ª—è–µ–º ${centerData.title}...`);
      
      // 1. –ü–æ–ª—É—á–∏—Ç—å ID –ø—Ä–æ–¥—É–∫—Ç–∞
      const productId = await getProductId(handle);
      if (!productId) {
        console.log(`‚ùå –ü—Ä–æ–¥—É–∫—Ç ${handle} –Ω–µ –Ω–∞–π–¥–µ–Ω, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º`);
        continue;
      }
      
      console.log(`‚úÖ ID –ø—Ä–æ–¥—É–∫—Ç–∞: ${productId}`);
      
      // 2. –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –æ–ø–∏—Å–∞–Ω–∏–µ
      const descriptionHtml = generateTelegramStyleDescription(centerData);
      
      // 3. –û–±–Ω–æ–≤–∏—Ç—å –æ–ø–∏—Å–∞–Ω–∏–µ
      const mutation = `
        mutation {
          productUpdate(input: {
            id: "${productId}",
            title: "${centerData.title}",
            descriptionHtml: "${descriptionHtml.replace(/"/g, '\\"')}"
          }) {
            product { 
              id 
              title 
              descriptionHtml
            }
            userErrors { 
              field 
              message 
            }
          }
        }
      `;
      
      const result = await makeGraphQLRequest(mutation);
      
      if (result.data?.productUpdate?.userErrors?.length > 0) {
        console.error(`‚ùå –û—à–∏–±–∫–∏ GraphQL –¥–ª—è ${handle}:`, result.data.productUpdate.userErrors);
        continue;
      }
      
      console.log(`‚úÖ ${centerData.title} –æ–±–Ω–æ–≤–ª–µ–Ω —É—Å–ø–µ—à–Ω–æ!`);
      
      // –ü–∞—É–∑–∞ –º–µ–∂–¥—É –∑–∞–ø—Ä–æ—Å–∞–º–∏
      await new Promise(resolve => setTimeout(resolve, 1500));
    }
    
    console.log('\nüéâ –í—Å–µ —Ç–æ—Ä–≥–æ–≤—ã–µ —Ü–µ–Ω—Ç—Ä—ã –æ–±–Ω–æ–≤–ª–µ–Ω—ã!');
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error.message);
  }
}

async function getProductId(handle) {
  const query = `
    query {
      products(first: 10, query: "handle:${handle}") {
        edges {
          node {
            id
            handle
            title
          }
        }
      }
    }
  `;
  
  const result = await makeGraphQLRequest(query);
  const product = result.data?.products?.edges?.[0]?.node;
  return product?.id;
}

async function makeGraphQLRequest(query) {
  return new Promise((resolve, reject) => {
    const data = JSON.stringify({ query });
    
    const options = {
      hostname: SHOPIFY_STORE,
      path: '/admin/api/2025-07/graphql.json',
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
        'X-Shopify-Access-Token': SHOPIFY_ACCESS_TOKEN,
        'Content-Length': Buffer.byteLength(data)
      }
    };
    
    const req = https.request(options, (res) => {
      let responseData = '';
      res.on('data', (chunk) => { responseData += chunk; });
      res.on('end', () => {
        try {
          const parsed = JSON.parse(responseData);
          resolve(parsed);
        } catch (error) {
          reject(new Error(`Failed to parse response: ${error.message}`));
        }
      });
    });
    
    req.on('error', reject);
    req.write(data);
    req.end();
  });
}

// –ó–∞–ø—É—Å–∫
updateAllShoppingCenters();
