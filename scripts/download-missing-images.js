/**
 * –°–∫—Ä–∏–ø—Ç –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π —Ç—É—Ä–æ–≤
 * –ò—Å–ø–æ–ª—å–∑—É–µ—Ç Unsplash API –¥–ª—è –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö —Ñ–æ—Ç–æ
 */

const https = require('https');
const fs = require('fs');
const path = require('path');

// –ù–µ–¥–æ—Å—Ç–∞—é—â–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
const missingImages = [
  {
    name: 'similan-islands-main.jpg',
    query: 'similan islands thailand snorkeling',
    // Unsplash photo ID –¥–ª—è –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ —Ñ–æ—Ç–æ
    unsplashId: 'CIuakYIjadc' // –ö—Ä–∞—Å–∏–≤–æ–µ —Ñ–æ—Ç–æ –°–∏–º–∏–ª–∞–Ω—Å–∫–∏—Ö –æ—Å—Ç—Ä–æ–≤–æ–≤
  },
  {
    name: 'similan-islands-underwater.jpg',
    query: 'similan islands underwater coral',
    unsplashId: 'Q_Sei-TqSlc' // –ü–æ–¥–≤–æ–¥–Ω–æ–µ —Ñ–æ—Ç–æ
  },
  {
    name: 'krabi-4-islands-main.jpg',
    query: 'krabi four islands thailand',
    unsplashId: 'TrhLCn1abMU' // –ö—Ä–∞—Å–∏–≤—ã–µ —Å–∫–∞–ª—ã –ö—Ä–∞–±–∏
  },
  {
    name: 'krabi-railay-beach.jpg',
    query: 'railay beach krabi',
    unsplashId: 'FmB7IdFjRqM' // Railay Beach
  },
  {
    name: 'sunset-cruise-main.jpg',
    query: 'phuket sunset cruise yacht',
    unsplashId: 'RCAhiGJsUUE' // –ó–∞–∫–∞—Ç –Ω–∞ —è—Ö—Ç–µ
  },
  {
    name: 'sunset-cruise-romantic.jpg',
    query: 'romantic sunset cruise phuket',
    unsplashId: 'FIKD9t5_5zQ' // –†–æ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∏–π –∑–∞–∫–∞—Ç
  }
];

const ASSETS_DIR = path.join(__dirname, '../src/assets');

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å Unsplash
function downloadUnsplashImage(photoId, filename) {
  return new Promise((resolve, reject) => {
    // Unsplash API endpoint –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–æ—Ç–æ –≤ –≤—ã—Å–æ–∫–æ–º —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–∏
    const url = `https://images.unsplash.com/photo-${photoId}?w=1920&q=80&fm=jpg`;
    
    const filePath = path.join(ASSETS_DIR, filename);
    const file = fs.createWriteStream(filePath);
    
    console.log(`üì• –ó–∞–≥—Ä—É–∂–∞—é ${filename}...`);
    
    https.get(url, (response) => {
      if (response.statusCode !== 200) {
        reject(new Error(`Failed to download ${filename}: ${response.statusCode}`));
        return;
      }
      
      response.pipe(file);
      
      file.on('finish', () => {
        file.close();
        console.log(`‚úÖ ${filename} –∑–∞–≥—Ä—É–∂–µ–Ω–æ!`);
        resolve();
      });
    }).on('error', (err) => {
      fs.unlink(filePath, () => {});
      reject(err);
    });
  });
}

// –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
async function downloadAllImages() {
  console.log('üöÄ –ù–∞—á–∏–Ω–∞—é –∑–∞–≥—Ä—É–∑–∫—É –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π...\n');
  
  for (const image of missingImages) {
    try {
      await downloadUnsplashImage(image.unsplashId, image.name);
      // –ü–∞—É–∑–∞ –º–µ–∂–¥—É –∑–∞–ø—Ä–æ—Å–∞–º–∏ —á—Ç–æ–±—ã –Ω–µ –ø–µ—Ä–µ–≥—Ä—É–∑–∏—Ç—å API
      await new Promise(resolve => setTimeout(resolve, 500));
    } catch (error) {
      console.error(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ ${image.name}:`, error.message);
    }
  }
  
  console.log('\nüéâ –ó–∞–≥—Ä—É–∑–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!');
  console.log(`\nüìä –í—Å–µ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –≤ src/assets: ${fs.readdirSync(ASSETS_DIR).filter(f => f.endsWith('.jpg')).length}`);
}

// –ó–∞–ø—É—Å–∫
if (!fs.existsSync(ASSETS_DIR)) {
  fs.mkdirSync(ASSETS_DIR, { recursive: true });
}

downloadAllImages().catch(console.error);
