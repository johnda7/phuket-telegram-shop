#!/usr/bin/env node

/**
 * üîß –ò–°–ü–†–ê–í–õ–Ø–ï–ú –ê–ù–ì–õ–ò–ô–°–ö–ò–ô –¢–ï–ö–°–¢ –í –û–ü–ò–°–ê–ù–ò–ò
 * 
 * –ó–∞–º–µ–Ω—è–µ–º:
 * - "Must-see!" ‚Üí "–û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –∫ –ø–æ—Å–µ—â–µ–Ω–∏—é!"
 * - "AR TRICK EYE" ‚Üí "–ú—É–∑–µ–π 3D-–∏–ª–ª—é–∑–∏–π"
 * - "Apple —Ä–µ—Å–µ–ª–ª–µ—Ä" ‚Üí "Apple Store"
 * - –§–∏–æ–ª–µ—Ç–æ–≤—ã–µ –≥—Ä–∞–¥–∏–µ–Ω—Ç—ã ‚Üí –°–∏–Ω–∏–µ (Telegram —Å—Ç–∏–ª—å)
 */

const fs = require('fs');

// Shopify Admin API –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
const SHOPIFY_STORE = 'phuket-telegram-shop-117ck.myshopify.com';
const ADMIN_TOKEN = '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';

async function shopifyAdminRequest(query, variables = {}) {
  const response = await fetch(`https://${SHOPIFY_STORE}/admin/api/2025-07/graphql.json`, {
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
      'X-Shopify-Access-Token': ADMIN_TOKEN,
    },
    body: JSON.stringify({ query, variables }),
  });

  if (!response.ok) {
    throw new Error(`HTTP ${response.status}: ${response.statusText}`);
  }

  return await response.json();
}

async function getProductByHandle(handle) {
  const query = `
    query getProduct($handle: String!) {
      productByHandle(handle: $handle) {
        id
        title
        descriptionHtml
      }
    }
  `;

  const data = await shopifyAdminRequest(query, { handle });
  
  if (data.errors) {
    console.error('‚ùå GraphQL Errors:', data.errors);
    throw new Error('Failed to fetch product');
  }

  return data.data.productByHandle;
}

async function updateProductDescription(productId, html) {
  const mutation = `
    mutation updateProduct($id: ID!, $descriptionHtml: String!) {
      productUpdate(input: {
        id: $id,
        descriptionHtml: $descriptionHtml
      }) {
        product {
          id
          title
          descriptionHtml
        }
        userErrors {
          field
          message
        }
      }
    }
  `;

  const variables = {
    id: productId,
    descriptionHtml: html
  };

  const data = await shopifyAdminRequest(mutation, variables);

  if (data.data.productUpdate.userErrors.length > 0) {
    console.error('‚ùå User Errors:', data.data.productUpdate.userErrors);
    throw new Error('Failed to update product');
  }
  return data.data.productUpdate;
}

async function main() {
  console.log('üîß –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –∞–Ω–≥–ª–∏–π—Å–∫–∏–π —Ç–µ–∫—Å—Ç –≤ –æ–ø–∏—Å–∞–Ω–∏–∏...\n');

  try {
    // –ü–æ–ª—É—á–∞–µ–º –ø—Ä–æ–¥—É–∫—Ç
    const product = await getProductByHandle('central-phuket-floresta');
    
    if (!product) {
      console.error('‚ùå –ü—Ä–æ–¥—É–∫—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω!');
      return;
    }

    console.log(`‚úÖ –ù–∞–π–¥–µ–Ω: ${product.title}`);
    console.log(`üÜî ID: ${product.id}`);

    // –ò—Å–ø—Ä–∞–≤–ª—è–µ–º HTML –æ–ø–∏—Å–∞–Ω–∏–µ
    let fixedHtml = product.descriptionHtml || '';

    // –ó–∞–º–µ–Ω—è–µ–º –∞–Ω–≥–ª–∏–π—Å–∫–∏–π —Ç–µ–∫—Å—Ç
    fixedHtml = fixedHtml.replace(/Must-see!/g, '–û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –∫ –ø–æ—Å–µ—â–µ–Ω–∏—é!');
    fixedHtml = fixedHtml.replace(/AR TRICK EYE/g, '–ú—É–∑–µ–π 3D-–∏–ª–ª—é–∑–∏–π');
    fixedHtml = fixedHtml.replace(/Apple —Ä–µ—Å–µ–ª–ª–µ—Ä/g, 'Apple Store');
    
    // –ó–∞–º–µ–Ω—è–µ–º —Ñ–∏–æ–ª–µ—Ç–æ–≤—ã–µ –≥—Ä–∞–¥–∏–µ–Ω—Ç—ã –Ω–∞ —Å–∏–Ω–∏–µ (Telegram —Å—Ç–∏–ª—å)
    fixedHtml = fixedHtml.replace(/from-blue-600 to-purple-600/g, 'from-blue-500 to-blue-600');
    fixedHtml = fixedHtml.replace(/from-blue-500 to-purple-600/g, 'from-blue-500 to-blue-600');
    fixedHtml = fixedHtml.replace(/from-blue-600 to-purple-700/g, 'from-blue-500 to-blue-700');
    fixedHtml = fixedHtml.replace(/from-blue-500 to-purple-700/g, 'from-blue-500 to-blue-700');
    
    // –ó–∞–º–µ–Ω—è–µ–º –¥—Ä—É–≥–∏–µ —Ñ–∏–æ–ª–µ—Ç–æ–≤—ã–µ –≥—Ä–∞–¥–∏–µ–Ω—Ç—ã
    fixedHtml = fixedHtml.replace(/to-purple-600/g, 'to-blue-600');
    fixedHtml = fixedHtml.replace(/to-purple-700/g, 'to-blue-700');
    fixedHtml = fixedHtml.replace(/to-purple-800/g, 'to-blue-800');

    console.log('üìù –û–±–Ω–æ–≤–ª—è–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ...');
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–æ–¥—É–∫—Ç
    await updateProductDescription(product.id, fixedHtml);
    
    console.log('‚úÖ –£–°–ü–ï–®–ù–û –ò–°–ü–†–ê–í–õ–ï–ù–û!');
    console.log(`üì¶ –ü—Ä–æ–¥—É–∫—Ç: ${product.title}`);
    console.log(`üÜî ID: ${product.id}`);
    
    console.log('\nüéØ –ò–°–ü–†–ê–í–õ–ï–ù–ò–Ø:');
    console.log('‚úÖ "Must-see!" ‚Üí "–û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –∫ –ø–æ—Å–µ—â–µ–Ω–∏—é!"');
    console.log('‚úÖ "AR TRICK EYE" ‚Üí "–ú—É–∑–µ–π 3D-–∏–ª–ª—é–∑–∏–π"');
    console.log('‚úÖ "Apple —Ä–µ—Å–µ–ª–ª–µ—Ä" ‚Üí "Apple Store"');
    console.log('‚úÖ –§–∏–æ–ª–µ—Ç–æ–≤—ã–µ –≥—Ä–∞–¥–∏–µ–Ω—Ç—ã ‚Üí –°–∏–Ω–∏–µ (Telegram —Å—Ç–∏–ª—å)');
    console.log('‚úÖ –í—Å–µ —Ü–≤–µ—Ç–∞ –≤ —Å—Ç–∏–ª–µ Telegram + iOS 26');

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error.message);
  }
}

main();
