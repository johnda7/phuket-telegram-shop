const https = require('https');

const SHOPIFY_STORE = 'phuket-telegram-shop-117ck.myshopify.com';
const SHOPIFY_ACCESS_TOKEN = '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';

async function makeGraphQLRequest(query) {
  return new Promise((resolve, reject) => {
    const data = JSON.stringify({ query });
    
    const options = {
      hostname: SHOPIFY_STORE,
      port: 443,
      path: '/admin/api/2025-07/graphql.json',
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
        'X-Shopify-Access-Token': SHOPIFY_ACCESS_TOKEN,
        'Content-Length': data.length
      }
    };

    const req = https.request(options, (res) => {
      let responseData = '';
      res.on('data', (chunk) => {
        responseData += chunk;
      });
      res.on('end', () => {
        try {
          const result = JSON.parse(responseData);
          resolve(result);
        } catch (error) {
          console.log('Raw response:', responseData);
          reject(error);
        }
      });
    });

    req.on('error', (error) => {
      reject(error);
    });

    req.write(data);
    req.end();
  });
}

async function updateJungceylon() {
  try {
    console.log('üîÑ –û–±–Ω–æ–≤–ª—è–µ–º Jungceylon —Å –∫–æ—Ä–æ—Ç–∫–∏–º –æ–ø–∏—Å–∞–Ω–∏–µ–º...');
    
    // –ü–æ–ª—É—á–∞–µ–º ID –ø—Ä–æ–¥—É–∫—Ç–∞
    const getProductQuery = `query { productByHandle(handle: "jungceylon-shopping-center") { id title } }`;
    const productResult = await makeGraphQLRequest(getProductQuery);
    
    if (!productResult.data.productByHandle) {
      console.log('‚ùå –ü—Ä–æ–¥—É–∫—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω');
      return;
    }
    
    const productId = productResult.data.productByHandle.id;
    console.log('Product ID:', productId);
    
    // –ö–æ—Ä–æ—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ
    const shortDescription = `üõçÔ∏è Jungceylon Shopping Center (–î–∂–∞–Ω–≥—Ü–µ–ª–æ–Ω)

–ö—Ä—É–ø–Ω–µ–π—à–∏–π —Ç–æ—Ä–≥–æ–≤—ã–π —Ü–µ–Ω—Ç—Ä –≤ —Å–∞–º–æ–º —Ü–µ–Ω—Ç—Ä–µ –ü–∞—Ç–æ–Ω–≥–∞. –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –ø—Ä–æ–≤–µ—Å—Ç–∏ —Ü–µ–ª—ã–π –¥–µ–Ω—å: –ø–æ—à–æ–ø–∏—Ç—å—Å—è, –ø–æ–µ—Å—Ç—å, —Ä–∞–∑–≤–ª–µ—á—å—Å—è –∏ –æ—Ç–¥–æ—Ö–Ω—É—Ç—å –≤ –ø—Ä–æ—Ö–ª–∞–¥–µ –∫–æ–Ω–¥–∏—Ü–∏–æ–Ω–µ—Ä–æ–≤.

‚≠ê –†–µ–π—Ç–∏–Ω–≥: 4.6/5
üí∞ –¶–µ–Ω–æ–≤–æ–π —É—Ä–æ–≤–µ–Ω—å: $$
üìç –†–∞–π–æ–Ω: –ü–∞—Ç–æ–Ω–≥
üïê –ß–∞—Å—ã —Ä–∞–±–æ—Ç—ã: 11:00-23:00 –µ–∂–µ–¥–Ω–µ–≤–Ω–æ
üöó –ü–∞—Ä–∫–æ–≤–∫–∞: –ë–µ—Å–ø–ª–∞—Ç–Ω–∞—è

–ú–∞–≥–∞–∑–∏–Ω—ã: H&M, Zara, Uniqlo, Adidas, Nike, Sephora, Boots, Watsons
–ï–¥–∞: –¢–∞–π—Å–∫–∞—è, –∫–∏—Ç–∞–π—Å–∫–∞—è, —è–ø–æ–Ω—Å–∫–∞—è, –µ–≤—Ä–æ–ø–µ–π—Å–∫–∞—è –∫—É—Ö–Ω—è, Starbucks, McDonald's
–†–∞–∑–≤–ª–µ—á–µ–Ω–∏—è: Major Cineplex (–∫–∏–Ω–æ), –±–æ—É–ª–∏–Ω–≥, –¥–µ—Ç—Å–∫–∏–µ –∑–æ–Ω—ã

–û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –∫ –ø–æ—Å–µ—â–µ–Ω–∏—é: Major Cineplex - —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ –∑–∞–ª—ã —Å 3D —Ñ–∏–ª—å–º–∞–º–∏

–£–¥–æ–±—Å—Ç–≤–∞: Wi-Fi, –ø–∞—Ä–∫–æ–≤–∫–∞, —Ñ—É–¥-–∫–æ—Ä—Ç, –∫–∏–Ω–æ, –±–æ—É–ª–∏–Ω–≥, –¥–µ—Ç—Å–∫–∏–µ –∑–æ–Ω—ã

–ü–ª–∞–Ω–∏—Ä—É–µ—Ç–µ –ø–æ–µ–∑–¥–∫—É? –ó–∞–±—Ä–æ–Ω–∏—Ä—É–π—Ç–µ —Ç—É—Ä —Å –≥–∏–¥–æ–º, –∞—Ä–µ–Ω–¥—É–π—Ç–µ –∞–≤—Ç–æ –∏–ª–∏ –æ–±–º–µ–Ω—è–π—Ç–µ –≤–∞–ª—é—Ç—É!`;
    
    const mutation = `mutation {
      productUpdate(input: {
        id: "${productId}",
        description: ${JSON.stringify(shortDescription)}
      }) {
        product { id title }
        userErrors { field message }
      }
    }`;
    
    console.log('Executing mutation...');
    const updateResult = await makeGraphQLRequest(mutation);
    
    if (updateResult.data.productUpdate.userErrors.length > 0) {
      console.log('‚ùå –û—à–∏–±–∫–∏:', updateResult.data.productUpdate.userErrors);
    } else {
      console.log('‚úÖ Jungceylon —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω!');
    }
    
  } catch (error) {
    console.log('‚ùå –û—à–∏–±–∫–∞:', error.message);
  }
}

updateJungceylon();
