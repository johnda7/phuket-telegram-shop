// –ü—Ä–æ—Å—Ç–æ–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –æ–ø–∏—Å–∞–Ω–∏–π —Ç–æ—Ä–≥–æ–≤—ã—Ö —Ü–µ–Ω—Ç—Ä–æ–≤
const https = require('https');

const SHOPIFY_STORE = 'phuket-telegram-shop-117ck.myshopify.com';
const SHOPIFY_ACCESS_TOKEN = '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';
const SHOPIFY_API_VERSION = '2025-07';

const descriptions = {
  'central-phuket-floresta': `–°–∞–º—ã–π –±–æ–ª—å—à–æ–π —Ç–æ—Ä–≥–æ–≤—ã–π —Ü–µ–Ω—Ç—Ä –ü—Ö—É–∫–µ—Ç–∞ –ø–ª–æ—â–∞–¥—å—é –±–æ–ª–µ–µ 150,000 –∫–≤.–º. –°–æ—Å—Ç–æ–∏—Ç –∏–∑ –¥–≤—É—Ö —á–∞—Å—Ç–µ–π: Central Festival (–º–∞—Å—Å–æ–≤—ã–π —Å–µ–≥–º–µ–Ω—Ç) –∏ Central Floresta (–ø—Ä–µ–º–∏—É–º –±—É—Ç–∏–∫–∏).

Central Festival: Zara, H&M, Uniqlo, Nike, Adidas, Sephora, Boots, Apple Store, Samsung, Tops Market.

Central Floresta: Prada, Gucci, Louis Vuitton, Chanel, Herm√®s, Tiffany & Co, –ø—Ä–µ–º–∏—É–º —Ä–µ—Å—Ç–æ—Ä–∞–Ω—ã.

–†–∞–∑–≤–ª–µ—á–µ–Ω–∏—è: SF Cinema (16 –∑–∞–ª–æ–≤ IMAX), Aquaria Phuket (–æ–∫–µ–∞–Ω–∞—Ä–∏—É–º), –±–æ—É–ª–∏–Ω–≥, –¥–µ—Ç—Å–∫–∞—è –∑–æ–Ω–∞.

–í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã: 10:00-22:00 –µ–∂–µ–¥–Ω–µ–≤–Ω–æ
–û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏: –±–µ—Å–ø–ª–∞—Ç–Ω–∞—è –ø–∞—Ä–∫–æ–≤–∫–∞ –Ω–∞ 3500 –º–µ—Å—Ç, Wi-Fi, —à–∞—Ç—Ç–ª –æ—Ç –æ—Ç–µ–ª–µ–π
–û—Ç –ü–∞—Ç–æ–Ω–≥–∞: 15 –º–∏–Ω—É—Ç –Ω–∞ —Ç–∞–∫—Å–∏ (200-300 –±–∞—Ç)`,

  'jungceylon-shopping-center': `–ö—Ä—É–ø–Ω–µ–π—à–∏–π —Ç–æ—Ä–≥–æ–≤—ã–π —Ü–µ–Ω—Ç—Ä –≤ —Å–µ—Ä–¥—Ü–µ –ü–∞—Ç–æ–Ω–≥–∞, –≤ 5 –º–∏–Ω—É—Ç–∞—Ö –æ—Ç –ø–ª—è–∂–∞. –ò–¥–µ–∞–ª—å–Ω–æ –¥–ª—è —à–æ–ø–ø–∏–Ω–≥–∞ –ø–æ—Å–ª–µ –ø–ª—è–∂–∞!

–ú–∞–≥–∞–∑–∏–Ω—ã: Big C Extra (—Å—É–ø–µ—Ä–º–∞—Ä–∫–µ—Ç), Uniqlo, H&M, Zara, Nike, Adidas, Power Buy, Boots, Watson's.

–†–∞–∑–≤–ª–µ—á–µ–Ω–∏—è: SF Cinema (6 –∑–∞–ª–æ–≤), –±–æ—É–ª–∏–Ω–≥ (8 –¥–æ—Ä–æ–∂–µ–∫), –¥–µ—Ç—Å–∫–∞—è –∑–æ–Ω–∞, —Ñ—É–¥-–∫–æ—Ä—Ç (40+ —Ç–æ—á–µ–∫).

–í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã: 11:00-23:00 –µ–∂–µ–¥–Ω–µ–≤–Ω–æ
–û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏: –±–µ—Å–ø–ª–∞—Ç–Ω–∞—è –ø–∞—Ä–∫–æ–≤–∫–∞ 2 —á–∞—Å–∞, Wi-Fi, –æ–±–º–µ–Ω–Ω–∏–∫–∏
–õ–æ–∫–∞—Ü–∏—è: 5 –º–∏–Ω—É—Ç –ø–µ—à–∫–æ–º –æ—Ç –ø–ª—è–∂–∞ –ü–∞—Ç–æ–Ω–≥`,

  'premium-outlet-phuket': `–ü–µ—Ä–≤—ã–π –∏ –µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω—ã–π –∞—É—Ç–ª–µ—Ç-—Ü–µ–Ω—Ç—Ä –Ω–∞ –ü—Ö—É–∫–µ—Ç–µ! –ë—Ä–µ–Ω–¥–æ–≤–∞—è –æ–¥–µ–∂–¥–∞ –∏ –æ–±—É–≤—å —Å–æ —Å–∫–∏–¥–∫–∞–º–∏ 30-70%.

–ë—Ä–µ–Ω–¥—ã: Nike, Adidas, Puma, Reebok, Levi's, Lee, Gap, Crocs, Skechers, Timberland, Samsonite.

–°–∫–∏–¥–∫–∏: –ø–æ—Å—Ç–æ—è–Ω–Ω—ã–µ 30-70% –Ω–∞ –ø—Ä–æ—à–ª—ã–µ –∫–æ–ª–ª–µ–∫—Ü–∏–∏. –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Å–∫–∏–¥–∫–∏ –≤ —è–Ω–≤–∞—Ä–µ-—Ñ–µ–≤—Ä–∞–ª–µ –∏ –∏—é–ª–µ-–∞–≤–≥—É—Å—Ç–µ.

–í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã: 10:00-22:00 –µ–∂–µ–¥–Ω–µ–≤–Ω–æ
–õ–æ–∫–∞—Ü–∏—è: —Ä–∞–π–æ–Ω Thalang, 20 –º–∏–Ω—É—Ç –æ—Ç –∞—ç—Ä–æ–ø–æ—Ä—Ç–∞`
};

function shopifyRequest(query) {
  return new Promise((resolve, reject) => {
    const data = JSON.stringify({ query });
    const options = {
      hostname: SHOPIFY_STORE,
      port: 443,
      path: `/admin/api/${SHOPIFY_API_VERSION}/graphql.json`,
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
        'Content-Length': data.length,
        'X-Shopify-Access-Token': SHOPIFY_ACCESS_TOKEN
      }
    };

    const req = https.request(options, (res) => {
      let body = '';
      res.on('data', chunk => body += chunk);
      res.on('end', () => resolve(JSON.parse(body)));
    });

    req.on('error', reject);
    req.write(data);
    req.end();
  });
}

async function main() {
  console.log('üìù –û–±–Ω–æ–≤–ª—è–µ–º –æ–ø–∏—Å–∞–Ω–∏—è —Ç–æ—Ä–≥–æ–≤—ã—Ö —Ü–µ–Ω—Ç—Ä–æ–≤...\n');
  
  for (const [handle, description] of Object.entries(descriptions)) {
    console.log(`üè¢ ${handle}`);
    
    // –ù–∞—Ö–æ–¥–∏–º –ø—Ä–æ–¥—É–∫—Ç
    const findQuery = `{ productByHandle(handle: "${handle}") { id title } }`;
    const findResult = await shopifyRequest(findQuery);
    const product = findResult.data?.productByHandle;
    
    if (!product) {
      console.log('  ‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω\n');
      continue;
    }
    
    // –û–±–Ω–æ–≤–ª—è–µ–º (–∏—Å–ø–æ–ª—å–∑—É–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ GraphQL –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏)
    const updateQuery = `
      mutation updateProduct($id: ID!, $description: String!) {
        productUpdate(input: {id: $id, description: $description}) {
          product { id title }
          userErrors { message }
        }
      }
    `;
    
    const variables = {
      id: product.id,
      description: description
    };
    
    const updateResult = await shopifyRequest(updateQuery, variables);
    
    if (updateResult.data?.productUpdate?.userErrors?.length > 0) {
      console.log('  ‚ùå –û—à–∏–±–∫–∞:', updateResult.data.productUpdate.userErrors);
    } else {
      console.log('  ‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–æ!');
    }
    console.log('');
  }
  
  console.log('‚úÖ –ì–æ—Ç–æ–≤–æ!');
}

main().catch(console.error);

