// –£–º–Ω—ã–π –ø–æ–∏—Å–∫ –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π Robinson Lifestyle Phuket
// –ò—Å–ø–æ–ª—å–∑—É–µ–º Google Custom Search API –¥–ª—è —Ç–æ—á–Ω–æ–≥–æ –ø–æ–∏—Å–∫–∞

const GOOGLE_API_KEY = 'AIzaSyBvOkBwJ7H8k9L2mN3pQ4rS5tU6vW7xY8z'; // –ù—É–∂–µ–Ω —Ä–µ–∞–ª—å–Ω—ã–π API –∫–ª—é—á
const GOOGLE_CSE_ID = '012345678901234567890:abcdefghijk'; // –ù—É–∂–µ–Ω —Ä–µ–∞–ª—å–Ω—ã–π CSE ID
const GOOGLE_URL = 'https://www.googleapis.com/customsearch/v1';

// –¢–æ—á–Ω—ã–µ –ø–æ–∏—Å–∫–æ–≤—ã–µ –∑–∞–ø—Ä–æ—Å—ã –¥–ª—è Robinson Lifestyle Phuket
const searchQueries = [
  {
    query: 'Robinson Lifestyle Phuket exterior building facade',
    description: '–§–∞—Å–∞–¥ –∑–¥–∞–Ω–∏—è Robinson Lifestyle Phuket',
    expectedAspect: 'wide'
  },
  {
    query: 'Robinson Lifestyle Phuket interior shopping mall',
    description: '–ò–Ω—Ç–µ—Ä—å–µ—Ä —Ç–æ—Ä–≥–æ–≤–æ–≥–æ —Ü–µ–Ω—Ç—Ä–∞ Robinson Lifestyle Phuket',
    expectedAspect: 'wide'
  },
  {
    query: 'Robinson Lifestyle Phuket food court dining',
    description: '–§—É–¥-–∫–æ—Ä—Ç Robinson Lifestyle Phuket',
    expectedAspect: 'wide'
  },
  {
    query: 'Robinson Lifestyle Phuket cinema SF Cinema',
    description: '–ö–∏–Ω–æ—Ç–µ–∞—Ç—Ä SF Cinema –≤ Robinson Lifestyle Phuket',
    expectedAspect: 'wide'
  },
  {
    query: 'Robinson Lifestyle Phuket stores shops retail',
    description: '–ú–∞–≥–∞–∑–∏–Ω—ã –≤ Robinson Lifestyle Phuket',
    expectedAspect: 'wide'
  },
  {
    query: 'Robinson Lifestyle Phuket parking entrance',
    description: '–í—Ö–æ–¥ –∏ –ø–∞—Ä–∫–æ–≤–∫–∞ Robinson Lifestyle Phuket',
    expectedAspect: 'wide'
  }
];

async function searchRobinsonPhotos() {
  try {
    console.log('üîç –£–ú–ù–´–ô –ü–û–ò–°–ö –§–û–¢–û–ì–†–ê–§–ò–ô ROBINSON LIFESTYLE PHUKET\n');
    console.log('üìã –ö—Ä–∏—Ç–µ—Ä–∏–∏ –∫–∞—á–µ—Å—Ç–≤–∞:');
    console.log('‚úÖ –ú–∏–Ω–∏–º—É–º 800x600 –ø–∏–∫—Å–µ–ª–µ–π');
    console.log('‚úÖ –ß–µ—Ç–∫–∏–µ, –Ω–µ —Ä–∞–∑–º—ã—Ç—ã–µ');
    console.log('‚úÖ –ü–æ–∫–∞–∑—ã–≤–∞—é—Ç –†–ï–ê–õ–¨–ù–´–ô Robinson Lifestyle Phuket');
    console.log('‚úÖ –†–∞–∑–Ω—ã–µ —Ä–∞–∫—É—Ä—Å—ã (—Ñ–∞—Å–∞–¥, –∏–Ω—Ç–µ—Ä—å–µ—Ä, –º–∞–≥–∞–∑–∏–Ω—ã)');
    console.log('‚úÖ –•–æ—Ä–æ—à–µ–µ –æ—Å–≤–µ—â–µ–Ω–∏–µ');
    console.log('‚ùå –ò–∑–±–µ–≥–∞–µ–º —Ñ–æ—Ç–æ —Å –ª—é–¥—å–º–∏ (–µ—Å–ª–∏ –≤–æ–∑–º–æ–∂–Ω–æ)');
    console.log('‚ùå –ò–∑–±–µ–≥–∞–µ–º —Ä–µ–∫–ª–∞–º–Ω—ã–µ –±–∞–Ω–Ω–µ—Ä—ã\n');
    
    const allPhotos = [];
    
    for (let i = 0; i < searchQueries.length; i++) {
      const searchQuery = searchQueries[i];
      console.log(`üì∑ [${i + 1}/${searchQueries.length}] –ü–æ–∏—Å–∫: "${searchQuery.description}"`);
      
      const searchUrl = `${GOOGLE_URL}?key=${GOOGLE_API_KEY}&cx=${GOOGLE_CSE_ID}&q=${encodeURIComponent(searchQuery.query)}&searchType=image&num=3&imgSize=large&imgType=photo&safe=medium`;
      
      try {
        const response = await fetch(searchUrl);
        const data = await response.json();
        
        if (data.items && data.items.length > 0) {
          console.log(`   ‚úÖ –ù–∞–π–¥–µ–Ω–æ ${data.items.length} —Ñ–æ—Ç–æ`);
          
          data.items.forEach((item, index) => {
            const photo = {
              title: item.title,
              url: item.link,
              thumbnail: item.image.thumbnailLink,
              width: item.image.width,
              height: item.image.height,
              size: item.image.byteSize,
              source: item.displayLink,
              query: searchQuery.query,
              description: searchQuery.description,
              aspectRatio: item.image.width / item.image.height
            };
            
            // –°—Ç—Ä–æ–≥–∏–µ –∫—Ä–∏—Ç–µ—Ä–∏–∏ –∫–∞—á–µ—Å—Ç–≤–∞
            const isHighQuality = photo.width >= 800 && photo.height >= 600;
            const isReasonableSize = photo.size <= 5000000; // 5MB –º–∞–∫—Å–∏–º—É–º
            const isGoodAspectRatio = photo.aspectRatio >= 1.2 && photo.aspectRatio <= 2.5; // —à–∏—Ä–æ–∫–æ—Ñ–æ—Ä–º–∞—Ç–Ω—ã–µ
            const isFromReliableSource = !photo.source.includes('pinterest') && !photo.source.includes('tumblr');
            
            if (isHighQuality && isReasonableSize && isGoodAspectRatio && isFromReliableSource) {
              allPhotos.push(photo);
              console.log(`     ‚úÖ ${index + 1}. ${photo.title} (${photo.width}x${photo.height}) - ${photo.source}`);
            } else {
              console.log(`     ‚ùå ${index + 1}. ${photo.title} - –Ω–µ –ø–æ–¥—Ö–æ–¥–∏—Ç –ø–æ –∫—Ä–∏—Ç–µ—Ä–∏—è–º`);
            }
          });
        } else {
          console.log(`   ‚ùå –§–æ—Ç–æ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –¥–ª—è: ${searchQuery.description}`);
        }
      } catch (error) {
        console.log(`   ‚ùå –û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞: ${error.message}`);
      }
      
      // –ü–∞—É–∑–∞ –º–µ–∂–¥—É –∑–∞–ø—Ä–æ—Å–∞–º–∏
      await new Promise(resolve => setTimeout(resolve, 2000));
    }
    
    console.log(`\nüìä === –†–ï–ó–£–õ–¨–¢–ê–¢–´ –ü–û–ò–°–ö–ê ===`);
    console.log(`‚úÖ –í—Å–µ–≥–æ –Ω–∞–π–¥–µ–Ω–æ –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö —Ñ–æ—Ç–æ: ${allPhotos.length}`);
    console.log(`üì∑ –£–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤: ${new Set(allPhotos.map(p => p.source)).size}`);
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–ø-6 –ª—É—á—à–∏—Ö —Ñ–æ—Ç–æ
    const topPhotos = allPhotos
      .sort((a, b) => b.width * b.height - a.width * a.height)
      .slice(0, 6);
    
    console.log(`\nüèÜ –¢–û–ü-6 –õ–£–ß–®–ò–• –§–û–¢–û:`);
    topPhotos.forEach((photo, index) => {
      console.log(`${index + 1}. ${photo.description}`);
      console.log(`   –ù–∞–∑–≤–∞–Ω–∏–µ: ${photo.title}`);
      console.log(`   URL: ${photo.url}`);
      console.log(`   –†–∞–∑–º–µ—Ä: ${photo.width}x${photo.height} (${Math.round(photo.size/1024)}KB)`);
      console.log(`   –ò—Å—Ç–æ—á–Ω–∏–∫: ${photo.source}`);
      console.log(`   –°–æ–æ—Ç–Ω–æ—à–µ–Ω–∏–µ: ${photo.aspectRatio.toFixed(2)}`);
      console.log('');
    });
    
    return topPhotos;
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error);
    return [];
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –ø–æ–∏—Å–∫
searchRobinsonPhotos();
