#!/usr/bin/env node

/**
 * üì∏ –†–ï–ê–õ–¨–ù–´–ï –§–û–¢–û –° GOOGLE IMAGES
 * 
 * –ò—Å–ø–æ–ª—å–∑—É–µ—Ç Google Custom Search API –¥–ª—è –ø–æ–∏—Å–∫–∞ —Ä–µ–∞–ª—å–Ω—ã—Ö —Ñ–æ—Ç–æ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –º–µ—Å—Ç–∞
 * 
 * SETUP:
 * 1. –ü–æ–ª—É—á–∏ API Key: https://developers.google.com/custom-search/v1/introduction
 * 2. –°–æ–∑–¥–∞–π Custom Search Engine: https://cse.google.com/cse/all
 * 3. –í–∫–ª—é—á–∏ "Image Search" –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö CSE
 * 4. –°–æ—Ö—Ä–∞–Ω–∏ –≤ .env:
 *    GOOGLE_CSE_API_KEY=your_api_key
 *    GOOGLE_CSE_ID=your_search_engine_id
 * 
 * USAGE:
 *   node scripts/get-real-photos-google.cjs "Central Festival Phuket"
 */

const https = require('https');
const fs = require('fs');
const path = require('path');

// ============================================================
// –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–Ø
// ============================================================

// Google Custom Search API
const GOOGLE_API_KEY = process.env.GOOGLE_CSE_API_KEY || '';
const GOOGLE_CSE_ID = process.env.GOOGLE_CSE_ID || '';

// –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–∞: SerpAPI (–ø—Ä–æ—â–µ, –Ω–æ –ø–ª–∞—Ç–Ω—ã–π)
const SERPAPI_KEY = process.env.SERPAPI_API_KEY || '';

// ============================================================
// –ú–ï–¢–û–î 1: Google Custom Search API (–ë–ï–°–ü–õ–ê–¢–ù–´–ô!)
// ============================================================

async function searchGoogleCSE(query, numPhotos = 10) {
  if (!GOOGLE_API_KEY || !GOOGLE_CSE_ID) {
    console.log('‚ö†Ô∏è  Google CSE credentials not found');
    return null;
  }

  console.log('üîé –ü–æ–∏—Å–∫ —á–µ—Ä–µ–∑ Google Custom Search API...');
  
  const results = [];
  
  // Google CSE –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –º–∞–∫—Å 10 —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –∑–∞ —Ä–∞–∑
  // –î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è > 10 –Ω—É–∂–Ω–æ –¥–µ–ª–∞—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –∑–∞–ø—Ä–æ—Å–æ–≤ —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–º start
  const requests = Math.ceil(numPhotos / 10);
  
  for (let i = 0; i < requests; i++) {
    const start = i * 10 + 1;
    const num = Math.min(10, numPhotos - i * 10);
    
    const url = `https://www.googleapis.com/customsearch/v1?` +
      `key=${GOOGLE_API_KEY}` +
      `&cx=${GOOGLE_CSE_ID}` +
      `&q=${encodeURIComponent(query)}` +
      `&searchType=image` +
      `&num=${num}` +
      `&start=${start}` +
      `&imgSize=large` +
      `&safe=off`;
    
    try {
      const data = await httpGet(url);
      const json = JSON.parse(data);
      
      if (json.items) {
        json.items.forEach((item, idx) => {
          results.push({
            url: item.link,
            thumbnail: item.image.thumbnailLink,
            title: item.title,
            source: item.displayLink,
            alt: `${query} - —Ñ–æ—Ç–æ ${start + idx}`,
            width: item.image.width,
            height: item.image.height
          });
        });
      }
    } catch (error) {
      console.error(`   ‚ùå –û—à–∏–±–∫–∞ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ ${i + 1}:`, error.message);
    }
  }
  
  if (results.length > 0) {
    console.log(`   ‚úÖ –ù–∞–π–¥–µ–Ω–æ ${results.length} —Ñ–æ—Ç–æ —á–µ—Ä–µ–∑ Google CSE`);
    return results;
  }
  
  return null;
}

// ============================================================
// –ú–ï–¢–û–î 2: SerpAPI (–ü–†–û–°–¢–û–ô, –ù–û –ü–õ–ê–¢–ù–´–ô)
// ============================================================

async function searchSerpAPI(query, numPhotos = 10) {
  if (!SERPAPI_KEY) {
    console.log('‚ö†Ô∏è  SerpAPI key not found');
    return null;
  }

  console.log('üîé –ü–æ–∏—Å–∫ —á–µ—Ä–µ–∑ SerpAPI...');
  
  const url = `https://serpapi.com/search.json?` +
    `engine=google_images` +
    `&q=${encodeURIComponent(query)}` +
    `&num=${numPhotos}` +
    `&api_key=${SERPAPI_KEY}`;
  
  try {
    const data = await httpGet(url);
    const json = JSON.parse(data);
    
    if (json.images_results) {
      const results = json.images_results.slice(0, numPhotos).map((img, i) => ({
        url: img.original,
        thumbnail: img.thumbnail,
        title: img.title || `${query} - —Ñ–æ—Ç–æ ${i + 1}`,
        source: img.source,
        alt: `${query} - ${img.title || `—Ñ–æ—Ç–æ ${i + 1}`}`
      }));
      
      console.log(`   ‚úÖ –ù–∞–π–¥–µ–Ω–æ ${results.length} —Ñ–æ—Ç–æ —á–µ—Ä–µ–∑ SerpAPI`);
      return results;
    }
  } catch (error) {
    console.error('   ‚ùå –û—à–∏–±–∫–∞ SerpAPI:', error.message);
  }
  
  return null;
}

// ============================================================
// –ú–ï–¢–û–î 3: –°–ü–ï–¶–ò–§–ò–ß–ù–´–ô –ü–û–ò–°–ö –î–õ–Ø CENTRAL FESTIVAL
// ============================================================

function getCentralFestivalPhotos() {
  console.log('üìç –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã–µ –∑–∞–ø—Ä–æ—Å—ã –¥–ª—è Central Festival...');
  
  // –°–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã–µ –∑–∞–ø—Ä–æ—Å—ã –¥–ª—è –±–æ–ª–µ–µ —Ç–æ—á–Ω—ã—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
  const queries = [
    'Central Festival Phuket entrance exterior',
    'Central Floresta Phuket luxury brands',
    'Central Festival Phuket interior shopping',
    'Central Phuket mall food court',
    'Central Festival Phuket Aquaria',
    'Central Phuket parking building',
    'Central Festival Phuket at night',
    'Central Floresta Louis Vuitton Phuket',
    'Central Phuket Major Cineplex',
    'Central Festival Phuket aerial view'
  ];
  
  return queries;
}

// ============================================================
// FALLBACK: High-quality Unsplash URLs
// ============================================================

function getUnsplashFallback(query) {
  console.log('üì∑ –ò—Å–ø–æ–ª—å–∑—É–µ–º Unsplash fallback (–≤—ã—Å–æ–∫–æ–µ –∫–∞—á–µ—Å—Ç–≤–æ)...');
  
  // –ü—Ä–µ–¥–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–µ –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ URL —Ç–æ—Ä–≥–æ–≤—ã—Ö —Ü–µ–Ω—Ç—Ä–æ–≤
  const urls = [
    'https://images.unsplash.com/photo-1555529669-e69e7aa0ba9a?w=1200&q=85', // Golden interior
    'https://images.unsplash.com/photo-1519567241046-7f570eee3ce6?w=1200&q=85', // Roof structure
    'https://images.unsplash.com/photo-1567401893414-76b7b1e5a7a5?w=1200&q=85', // Shopping center
    'https://images.unsplash.com/photo-1519449556851-5720b33024e7?w=1200&q=85', // Mall interior
    'https://images.unsplash.com/photo-1540959733332-eab4deabeeaf?w=1200&q=85', // Interior design
    'https://images.unsplash.com/photo-1558470598-a5dda9640f68?w=1200&q=85', // Modern architecture
    'https://images.unsplash.com/photo-1441986380878-c4248f5b8b5b?w=1200&q=85', // Shop exterior
    'https://images.unsplash.com/photo-1555041469-a586c61ea9bc?w=1200&q=85', // Interior mall
    'https://images.unsplash.com/photo-1556742049-0cfed4f6a45d?w=1200&q=85', // Shopping area
    'https://images.unsplash.com/photo-1574643156929-51fa098b0394?w=1200&q=85'  // Retail space
  ];
  
  return urls.map((url, i) => ({
    url,
    thumbnail: url.replace('w=1200', 'w=400'),
    title: `${query} - Quality Image ${i + 1}`,
    source: 'Unsplash',
    alt: `${query} - –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ–µ —Ñ–æ—Ç–æ ${i + 1}`
  }));
}

// ============================================================
// HELPER: HTTP GET
// ============================================================

function httpGet(url) {
  return new Promise((resolve, reject) => {
    https.get(url, (res) => {
      if (res.statusCode !== 200) {
        reject(new Error(`HTTP ${res.statusCode}`));
        return;
      }
      
      let data = '';
      res.on('data', (chunk) => { data += chunk; });
      res.on('end', () => resolve(data));
    }).on('error', reject);
  });
}

// ============================================================
// MAIN FUNCTION
// ============================================================

async function main() {
  const placeName = process.argv[2];
  const numPhotos = parseInt(process.argv[3]) || 10;
  
  if (!placeName) {
    console.error('\n‚ùå –û—à–∏–±–∫–∞: –£–∫–∞–∂–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –º–µ—Å—Ç–∞!\n');
    console.log('–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:');
    console.log('  node scripts/get-real-photos-google.cjs "Central Festival Phuket" 10\n');
    console.log('SETUP (–¥–ª—è Google CSE - –ë–ï–°–ü–õ–ê–¢–ù–û 100 –∑–∞–ø—Ä–æ—Å–æ–≤/–¥–µ–Ω—å):');
    console.log('1. API Key: https://developers.google.com/custom-search/v1/introduction');
    console.log('2. Search Engine: https://cse.google.com/cse/all');
    console.log('3. –î–æ–±–∞–≤—å –≤ .env:');
    console.log('   GOOGLE_CSE_API_KEY=your_key');
    console.log('   GOOGLE_CSE_ID=your_cse_id\n');
    process.exit(1);
  }
  
  console.log('\nüì∏ –ü–û–ò–°–ö –†–ï–ê–õ–¨–ù–´–• –§–û–¢–û–ì–†–ê–§–ò–ô');
  console.log('='.repeat(60));
  console.log(`üìç –ú–µ—Å—Ç–æ: ${placeName}`);
  console.log(`üî¢ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ: ${numPhotos}`);
  console.log('='.repeat(60));
  console.log('');
  
  let photos = null;
  
  // –°—Ç—Ä–∞—Ç–µ–≥–∏—è 1: Google Custom Search API
  photos = await searchGoogleCSE(placeName, numPhotos);
  if (photos && photos.length >= numPhotos) {
    displayResults(photos);
    return;
  }
  
  // –°—Ç—Ä–∞—Ç–µ–≥–∏—è 2: SerpAPI
  photos = await searchSerpAPI(placeName, numPhotos);
  if (photos && photos.length >= numPhotos) {
    displayResults(photos);
    return;
  }
  
  // –°—Ç—Ä–∞—Ç–µ–≥–∏—è 3: Unsplash Fallback
  console.log('\n‚ö†Ô∏è  –í—Å–µ API –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã. –ò—Å–ø–æ–ª—å–∑—É–µ–º Unsplash fallback...');
  photos = getUnsplashFallback(placeName).slice(0, numPhotos);
  displayResults(photos);
}

function displayResults(photos) {
  console.log('\n‚úÖ –†–ï–ó–£–õ–¨–¢–ê–¢–´:');
  console.log('='.repeat(60));
  photos.forEach((photo, i) => {
    console.log(`\n[${i + 1}/${photos.length}] ${photo.title}`);
    console.log(`   URL: ${photo.url}`);
    console.log(`   Source: ${photo.source}`);
  });
  console.log('\n='.repeat(60));
  console.log('\nüí° –°–õ–ï–î–£–Æ–©–ò–ô –®–ê–ì:');
  console.log('   node scripts/download-and-upload.cjs [handle] [photo_urls...]\n');
}

// ============================================================
// RUN
// ============================================================

main().catch(console.error);

