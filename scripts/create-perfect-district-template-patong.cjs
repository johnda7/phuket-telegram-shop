const https = require('https');
const fs = require('fs');

const SHOPIFY_STORE = 'phuket-telegram-shop-117ck.myshopify.com';
const SHOPIFY_ACCESS_TOKEN = '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';

/**
 * üéØ –°–û–ó–î–ê–ù–ò–ï –ü–†–ê–í–ò–õ–¨–ù–û–ì–û –®–ê–ë–õ–û–ù–ê –î–õ–Ø –†–ê–ô–û–ù–û–í
 * 
 * ‚ùå –ù–ï –ö–û–ü–ò–†–£–ï–ú –®–ê–ë–õ–û–ù –¢–¶!
 * ‚úÖ –°–æ–∑–¥–∞—ë–º –£–ù–ò–ö–ê–õ–¨–ù–´–ô —à–∞–±–ª–æ–Ω –¥–ª—è –†–ê–ô–û–ù–û–í
 * 
 * –ò—Å—Ç–æ—á–Ω–∏–∫ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã: phuket-insider.com/ru/region/patong/
 * 
 * –≠—Ç–∞–ª–æ–Ω: –ü–∞—Ç–æ–Ω–≥
 */

// –î–∞–Ω–Ω—ã–µ –ü–∞—Ç–æ–Ω–≥–∞ (–Ω–∞ –æ—Å–Ω–æ–≤–µ phuket-insider.com)
const patongDistrict = {
  handle: 'patong-district',
  title: 'üìç –ü–∞—Ç–æ–Ω–≥ ‚Äî –¶–µ–Ω—Ç—Ä –Ω–æ—á–Ω–æ–π –∂–∏–∑–Ω–∏ –ü—Ö—É–∫–µ—Ç–∞',
  subtitle: '–°–∞–º—ã–π –æ–∂–∏–≤–ª–µ–Ω–Ω—ã–π —Ç—É—Ä–∏—Å—Ç–∏—á–µ—Å–∫–∏–π —Ä–∞–π–æ–Ω',
  rating: '4.5',
  coordinates: '7.8804,98.2923',
  
  // –ì–ª–∞–≤–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ
  description: '–ü–∞—Ç–æ–Ω–≥ ‚Äì —Å–∞–º—ã–π –æ–∂–∏–≤–ª–µ–Ω–Ω—ã–π —Ç—É—Ä–∏—Å—Ç–∏—á–µ—Å–∫–∏–π —Ä–∞–π–æ–Ω –ü—Ö—É–∫–µ—Ç–∞. –ï–≥–æ –∑–∞—Å–ª—É–∂–µ–Ω–Ω–æ —Å—á–∏—Ç–∞—é—Ç —Ü–µ–Ω—Ç—Ä–æ–º –Ω–æ—á–Ω–æ–π –∂–∏–∑–Ω–∏ –Ω–∞ –æ—Å—Ç—Ä–æ–≤–µ. –û—Ç–¥—ã—Ö –Ω–∞ –ü–∞—Ç–æ–Ω–≥–µ —Ç–æ—á–Ω–æ –ø–æ–Ω—Ä–∞–≤–∏—Ç—Å—è –ª—é–¥—è–º, –∫–æ—Ç–æ—Ä—ã–µ –ª—é–±—è—Ç –Ω–æ—á–Ω—É—é –∂–∏–∑–Ω—å. –ó–¥–µ—Å—å –Ω–∞—Ö–æ–¥—è—Ç—Å—è –∑–Ω–∞–º–µ–Ω–∏—Ç–∞—è —Ç—É—Å–æ–≤–æ—á–Ω–∞—è —É–ª–∏—Ü–∞ –ë–∞–Ω–≥–ª–∞-–†–æ—É–¥ –∏ –æ–≥—Ä–æ–º–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–∞—Ñ–µ –∏ —Ä–µ—Å—Ç–æ—Ä–∞–Ω–æ–≤, –±–∞—Ä–æ–≤ –∏ –∫–ª—É–±–æ–≤, –≥–¥–µ –Ω–µ—Ä–µ–¥–∫–æ –≤—ã—Å—Ç—É–ø–∞—é—Ç –∞—Ä—Ç–∏—Å—Ç—ã –º–∏—Ä–æ–≤–æ–π –≤–µ–ª–∏—á–∏–Ω—ã. –í –ü–∞—Ç–æ–Ω–≥–µ –Ω–∞—Ö–æ–¥—è—Ç—Å—è –¥–≤–∞ –∫—Ä—É–ø–Ω—ã—Ö —Ç–æ—Ä–≥–æ–≤—ã—Ö —Ü–µ–Ω—Ç—Ä–∞ –∏ –Ω–µ—Å–∫–æ–ª—å–∫–æ –Ω–æ—á–Ω—ã—Ö —Ä—ã–Ω–∫–æ–≤, –ø–æ—ç—Ç–æ–º—É –∑–¥–µ—Å—å –º–æ–∂–Ω–æ —É—Å—Ç—Ä–æ–∏—Ç—å –Ω–µ–ø–ª–æ—Ö–æ–π —à–æ–ø–∏–Ω–≥.',
  
  // –ö–æ–º—É –ø–æ–¥—Ö–æ–¥–∏—Ç
  bestFor: '–¢—É—Ä–∏—Å—Ç—ã, –ª—é–±—è—â–∏–µ –Ω–æ—á–Ω—É—é –∂–∏–∑–Ω—å, —Ç—É—Å–æ–≤–∫–∏, —à–æ–ø–∏–Ω–≥',
  
  // –ü–ª—é—Å—ã
  pros: [
    { icon: 'üåÉ', text: '–ó–Ω–∞–º–µ–Ω–∏—Ç–∞—è –Ω–æ—á–Ω–∞—è –∂–∏–∑–Ω—å (Bangla Road)' },
    { icon: 'üõçÔ∏è', text: '–î–≤–∞ –∫—Ä—É–ø–Ω—ã—Ö —Ç–æ—Ä–≥–æ–≤—ã—Ö —Ü–µ–Ω—Ç—Ä–∞' },
    { icon: 'üèñÔ∏è', text: '–î–ª–∏–Ω–Ω—ã–π –ø–ª—è–∂ (2.85 –∫–º) —Å —Ä–∞–∑–≤–∏—Ç–æ–π –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä–æ–π' },
    { icon: 'üçΩÔ∏è', text: '–ú–Ω–æ–∂–µ—Å—Ç–≤–æ —Ä–µ—Å—Ç–æ—Ä–∞–Ω–æ–≤ –∏ –∫–∞—Ñ–µ –Ω–∞ –ª—é–±–æ–π –≤–∫—É—Å' },
    { icon: 'üè®', text: '–†–∞–∑–Ω–æ–æ–±—Ä–∞–∑–Ω–æ–µ –∂–∏–ª—å–µ (–æ—Ç –±—é–¥–∂–µ—Ç–Ω—ã—Ö –∞–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç–æ–≤ –¥–æ —Ä–æ—Å–∫–æ—à–Ω—ã—Ö –æ—Ç–µ–ª–µ–π)' }
  ],
  
  // –ú–∏–Ω—É—Å—ã
  cons: [
    { icon: 'üîä', text: '–®—É–º–Ω–æ –¥–æ –ø–æ–∑–¥–Ω–µ–π –Ω–æ—á–∏' },
    { icon: 'üë•', text: '–ú–Ω–æ–≥–æ —Ç—É—Ä–∏—Å—Ç–æ–≤ (–æ—Å–æ–±–µ–Ω–Ω–æ –≤ –≤—ã—Å–æ–∫–∏–π —Å–µ–∑–æ–Ω)' },
    { icon: 'üí∞', text: '–í—ã—à–µ —Ü–µ–Ω—ã —á–µ–º –≤ –¥—Ä—É–≥–∏—Ö —Ä–∞–π–æ–Ω–∞—Ö' }
  ],
  
  // –ò–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä–∞
  infrastructure: [
    { icon: 'üè®', text: '–û—Ç–µ–ª–∏ –≤—Å–µ—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π' },
    { icon: 'üõçÔ∏è', text: 'Jungceylon, Patong Plaza' },
    { icon: 'üè•', text: '–ë–æ–ª—å–Ω–∏—Ü—ã –∏ –∫–ª–∏–Ω–∏–∫–∏' },
    { icon: 'üèß', text: '–ë–∞–Ω–∫–æ–º–∞—Ç—ã –Ω–∞ –∫–∞–∂–¥–æ–º —à–∞–≥—É' },
    { icon: 'üçΩÔ∏è', text: '–†–µ—Å—Ç–æ—Ä–∞–Ω—ã, –∫–∞—Ñ–µ, –±–∞—Ä—ã' },
    { icon: 'üöó', text: '–¢–∞–∫—Å–∏, —Ç—É–∫-—Ç—É–∫–∏, –∞—Ä–µ–Ω–¥–∞ –∞–≤—Ç–æ' }
  ],
  
  // –õ—É—á—à–∏–µ –º–µ—Å—Ç–∞ —Ä–∞–π–æ–Ω–∞ (—Å—Å—ã–ª–∫–∏ –Ω–∞ –¥—Ä—É–≥–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏)
  bestPlaces: [
    { category: 'beaches', text: '–ü–ª—è–∂ –ü–∞—Ç–æ–Ω–≥', description: '–û–¥–∏–Ω –∏–∑ —Å–∞–º—ã—Ö –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö –∏ –æ–∂–∏–≤–ª–µ–Ω–Ω—ã—Ö –ø–ª—è–∂–µ–π –ü—Ö—É–∫–µ—Ç–∞' },
    { category: 'beaches', text: '–ü–ª—è–∂ Freedom Beach', description: '–£–µ–¥–∏–Ω–µ–Ω–Ω—ã–π –ø–ª—è–∂ —Å –∫—Ä–∏—Å—Ç–∞–ª—å–Ω–æ —á–∏—Å—Ç–æ–π –≤–æ–¥–æ–π' },
    { category: 'beaches', text: '–ü–ª—è–∂ Paradise Beach', description: '–°–ø–æ–∫–æ–π–Ω—ã–π –ø–ª—è–∂ –¥–ª—è —Ä–∞—Å—Å–ª–∞–±–ª–µ–Ω–∏—è' },
    { category: 'nightlife', text: 'Bangla Road', description: '–ó–Ω–∞–º–µ–Ω–∏—Ç–∞—è —Ç—É—Å–æ–≤–æ—á–Ω–∞—è —É–ª–∏—Ü–∞ –ü—Ö—É–∫–µ—Ç–∞' },
    { category: 'shopping', text: 'Jungceylon', description: '–ö—Ä—É–ø–Ω—ã–π —Ç–æ—Ä–≥–æ–≤—ã–π —Ü–µ–Ω—Ç—Ä —Å –º–Ω–æ–∂–µ—Å—Ç–≤–æ–º –º–∞–≥–∞–∑–∏–Ω–æ–≤' }
  ],
  
  // –ë–ª–∏–∑–ª–µ–∂–∞—â–∏–µ —Ä–∞–π–æ–Ω—ã
  nearbyDistricts: [
    { name: '–ö–∞–º–∞–ª–∞', distance: '15 –º–∏–Ω –Ω–∞ –∞–≤—Ç–æ' },
    { name: '–°—É—Ä–∏–Ω', distance: '20 –º–∏–Ω –Ω–∞ –∞–≤—Ç–æ' },
    { name: '–ö–∞—Ä–æ–Ω', distance: '10 –º–∏–Ω –Ω–∞ –∞–≤—Ç–æ' }
  ],
  
  // –ñ–∏–ª—å–µ
  accommodation: '–ñ–∏–ª—å–µ –Ω–∞ –ü–∞—Ç–æ–Ω–≥–µ –µ—Å—Ç—å —Å–∞–º–æ–µ —Ä–∞–∑–Ω–æ–µ: –∞–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç—ã, —Ä–æ—Å–∫–æ—à–Ω—ã–µ –∏ –±—é–¥–∂–µ—Ç–Ω—ã–µ –æ—Ç–µ–ª–∏, –∞ —Ç–∞–∫–∂–µ –æ—Ç–¥–µ–ª—å–Ω—ã–µ –∫—É—Ä–æ—Ä—Ç—ã —Å –≤–∏–ª–ª–∞–º–∏, –æ—Ç–µ–ª—è–º–∏ –∏ –±–∏—á-–∫–ª–∞–±–∞–º–∏.',
  
  // –§–∏–Ω–∞–ª—å–Ω—ã–π CTA
  finalCta: '–ü–∞—Ç–æ–Ω–≥ –ø–æ–¥–æ–π–¥–µ—Ç —Ç–µ–º, –∫—Ç–æ –ª—é–±–∏—Ç —à—É–º–Ω—ã–µ –≤–µ—á–µ—Ä–∏–Ω–∫–∏ –∏ –ø–ª–∞–Ω–∏—Ä—É–µ—Ç –Ω–∞ –ü—Ö—É–∫–µ—Ç–µ –Ω–µ –æ—Ç–¥—ã—Ö–∞—Ç—å, –∞ —Ç—É—Å–æ–≤–∞—Ç—å—Å—è. –ï—Å–ª–∏ –≤–∞–º –Ω–µ –ø–æ –¥—É—à–µ —Ç–∞–∫–æ–π –æ–±—Ä–∞–∑ –∂–∏–∑–Ω–∏, –≤—ã–±–µ—Ä–∏—Ç–µ –¥–ª—è —Å–µ–±—è –ø–æ–¥—Ö–æ–¥—è—â–µ–µ –º–µ—Å—Ç–æ –≤ —Ä–∞–∑–¥–µ–ª–µ "–†–∞–π–æ–Ω—ã –ü—Ö—É–∫–µ—Ç–∞".'
};

function generateDistrictHTML(district) {
  const prosHTML = district.pros.map(p => `
    <div class="flex items-start gap-3 bg-gradient-to-r from-green-50 to-emerald-50 rounded-lg p-3 border border-green-200">
      <span class="text-xl flex-shrink-0">${p.icon}</span>
      <span class="text-sm text-gray-700">${p.text}</span>
    </div>
  `).join('');

  const consHTML = district.cons.map(c => `
    <div class="flex items-start gap-3 bg-gradient-to-r from-orange-50 to-red-50 rounded-lg p-3 border border-orange-200">
      <span class="text-xl flex-shrink-0">${c.icon}</span>
      <span class="text-sm text-gray-700">${c.text}</span>
    </div>
  `).join('');

  const infrastructureHTML = district.infrastructure.map(i => `
    <div class="flex items-center gap-2 bg-white rounded-lg p-2 border border-gray-200">
      <span class="text-lg">${i.icon}</span>
      <span class="text-xs text-gray-600">${i.text}</span>
    </div>
  `).join('');

  const bestPlacesHTML = district.bestPlaces.map(place => `
    <div class="bg-white rounded-lg p-3 border border-gray-200 hover:border-blue-300 transition-colors">
      <div class="flex items-start gap-2">
        <span class="text-lg">üìç</span>
        <div>
          <p class="font-semibold text-gray-900 text-sm">${place.text}</p>
          <p class="text-xs text-gray-600 mt-1">${place.description}</p>
        </div>
      </div>
    </div>
  `).join('');

  const nearbyDistrictsHTML = district.nearbyDistricts.map(n => `
    <li class="flex items-center gap-2 text-sm text-gray-700">
      <span class="text-blue-500">‚Ä¢</span>
      <span><strong>${n.name}</strong> ‚Äî ${n.distance}</span>
    </li>
  `).join('');

  return `
<div class="space-y-6">
  <!-- Hero Section -->
  <div class="bg-gradient-to-r from-red-500 to-orange-600 rounded-2xl p-6 text-white">
    <div class="flex items-center gap-3 mb-2">
      <span class="text-4xl">üåÉ</span>
      <div>
        <h1 class="text-2xl font-bold">${district.title}</h1>
        <p class="text-blue-100 text-lg">${district.subtitle}</p>
      </div>
    </div>
    <div class="flex items-center gap-4 mt-4 text-sm">
      <div class="flex items-center gap-1">
        <span class="text-yellow-300">‚≠ê</span>
        <span class="font-semibold">${district.rating}</span>
      </div>
      <div class="flex items-center gap-1">
        <span>üë•</span>
        <span>${district.bestFor}</span>
      </div>
    </div>
  </div>

  <!-- Main Description -->
  <div class="bg-white rounded-xl p-6 shadow-sm border border-gray-100">
    <h2 class="text-xl font-bold text-gray-900 mb-4">–û —Ä–∞–π–æ–Ω–µ</h2>
    <p class="text-gray-600 leading-relaxed mb-4">
      ${district.description}
    </p>
    <p class="text-gray-600 leading-relaxed">
      ${district.accommodation}
    </p>
  </div>

  <!-- Pros and Cons -->
  <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
    <div class="bg-white rounded-xl p-4 shadow-sm border border-gray-100">
      <h3 class="text-lg font-bold text-green-700 mb-3 flex items-center gap-2">
        <span>‚úÖ</span>
        <span>–ü–ª—é—Å—ã</span>
      </h3>
      <div class="space-y-2">
        ${prosHTML}
      </div>
    </div>
    <div class="bg-white rounded-xl p-4 shadow-sm border border-gray-100">
      <h3 class="text-lg font-bold text-orange-700 mb-3 flex items-center gap-2">
        <span>‚ö†Ô∏è</span>
        <span>–ú–∏–Ω—É—Å—ã</span>
      </h3>
      <div class="space-y-2">
        ${consHTML}
      </div>
    </div>
  </div>

  <!-- Infrastructure -->
  <div class="bg-white rounded-xl p-6 shadow-sm border border-gray-100">
    <h3 class="text-lg font-bold text-gray-900 mb-4">–ò–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä–∞</h3>
    <div class="grid grid-cols-2 md:grid-cols-3 gap-3">
      ${infrastructureHTML}
    </div>
  </div>

  <!-- Best Places in District -->
  <div class="bg-white rounded-xl p-6 shadow-sm border border-gray-100">
    <h3 class="text-lg font-bold text-gray-900 mb-4">üî• –õ—É—á—à–∏–µ –º–µ—Å—Ç–∞ —Ä–∞–π–æ–Ω–∞</h3>
    <p class="text-sm text-gray-600 mb-4">–ß—Ç–æ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –ø–æ—Å–µ—Ç–∏—Ç—å –≤ ${district.title.replace('üìç ', '').split(' ‚Äî ')[0]}:</p>
    <div class="grid grid-cols-1 gap-3">
      ${bestPlacesHTML}
    </div>
    <div class="mt-4 p-3 bg-blue-50 rounded-lg border border-blue-200">
      <p class="text-sm text-gray-700">
        <strong>üéØ –•–æ—Ç–∏—Ç–µ –ø–æ—Å–µ—Ç–∏—Ç—å –≤—Å–µ –º–µ—Å—Ç–∞ ${district.title.replace('üìç ', '').split(' ‚Äî ')[0]}?</strong> 
        <a href="/category/beaches" class="text-blue-600 underline">–°–º–æ—Ç—Ä–∏—Ç–µ –≤—Å–µ –ø–ª—è–∂–∏</a>, 
        <a href="/category/nightlife" class="text-blue-600 underline">–Ω–æ—á–Ω—É—é –∂–∏–∑–Ω—å</a> –∏–ª–∏ 
        <a href="/phuket" class="text-blue-600 underline">–∑–∞–±—Ä–æ–Ω–∏—Ä—É–π—Ç–µ —Ç—É—Ä —Å –≥–∏–¥–æ–º</a>!
      </p>
    </div>
  </div>

  <!-- Nearby Districts -->
  <div class="bg-white rounded-xl p-6 shadow-sm border border-gray-100">
    <h3 class="text-lg font-bold text-gray-900 mb-4">üìç –ë–ª–∏–∑–ª–µ–∂–∞—â–∏–µ —Ä–∞–π–æ–Ω—ã</h3>
    <p class="text-sm text-gray-600 mb-3">–ï—Å–ª–∏ –∑–∞—Ö–æ—á–µ—Ç—Å—è –±–æ–ª–µ–µ —Å–ø–æ–∫–æ–π–Ω–æ–π –æ–±—Å—Ç–∞–Ω–æ–≤–∫–∏, –ø–æ—Å–µ—Ç–∏—Ç–µ —Å–æ—Å–µ–¥–Ω–∏–µ —Ä–∞–π–æ–Ω—ã:</p>
    <ul class="space-y-2">
      ${nearbyDistrictsHTML}
    </ul>
  </div>

  <!-- Final CTA -->
  <div class="bg-gradient-to-r from-blue-50 to-purple-50 rounded-xl p-6 border border-blue-200">
    <p class="text-gray-700 leading-relaxed">
      <strong>üí° –°–æ–≤–µ—Ç:</strong> ${district.finalCta}
    </p>
    <div class="mt-4 flex flex-wrap gap-3">
      <a href="/category/districts" class="bg-blue-500 text-white px-4 py-2 rounded-lg hover:bg-blue-600 text-sm font-semibold">
        üìç –í—Å–µ —Ä–∞–π–æ–Ω—ã –ü—Ö—É–∫–µ—Ç–∞
      </a>
      <a href="/map?category=districts" class="bg-green-500 text-white px-4 py-2 rounded-lg hover:bg-green-600 text-sm font-semibold">
        üó∫Ô∏è –ü–æ–∫–∞–∑–∞—Ç—å –Ω–∞ –∫–∞—Ä—Ç–µ
      </a>
    </div>
  </div>
</div>
  `.trim();
}

async function updatePatongDistrict() {
  const html = generateDistrictHTML(patongDistrict);
  
  // –°–Ω–∞—á–∞–ª–∞ –Ω–∞–π–¥—ë–º ID –ø—Ä–æ–¥—É–∫—Ç–∞ –ü–∞—Ç–æ–Ω–≥–∞ —á–µ—Ä–µ–∑ products –∑–∞–ø—Ä–æ—Å
  const queryProduct = `
    query {
      products(first: 10, query: "handle:patong-district") {
        edges {
          node {
            id
            title
            handle
          }
        }
      }
    }
  `;

  try {
    // –ù–∞–π–¥—ë–º –ø—Ä–æ–¥—É–∫—Ç
    const productResult = await makeRequest(queryProduct);
    if (productResult.errors || !productResult.data.products.edges.length) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞ –ø—Ä–æ–¥—É–∫—Ç–∞:', productResult.errors || '–ü—Ä–æ–¥—É–∫—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω');
      return;
    }

    const product = productResult.data.products.edges[0].node;
    const productId = product.id;
    console.log('‚úÖ –ù–∞–π–¥–µ–Ω –ø—Ä–æ–¥—É–∫—Ç:', product.title, productId);

    // –û–±–Ω–æ–≤–∏–º –æ–ø–∏—Å–∞–Ω–∏–µ (—Ñ–æ—Ä–º–∞—Ç –∫–∞–∫ –≤ –¥—Ä—É–≥–∏—Ö —Å–∫—Ä–∏–ø—Ç–∞—Ö)
    const mutation = `
      mutation productUpdate($input: ProductInput!) {
        productUpdate(input: $input) {
          product {
            id
            title
            handle
            descriptionHtml
          }
          userErrors {
            field
            message
          }
        }
      }
    `;

    const variables = {
      input: {
        id: productId,
        descriptionHtml: html
      }
    };

    console.log(`üìù –î–ª–∏–Ω–∞ HTML: ${html.length} —Å–∏–º–≤–æ–ª–æ–≤`);
    const updateResult = await makeRequest(mutation, variables);

    if (updateResult.errors) {
      console.error('‚ùå GraphQL –æ—à–∏–±–∫–∏:', JSON.stringify(updateResult.errors, null, 2));
      return;
    }

    if (updateResult.data?.productUpdate?.userErrors?.length > 0) {
      console.error('‚ùå –û—à–∏–±–∫–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è:', JSON.stringify(updateResult.data.productUpdate.userErrors, null, 2));
      return;
    }

    console.log('‚úÖ –ü–∞—Ç–æ–Ω–≥ —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª—ë–Ω!');
    console.log('üìÑ –ü—Ä–æ–≤–µ—Ä—å: http://localhost:8080/place/patong-district');
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error.message);
    if (error.message.includes('Body:')) {
      console.error('Response body:', error.message.split('Body:')[1]);
    }
  }
}

function makeRequest(query, variables = null) {
  return new Promise((resolve, reject) => {
    const payload = variables ? { query, variables } : { query };
    const data = JSON.stringify(payload);
    
    const options = {
      hostname: SHOPIFY_STORE,
      path: '/admin/api/2025-07/graphql.json',
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
        'X-Shopify-Access-Token': SHOPIFY_ACCESS_TOKEN,
        'Content-Length': Buffer.byteLength(data)
      }
    };

    const req = https.request(options, (res) => {
      let body = '';
      res.on('data', chunk => body += chunk);
      res.on('end', () => {
        try {
          if (res.statusCode !== 200) {
            console.error('Response status:', res.statusCode);
            console.error('Response body:', body.substring(0, 500));
            reject(new Error(`HTTP ${res.statusCode}: ${body.substring(0, 200)}`));
            return;
          }
          const parsed = JSON.parse(body);
          if (parsed.errors) {
            reject(new Error(`GraphQL errors: ${JSON.stringify(parsed.errors)}`));
            return;
          }
          resolve(parsed);
        } catch (e) {
          reject(new Error(`Parse error: ${e.message}, Body: ${body.substring(0, 500)}`));
        }
      });
    });

    req.on('error', reject);
    req.write(data);
    req.end();
  });
}

// –ó–∞–ø—É—Å–∫
if (require.main === module) {
  console.log('üéØ –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ —à–∞–±–ª–æ–Ω–∞ –¥–ª—è –ü–∞—Ç–æ–Ω–≥–∞ (—ç—Ç–∞–ª–æ–Ω)...\n');
  updatePatongDistrict();
}

module.exports = { generateDistrictHTML, patongDistrict };

