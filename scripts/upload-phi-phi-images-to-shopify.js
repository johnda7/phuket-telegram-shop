#!/usr/bin/env node

/**
 * üöÄ –ó–ê–ì–†–£–ó–ö–ê –ò–ó–û–ë–†–ê–ñ–ï–ù–ò–ô –ü–•–ò-–ü–•–ò –í SHOPIFY
 * 
 * –ó–∞–≥—Ä—É–∂–∞–µ—Ç –≤—Å–µ 17 –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –∏–∑ src/assets/phi-phi-tour/
 * –∏ –¥–æ–±–∞–≤–ª—è–µ—Ç –∏—Ö –∫ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–º—É –ø—Ä–æ–¥—É–∫—Ç—É "–ü—Ö–∏-–ü—Ö–∏ 2 –¥–Ω—è / 1 –Ω–æ—á—å"
 */

import fs from 'fs';
import path from 'path';
import { fileURLToPath } from 'url';
import FormData from 'form-data';
import fetch from 'node-fetch';

const __filename = fileURLToPath(import.meta.url);
const __dirname = path.dirname(__filename);

// Shopify credentials
const SHOP_URL = 'phuket-telegram-shop-117ck.myshopify.com';
const ADMIN_API_TOKEN = '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';
const PRODUCT_ID = 'gid://shopify/Product/7971955343414';

// –ü–∞–ø–∫–∞ —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏
const IMAGES_DIR = path.join(__dirname, '../src/assets/phi-phi-tour');

// –°–ø–∏—Å–æ–∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π —Å –æ–ø–∏—Å–∞–Ω–∏—è–º–∏
const images = [
  { file: 'maya-bay-1.jpg', alt: '–ë—É—Ö—Ç–∞ –ú–∞–π—è –ë—ç–π - –ü—Ö–∏-–ü—Ö–∏' },
  { file: 'maya-bay-2.jpg', alt: '–ë—É—Ö—Ç–∞ –ú–∞–π—è - –≤–∏–¥ —Å–≤–µ—Ä—Ö—É' },
  { file: 'maya-bay-3.jpg', alt: '–ú–∞–π—è –ë—ç–π - –∫—Ä–∏—Å—Ç–∞–ª—å–Ω–æ —á–∏—Å—Ç–∞—è –≤–æ–¥–∞' },
  { file: 'maya-bay-4.jpg', alt: '–ü–ª—è–∂ –ú–∞–π—è –ë—ç–π' },
  { file: 'mayabay-1.jpg', alt: '–ú–∞–π—è –ë—ç–π –ø–∞–Ω–æ—Ä–∞–º–∞' },
  { file: 'mayabay-2.jpg', alt: '–ú–∞–π—è –ë—ç–π - –±–µ–ª—ã–π –ø–µ—Å–æ–∫' },
  { file: 'mayabay-3.jpg', alt: '–ú–∞–π—è –ë—ç–π —Å–∫–∞–ª—ã' },
  { file: 'mayabay-5.jpg', alt: '–ú–∞–π—è –ë—ç–π –ª–æ–¥–∫–∏' },
  { file: 'mayabay-6.jpg', alt: '–ú–∞–π—è –ë—ç–π —Ç—É—Ä–∏—Å—Ç—ã' },
  { file: 'pileh-lagoon.jpg', alt: '–õ–∞–≥—É–Ω–∞ –ü–∏–ª–µ - –∏–∑—É–º—Ä—É–¥–Ω–∞—è –≤–æ–¥–∞' },
  { file: 'viking-cave.jpg', alt: '–ü–µ—â–µ—Ä–∞ –í–∏–∫–∏–Ω–≥–æ–≤' },
  { file: 'bamboo-island.webp', alt: '–û—Å—Ç—Ä–æ–≤ –ë–∞–º–±—É - –±–µ–ª–æ—Å–Ω–µ–∂–Ω—ã–π –ø–ª—è–∂' },
  { file: 'fire-show-1.jpg', alt: '–û–≥–Ω–µ–Ω–Ω–æ–µ —à–æ—É –Ω–∞ –ü—Ö–∏-–ü—Ö–∏' },
  { file: 'fire-show-2.jpg', alt: '–§–∞–π–µ—Ä-—à–æ—É –≤–µ—á–µ—Ä–æ–º' },
  { file: 'fire-show-3.jpg', alt: '–ù–æ—á–Ω–æ–µ –æ–≥–Ω–µ–Ω–Ω–æ–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ' },
  { file: 'rang-yai-1.jpg', alt: '–û—Å—Ç—Ä–æ–≤ –†–∞–Ω–≥ –Ø–π' },
  { file: 'rang-yai-2.jpg', alt: '–†–∞–Ω–≥ –Ø–π –ø–ª—è–∂' }
];

/**
 * GraphQL –∑–∞–ø—Ä–æ—Å –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∫ –ø—Ä–æ–¥—É–∫—Ç—É
 */
async function addImageToProduct(imageUrl, altText) {
  const query = `
    mutation productCreateMedia($media: [CreateMediaInput!]!, $productId: ID!) {
      productCreateMedia(media: $media, productId: $productId) {
        media {
          ... on MediaImage {
            id
            image {
              url
              altText
            }
          }
        }
        mediaUserErrors {
          field
          message
        }
      }
    }
  `;

  const variables = {
    productId: PRODUCT_ID,
    media: [
      {
        mediaContentType: 'IMAGE',
        originalSource: imageUrl,
        alt: altText
      }
    ]
  };

  const response = await fetch(`https://${SHOP_URL}/admin/api/2025-07/graphql.json`, {
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
      'X-Shopify-Access-Token': ADMIN_API_TOKEN
    },
    body: JSON.stringify({ query, variables })
  });

  const result = await response.json();
  
  if (result.data?.productCreateMedia?.mediaUserErrors?.length > 0) {
    throw new Error(result.data.productCreateMedia.mediaUserErrors[0].message);
  }

  return result.data.productCreateMedia.media[0];
}

/**
 * –ó–∞–≥—Ä—É–∂–∞–µ—Ç —Ñ–∞–π–ª –≤ Shopify Files –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç URL
 */
async function uploadFileToShopify(filePath, filename) {
  const fileBuffer = fs.readFileSync(filePath);
  
  // –®–∞–≥ 1: –°–æ–∑–¥–∞—ë–º staged upload
  const stagedUploadQuery = `
    mutation stagedUploadsCreate($input: [StagedUploadInput!]!) {
      stagedUploadsCreate(input: $input) {
        stagedTargets {
          url
          resourceUrl
          parameters {
            name
            value
          }
        }
        userErrors {
          field
          message
        }
      }
    }
  `;

  const stagedUploadVariables = {
    input: [
      {
        resource: 'PRODUCT_IMAGE',
        filename: filename,
        mimeType: filename.endsWith('.webp') ? 'image/webp' : 'image/jpeg',
        httpMethod: 'POST'
      }
    ]
  };

  const stagedResponse = await fetch(`https://${SHOP_URL}/admin/api/2025-07/graphql.json`, {
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
      'X-Shopify-Access-Token': ADMIN_API_TOKEN
    },
    body: JSON.stringify({ 
      query: stagedUploadQuery, 
      variables: stagedUploadVariables 
    })
  });

  const stagedResult = await stagedResponse.json();
  
  if (stagedResult.data?.stagedUploadsCreate?.userErrors?.length > 0) {
    throw new Error(stagedResult.data.stagedUploadsCreate.userErrors[0].message);
  }

  const stagedTarget = stagedResult.data.stagedUploadsCreate.stagedTargets[0];
  
  // –®–∞–≥ 2: –ó–∞–≥—Ä—É–∂–∞–µ–º —Ñ–∞–π–ª –Ω–∞ URL –æ—Ç Shopify
  const formData = new FormData();
  
  // –î–æ–±–∞–≤–ª—è–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∏–∑ staged target
  stagedTarget.parameters.forEach(param => {
    formData.append(param.name, param.value);
  });
  
  // –î–æ–±–∞–≤–ª—è–µ–º —Å–∞–º —Ñ–∞–π–ª
  formData.append('file', fileBuffer, {
    filename: filename,
    contentType: filename.endsWith('.webp') ? 'image/webp' : 'image/jpeg'
  });

  await fetch(stagedTarget.url, {
    method: 'POST',
    body: formData
  });

  // –í–æ–∑–≤—Ä–∞—â–∞–µ–º resourceUrl –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ productCreateMedia
  return stagedTarget.resourceUrl;
}

/**
 * –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
 */
async function uploadAllImages() {
  console.log('üöÄ –ó–ê–ì–†–£–ó–ö–ê –ò–ó–û–ë–†–ê–ñ–ï–ù–ò–ô –ü–•–ò-–ü–•–ò –í SHOPIFY');
  console.log('üì¶ –ü—Ä–æ–¥—É–∫—Ç ID:', PRODUCT_ID);
  console.log('üìÅ –ü–∞–ø–∫–∞:', IMAGES_DIR);
  console.log('üñºÔ∏è  –í—Å–µ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π:', images.length);
  console.log('‚îÄ'.repeat(60));

  let uploaded = 0;
  let errors = 0;

  for (const image of images) {
    try {
      const filePath = path.join(IMAGES_DIR, image.file);
      
      if (!fs.existsSync(filePath)) {
        console.log(`‚è≠Ô∏è  –ü—Ä–æ–ø—É—â–µ–Ω–æ (—Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω): ${image.file}`);
        continue;
      }

      console.log(`üì§ –ó–∞–≥—Ä—É–∂–∞—é: ${image.file}...`);
      
      // –®–∞–≥ 1: –ó–∞–≥—Ä—É–∂–∞–µ–º —Ñ–∞–π–ª –≤ Shopify Files
      const resourceUrl = await uploadFileToShopify(filePath, image.file);
      console.log(`   ‚úÖ –§–∞–π–ª –∑–∞–≥—Ä—É–∂–µ–Ω –≤ Shopify`);
      
      // –®–∞–≥ 2: –î–æ–±–∞–≤–ª—è–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∫ –ø—Ä–æ–¥—É–∫—Ç—É
      await addImageToProduct(resourceUrl, image.alt);
      console.log(`   ‚úÖ –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–æ–±–∞–≤–ª–µ–Ω–æ –∫ –ø—Ä–æ–¥—É–∫—Ç—É: ${image.alt}`);
      
      uploaded++;
      
      // –ó–∞–¥–µ—Ä–∂–∫–∞ –º–µ–∂–¥—É –∑–∞–ø—Ä–æ—Å–∞–º–∏ (1 —Å–µ–∫)
      await new Promise(resolve => setTimeout(resolve, 1000));
      
    } catch (error) {
      console.error(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ ${image.file}:`, error.message);
      errors++;
    }
  }

  console.log('‚îÄ'.repeat(60));
  console.log('üìä –°–¢–ê–¢–ò–°–¢–ò–ö–ê:');
  console.log(`   ‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–æ: ${uploaded}`);
  console.log(`   ‚ùå –û—à–∏–±–æ–∫: ${errors}`);
  console.log(`   üìÅ –í—Å–µ–≥–æ: ${images.length}`);
  console.log('‚îÄ'.repeat(60));

  if (uploaded > 0) {
    console.log('üéâ –ì–æ—Ç–æ–≤–æ! –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –¥–æ–±–∞–≤–ª–µ–Ω—ã –∫ –ø—Ä–æ–¥—É–∫—Ç—É –ü—Ö–∏-–ü—Ö–∏!');
    console.log('');
    console.log('üîó –ü—Ä–æ–≤–µ—Ä—å –ø—Ä–æ–¥—É–∫—Ç:');
    console.log(`   https://admin.shopify.com/store/phuket-telegram-shop-117ck/products/${PRODUCT_ID.split('/').pop()}`);
  }
}

// –ó–∞–ø—É—Å–∫
uploadAllImages().catch(console.error);
