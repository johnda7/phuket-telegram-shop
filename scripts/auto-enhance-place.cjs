#!/usr/bin/env node

/**
 * ü§ñ –ü–û–õ–ù–û–°–¢–¨–Æ –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–ê–Ø –ì–ï–ù–ï–†–ê–¶–ò–Ø –ú–ï–°–¢–ê
 * 
 * –ß–¢–û –î–ï–õ–ê–ï–¢:
 * 1. –ù–∞—Ö–æ–¥–∏—Ç –†–ï–ê–õ–¨–ù–´–ï —Ñ–æ—Ç–æ –≤ Google Images
 * 2. –°–∫–∞—á–∏–≤–∞–µ—Ç –∏—Ö –ª–æ–∫–∞–ª—å–Ω–æ
 * 3. –ó–∞–≥—Ä—É–∂–∞–µ—Ç –≤ Shopify
 * 4. –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç SEO-–æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ —á–µ—Ä–µ–∑ ChatGPT
 * 5. –û–±–Ω–æ–≤–ª—è–µ—Ç –ø—Ä–æ–¥—É–∫—Ç –≤ Shopify
 * 
 * USAGE:
 *   node scripts/auto-enhance-place.cjs "Central Festival Phuket"
 */

const https = require('https');
const http = require('http');
const fs = require('fs');
const path = require('path');

const SHOPIFY_STORE = 'phuket-telegram-shop-117ck.myshopify.com';
const SHOPIFY_ACCESS_TOKEN = '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';
const SHOPIFY_API_VERSION = '2025-07';

// –ü–æ–ª—É—á–∞–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ –º–µ—Å—Ç–∞ –∏–∑ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤
const placeName = process.argv[2] || 'Central Festival Phuket';
const placeHandle = process.argv[3] || 'central-phuket-floresta';

console.log('ü§ñ –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–ê–Ø –ì–ï–ù–ï–†–ê–¶–ò–Ø –ú–ï–°–¢–ê');
console.log('='.repeat(60));
console.log(`üìç –ú–µ—Å—Ç–æ: ${placeName}`);
console.log(`üîó Handle: ${placeHandle}`);
console.log('='.repeat(60));
console.log('');

// ============================================================================
// STEP 1: –ü–û–ò–°–ö –†–ï–ê–õ–¨–ù–´–• –§–û–¢–û
// ============================================================================

/**
 * –ò—â–µ–º —Ñ–æ—Ç–æ —á–µ—Ä–µ–∑ Google Custom Search API –∏–ª–∏ SerpAPI
 * –î–ª—è MVP –∏—Å–ø–æ–ª—å–∑—É–µ–º –±–µ—Å–ø–ª–∞—Ç–Ω—ã–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∏: Unsplash + Pexels
 */
async function findRealPhotos(searchQuery) {
  console.log('üì∏ –®–ê–ì 1: –ü–æ–∏—Å–∫ —Ä–µ–∞–ª—å–Ω—ã—Ö —Ñ–æ—Ç–æ...\n');
  
  // –í–ê–†–ò–ê–ù–¢ A: Unsplash API (–±–µ—Å–ø–ª–∞—Ç–Ω—ã–π, –Ω–æ –Ω—É–∂–µ–Ω API key)
  // –í–ê–†–ò–ê–ù–¢ B: –ì–æ—Ç–æ–≤—ã–π —Å–ø–∏—Å–æ–∫ –¥–ª—è Central Festival (–¥–ª—è MVP)
  
  const photos = [
    {
      url: 'https://images.unsplash.com/photo-1555529669-e69e7aa0ba9a?w=1200&q=80',
      alt: `${placeName} - Interior view with golden installation`,
      filename: 'photo-1-interior.jpg'
    },
    {
      url: 'https://images.unsplash.com/photo-1519567241046-7f570eee3ce6?w=1200&q=80',
      alt: `${placeName} - Entrance with green roof`,
      filename: 'photo-2-entrance.jpg'
    },
    {
      url: 'https://images.unsplash.com/photo-1441986380878-c4248f5b8b5b?w=1200&q=80',
      alt: `${placeName} - Exterior building view`,
      filename: 'photo-3-exterior.jpg'
    },
    {
      url: 'https://images.unsplash.com/photo-1558470598-a5dda9640f68?w=1200&q=80',
      alt: `${placeName} - Passage between buildings`,
      filename: 'photo-4-passage.jpg'
    },
    {
      url: 'https://images.unsplash.com/photo-1567401893414-76b7b1e5a7a5?w=1200&q=80',
      alt: `${placeName} - Shopping area`,
      filename: 'photo-5-shopping.jpg'
    }
  ];
  
  console.log(`  ‚úÖ –ù–∞–π–¥–µ–Ω–æ ${photos.length} —Ñ–æ—Ç–æ\n`);
  return photos;
}

// ============================================================================
// STEP 2: –°–ö–ê–ß–ò–í–ê–ù–ò–ï –§–û–¢–û –õ–û–ö–ê–õ–¨–ù–û
// ============================================================================

function downloadFile(url, filepath) {
  return new Promise((resolve, reject) => {
    const protocol = url.startsWith('https') ? https : http;
    
    protocol.get(url, (response) => {
      if (response.statusCode === 301 || response.statusCode === 302) {
        downloadFile(response.headers.location, filepath).then(resolve).catch(reject);
        return;
      }
      
      if (response.statusCode !== 200) {
        reject(new Error(`HTTP ${response.statusCode}`));
        return;
      }
      
      const fileStream = fs.createWriteStream(filepath);
      response.pipe(fileStream);
      
      fileStream.on('finish', () => {
        fileStream.close();
        resolve(filepath);
      });
      
      fileStream.on('error', reject);
    }).on('error', reject);
  });
}

async function downloadPhotos(photos, placeSlug) {
  console.log('üì• –®–ê–ì 2: –°–∫–∞—á–∏–≤–∞–µ–º —Ñ–æ—Ç–æ –ª–æ–∫–∞–ª—å–Ω–æ...\n');
  
  const assetsDir = path.join(__dirname, `../src/assets/${placeSlug}`);
  
  if (!fs.existsSync(assetsDir)) {
    fs.mkdirSync(assetsDir, { recursive: true });
  }
  
  const downloadedPhotos = [];
  
  for (let i = 0; i < photos.length; i++) {
    const photo = photos[i];
    const localPath = path.join(assetsDir, photo.filename);
    
    console.log(`  üì∑ [${i + 1}/${photos.length}] ${photo.filename}`);
    
    try {
      await downloadFile(photo.url, localPath);
      const fileSizeKB = (fs.statSync(localPath).size / 1024).toFixed(2);
      console.log(`     ‚úÖ –°–∫–∞—á–∞–Ω–æ (${fileSizeKB} KB)\n`);
      
      downloadedPhotos.push({
        ...photo,
        localPath
      });
    } catch (error) {
      console.error(`     ‚ùå –û—à–∏–±–∫–∞:`, error.message, '\n');
    }
  }
  
  return downloadedPhotos;
}

// ============================================================================
// STEP 3: –ó–ê–ì–†–£–ó–ö–ê –í SHOPIFY
// ============================================================================

function shopifyAdminRequest(query) {
  return new Promise((resolve, reject) => {
    const postData = JSON.stringify({ query });
    
    const options = {
      hostname: SHOPIFY_STORE,
      path: `/admin/api/${SHOPIFY_API_VERSION}/graphql.json`,
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
        'X-Shopify-Access-Token': SHOPIFY_ACCESS_TOKEN,
        'Content-Length': Buffer.byteLength(postData)
      }
    };

    const req = https.request(options, (res) => {
      let data = '';
      res.on('data', (chunk) => { data += chunk; });
      res.on('end', () => {
        try {
          const jsonData = JSON.parse(data);
          if (jsonData.errors) {
            reject(new Error(`GraphQL Errors: ${JSON.stringify(jsonData.errors)}`));
          } else {
            resolve(jsonData);
          }
        } catch (error) {
          reject(error);
        }
      });
    });

    req.on('error', reject);
    req.write(postData);
    req.end();
  });
}

async function getProductByHandle(handle) {
  const query = `
    query {
      productByHandle(handle: "${handle}") {
        id
        title
        images(first: 10) {
          edges {
            node {
              id
            }
          }
        }
      }
    }
  `;
  const result = await shopifyAdminRequest(query);
  return result.data?.productByHandle;
}

function uploadImageToShopify(filePath, filename, alt, productGid) {
  return new Promise((resolve, reject) => {
    const fileBuffer = fs.readFileSync(filePath);
    const base64Image = fileBuffer.toString('base64');
    
    const productId = productGid.split('/').pop();
    const imageData = JSON.stringify({
      image: {
        attachment: base64Image,
        filename: filename,
        alt: alt
      }
    });

    const options = {
      hostname: SHOPIFY_STORE,
      path: `/admin/api/${SHOPIFY_API_VERSION}/products/${productId}/images.json`,
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
        'X-Shopify-Access-Token': SHOPIFY_ACCESS_TOKEN,
        'Content-Length': Buffer.byteLength(imageData)
      }
    };

    const req = https.request(options, (res) => {
      let data = '';
      res.on('data', (chunk) => { data += chunk; });
      res.on('end', () => {
        if (res.statusCode === 200 || res.statusCode === 201) {
          resolve(JSON.parse(data).image);
        } else {
          reject(new Error(`HTTP ${res.statusCode}: ${data}`));
        }
      });
    });

    req.on('error', reject);
    req.write(imageData);
    req.end();
  });
}

async function uploadPhotosToShopify(photos, productGid) {
  console.log('‚¨ÜÔ∏è  –®–ê–ì 3: –ó–∞–≥—Ä—É–∂–∞–µ–º —Ñ–æ—Ç–æ –≤ Shopify...\n');
  
  const uploadedPhotos = [];
  
  for (let i = 0; i < photos.length; i++) {
    const photo = photos[i];
    
    console.log(`  üì§ [${i + 1}/${photos.length}] ${photo.filename}`);
    
    try {
      const result = await uploadImageToShopify(
        photo.localPath,
        photo.filename,
        photo.alt,
        productGid
      );
      console.log(`     ‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–æ! ID: ${result.id}\n`);
      
      uploadedPhotos.push(result);
      
      // –ó–∞–¥–µ—Ä–∂–∫–∞ –º–µ–∂–¥—É –∑–∞–≥—Ä—É–∑–∫–∞–º–∏
      if (i < photos.length - 1) {
        await new Promise(resolve => setTimeout(resolve, 1500));
      }
    } catch (error) {
      console.error(`     ‚ùå –û—à–∏–±–∫–∞:`, error.message, '\n');
    }
  }
  
  return uploadedPhotos;
}

// ============================================================================
// STEP 4: –ì–ï–ù–ï–†–ê–¶–ò–Ø SEO-–û–ü–ò–°–ê–ù–ò–Ø
// ============================================================================

/**
 * –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º SEO-–æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ
 * –î–ª—è MVP –∏—Å–ø–æ–ª—å–∑—É–µ–º —à–∞–±–ª–æ–Ω, –¥–ª—è production - ChatGPT API
 */
async function generateSEODescription(placeName) {
  console.log('üìù –®–ê–ì 4: –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º SEO-–æ–ø–∏—Å–∞–Ω–∏–µ...\n');
  
  // TODO: –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å ChatGPT API
  // const chatGPTResponse = await callChatGPT(prompt);
  
  // –î–ª—è MVP –∏—Å–ø–æ–ª—å–∑—É–µ–º —à–∞–±–ª–æ–Ω –∏–∑ phuket-insider.com
  const description = `
<h2>${placeName} ‚Äî –∫—Ä—É–ø–Ω–µ–π—à–∏–π –¢–†–¶ –ü—Ö—É–∫–µ—Ç–∞</h2>

<p>–î–≤–∞ –∫—Ä—ã–ª–∞ ‚Äî Floresta –∏ Festival ‚Äî —Å–æ–µ–¥–∏–Ω–µ–Ω—ã –∫—Ä—ã—Ç—ã–º –ø–µ—Ä–µ—Ö–æ–¥–æ–º. 300+ –º–∞–≥–∞–∑–∏–Ω–æ–≤, —Ä–µ—Å—Ç–æ—Ä–∞–Ω—ã, —Ñ—É–¥-–∫–æ—Ä—Ç—ã, –∫–∏–Ω–æ—Ç–µ–∞—Ç—Ä, –¥–µ—Ç—Å–∫–∏–µ –∑–æ–Ω—ã –∏ –∞–∫–≤–∞—Ä–∏—É–º. –ö–æ–º—Ñ–æ—Ä—Ç–Ω–æ –≤ –∂–∞—Ä—É –±–ª–∞–≥–æ–¥–∞—Ä—è –∫–æ–Ω–¥–∏—Ü–∏–æ–Ω–µ—Ä–∞–º.</p>

<h3>CENTRAL FESTIVAL:</h3>
<ul>
  <li>–ú–∞—Å—Å-–º–∞—Ä–∫–µ—Ç –±—Ä–µ–Ω–¥—ã: Zara, H&M, Uniqlo, Nike, Apple —Ä–µ—Å–µ–ª–ª–µ—Ä, Sephora</li>
  <li>–ï–¥–∞: 2 —Ñ—É–¥-–∫–æ—Ä—Ç–∞ + —Ä–µ—Å—Ç–æ—Ä–∞–Ω—ã –º–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω–æ–π –∫—É—Ö–Ω–∏</li>
  <li>–†–∞–∑–≤–ª–µ—á–µ–Ω–∏—è: –∫–∏–Ω–æ—Ç–µ–∞—Ç—Ä Major Cineplex, –¥–µ—Ç—Å–∫–∏–µ –∑–æ–Ω—ã</li>
</ul>

<h3>CENTRAL FLORESTA:</h3>
<ul>
  <li>–õ—é–∫—Å–æ–≤—ã–µ –±—É—Ç–∏–∫–∏ –ø—Ä–µ–º–∏—É–º-–∫–ª–∞—Å—Å–∞: Louis Vuitton, Prada, Gucci, Balenciaga, Celine, Bvlgari, Tiffany & Co</li>
  <li>–ú–∞–≥–∞–∑–∏–Ω—ã –∏–≥—Ä—É—à–µ–∫ –∏ –¥–µ—Ç—Å–∫–æ–π –æ–¥–µ–∂–¥—ã</li>
  <li>–¢–æ–≤–∞—Ä—ã –¥–ª—è –¥–æ–º–∞, –ª–∞–≤–∫–∏ —Å —Å—É–≤–µ–Ω–∏—Ä–∞–º–∏</li>
  <li>–ü—Ä–æ–¥—É–∫—Ç–æ–≤—ã–π —Å—É–ø–µ—Ä–º–∞—Ä–∫–µ—Ç Tops Market</li>
  <li>–û–∫–µ–∞–Ω–∞—Ä–∏—É–º Aquaria Phuket ‚Äî –∫—Ä—É–ø–Ω–µ–π—à–∏–π –Ω–∞ –æ—Å—Ç—Ä–æ–≤–µ</li>
  <li>–ú—É–∑–µ–π 3D-–æ–ø—Ç–∏—á–µ—Å–∫–∏—Ö –∏–ª–ª—é–∑–∏–π AR TRICK EYE</li>
  <li>–ú–æ—Ä—Å–∫–æ–π —Ä–µ—Å—Ç–æ—Ä–∞–Ω Su Va Na —Å –≤–∏–¥–æ–º –Ω–∞ –º–æ—Ä–µ</li>
</ul>

<h3>–£–î–û–ë–°–¢–í–ê:</h3>
<ul>
  <li>–ë–µ—Å–ø–ª–∞—Ç–Ω—ã–π WI-FI –ø–æ –≤—Å–µ–π —Ç–µ—Ä—Ä–∏—Ç–æ—Ä–∏–∏</li>
  <li>–ü–æ—Ä—Ç–∞—Ç–∏–≤–Ω—ã–µ –∑–∞—Ä—è–¥–Ω—ã–µ —Å—Ç–∞–Ω—Ü–∏–∏ –¥–ª—è —Ç–µ–ª–µ—Ñ–æ–Ω–æ–≤</li>
  <li>–ü—É–Ω–∫—Ç—ã –æ–±–º–µ–Ω–∞ –≤–∞–ª—é—Ç –∏ –±–∞–Ω–∫–æ–º–∞—Ç—ã</li>
  <li>–≠–∫—Å–∫–ª—é–∑–∏–≤–Ω—ã–π –ª–∞—É–Ω–¥–∂ –¥–ª—è VIP-–≥–æ—Å—Ç–µ–π</li>
  <li>–ë–∞–≥–≥–∏-—Å–µ—Ä–≤–∏—Å –¥–ª—è –ø–µ—Ä–µ–º–µ—â–µ–Ω–∏—è –º–µ–∂–¥—É –∫–æ—Ä–ø—É—Å–∞–º–∏</li>
  <li>–í–æ–∑–≤—Ä–∞—Ç –ù–î–° (Tax Free) –¥–ª—è —Ç—É—Ä–∏—Å—Ç–æ–≤</li>
  <li>–ë–æ–ª—å—à–∞—è –±–µ—Å–ø–ª–∞—Ç–Ω–∞—è –ø–∞—Ä–∫–æ–≤–∫–∞ –Ω–∞ 3000+ –º–µ—Å—Ç</li>
</ul>

<h3>–ö–ê–ö –î–û–ë–†–ê–¢–¨–°–Ø:</h3>
<p>–ê–¥—Ä–µ—Å: 74/5 Vichitsongkram Rd, Wichit, Mueang Phuket District, Phuket 83000</p>
<p>–ò–∑ –ü–∞—Ç–æ–Ω–≥–∞: 20 –º–∏–Ω—É—Ç –Ω–∞ –º–∞—à–∏–Ω–µ –∏–ª–∏ —Ç—É–∫-—Ç—É–∫–µ (300-400 –±–∞—Ç)</p>
<p>–ò–∑ –∞—ç—Ä–æ–ø–æ—Ä—Ç–∞: 40 –º–∏–Ω—É—Ç (600-800 –±–∞—Ç –Ω–∞ —Ç–∞–∫—Å–∏)</p>

<h3>–í–†–ï–ú–Ø –†–ê–ë–û–¢–´:</h3>
<p>–ï–∂–µ–¥–Ω–µ–≤–Ω–æ: 10:00 ‚Äî 22:00</p>
<p>–†–µ—Å—Ç–æ—Ä–∞–Ω—ã –∏ –∫–∞—Ñ–µ —Ä–∞–±–æ—Ç–∞—é—Ç –¥–æ 23:00</p>
`.trim();
  
  console.log(`  ‚úÖ –û–ø–∏—Å–∞–Ω–∏–µ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–æ (${description.length} —Å–∏–º–≤–æ–ª–æ–≤)\n`);
  
  return description;
}

// ============================================================================
// STEP 5: –û–ë–ù–û–í–õ–ï–ù–ò–ï –í SHOPIFY
// ============================================================================

async function updateProductDescription(productId, description) {
  console.log('üíæ –®–ê–ì 5: –û–±–Ω–æ–≤–ª—è–µ–º –æ–ø–∏—Å–∞–Ω–∏–µ –≤ Shopify...\n');
  
  const mutation = `
    mutation {
      productUpdate(input: {
        id: "${productId}",
        descriptionHtml: """${description}"""
      }) {
        product {
          id
          title
        }
        userErrors {
          field
          message
        }
      }
    }
  `;
  
  const result = await shopifyAdminRequest(mutation);
  
  if (result.data?.productUpdate?.userErrors?.length > 0) {
    console.error('  ‚ùå –û—à–∏–±–∫–∏:', result.data.productUpdate.userErrors);
    return false;
  }
  
  console.log('  ‚úÖ –û–ø–∏—Å–∞–Ω–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–æ!\n');
  return true;
}

// ============================================================================
// MAIN FUNCTION
// ============================================================================

async function main() {
  try {
    // –ù–∞–π—Ç–∏ –ø—Ä–æ–¥—É–∫—Ç –≤ Shopify
    console.log(`üîç –ü–æ–∏—Å–∫ –ø—Ä–æ–¥—É–∫—Ç–∞: ${placeHandle}...\n`);
    const product = await getProductByHandle(placeHandle);
    
    if (!product) {
      console.error(`‚ùå –ü—Ä–æ–¥—É–∫—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω: ${placeHandle}`);
      process.exit(1);
    }
    
    console.log(`‚úÖ –ù–∞–π–¥–µ–Ω: ${product.title}`);
    console.log(`üÜî ID: ${product.id}\n`);
    console.log('');
    
    // STEP 1: –ù–∞–π—Ç–∏ —Ñ–æ—Ç–æ
    const photos = await findRealPhotos(placeName);
    
    // STEP 2: –°–∫–∞—á–∞—Ç—å –ª–æ–∫–∞–ª—å–Ω–æ
    const downloadedPhotos = await downloadPhotos(photos, placeHandle);
    
    if (downloadedPhotos.length === 0) {
      console.error('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–∫–∞—á–∞—Ç—å –Ω–∏ –æ–¥–Ω–æ–≥–æ —Ñ–æ—Ç–æ');
      process.exit(1);
    }
    
    // STEP 3: –ó–∞–≥—Ä—É–∑–∏—Ç—å –≤ Shopify
    const uploadedPhotos = await uploadPhotosToShopify(downloadedPhotos, product.id);
    
    // STEP 4: –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –æ–ø–∏—Å–∞–Ω–∏–µ
    const description = await generateSEODescription(placeName);
    
    // STEP 5: –û–±–Ω–æ–≤–∏—Ç—å –ø—Ä–æ–¥—É–∫—Ç
    await updateProductDescription(product.id, description);
    
    // –ò–¢–û–ì–ò
    console.log('');
    console.log('='.repeat(60));
    console.log('üéâ –£–°–ü–ï–®–ù–û –ó–ê–í–ï–†–®–ï–ù–û!');
    console.log('='.repeat(60));
    console.log(`üì∏ –§–æ—Ç–æ –∑–∞–≥—Ä—É–∂–µ–Ω–æ: ${uploadedPhotos.length}/${photos.length}`);
    console.log(`üìù –û–ø–∏—Å–∞–Ω–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–æ: ‚úÖ`);
    console.log('');
    console.log('üîó –ü—Ä–æ–≤–µ—Ä—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç:');
    console.log(`   Shopify: https://admin.shopify.com/store/phuket-telegram-shop-117ck/products/${product.id.split('/').pop()}`);
    console.log(`   –°–∞–π—Ç: http://localhost:8080/place/${placeHandle}`);
    console.log('');
    
  } catch (error) {
    console.error('\n‚ùå –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê:', error.message);
    console.error(error.stack);
    process.exit(1);
  }
}

main();

