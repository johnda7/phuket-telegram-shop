import { useState } from "react";
import { Link } from "react-router-dom";
import { ChevronDown, ChevronRight } from "lucide-react";
import {
  Sheet,
  SheetContent,
  SheetHeader,
  SheetTitle,
  SheetTrigger,
} from "@/components/ui/sheet";
import { Button } from "@/components/ui/button";
import { cn } from "@/lib/utils";

interface MenuItem {
  icon: string;
  label: string;
  href?: string;
  submenu?: {
    icon: string;
    label: string;
    href: string;
    tag: string;
  }[];
}

const menuStructure: MenuItem[] = [
  {
    icon: "üå¥",
    label: "–ú–æ—Ä—Å–∫–∏–µ —Ç—É—Ä—ã",
    submenu: [
      { icon: "üö§", label: "–í—Å–µ –º–æ—Ä—Å–∫–∏–µ —Ç—É—Ä—ã", href: "/phuket?category=tour", tag: "islands" },
      { icon: "üèùÔ∏è", label: "–ü—Ö–∏-–ü—Ö–∏ –æ—Å—Ç—Ä–æ–≤–∞", href: "/product/phi-phi-2-days-1-night", tag: "phi-phi" },
      { icon: "üé¨", label: "–î–∂–µ–π–º—Å –ë–æ–Ω–¥", href: "/product/james-bond-island-tour", tag: "james-bond" },
      { icon: "üê†", label: "–†–∞—á–∞ –∏ –ö–æ—Ä–∞–ª", href: "/product/racha-coral-islands", tag: "racha" },
      { icon: "üíé", label: "–ü—Ä–µ–º–∏—É–º —Ç—É—Ä—ã", href: "/phuket?category=tour", tag: "premium" },
      { icon: "üåô", label: "–ú–Ω–æ–≥–æ–¥–Ω–µ–≤–Ω—ã–µ", href: "/phuket?category=tour", tag: "2-days" },
    ]
  },
  {
    icon: "üéØ",
    label: "–ü—Ä–∏–∫–ª—é—á–µ–Ω–∏—è",
    submenu: [
      { icon: "‚ö°", label: "–í—Å–µ –∞–∫—Ç–∏–≤–Ω—ã–µ —Ç—É—Ä—ã", href: "/phuket?category=tour", tag: "adventure" },
      { icon: "ü™Ç", label: "–ó–∏–ø–ª–∞–π–Ω –∏ ATV", href: "/product/rafting-spa-atv", tag: "zipline" },
      { icon: "üêò", label: "–°–ª–æ–Ω—ã –∏ –¥–∂—É–Ω–≥–ª–∏", href: "/phuket?category=temple", tag: "elephants" },
      { icon: "üèûÔ∏è", label: "–í–æ–¥–æ–ø–∞–¥—ã –∏ –ø—Ä–∏—Ä–æ–¥–∞", href: "/product/khao-lak-safari", tag: "nature" },
    ]
  },
  {
    icon: "üìç",
    label: "–î–æ—Å—Ç–æ–ø—Ä–∏–º–µ—á–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏",
    submenu: [
      { icon: "üèõÔ∏è", label: "–í—Å–µ –º–µ—Å—Ç–∞", href: "/phuket?category=temple", tag: "place" },
      { icon: "‚õ©Ô∏è", label: "–•—Ä–∞–º—ã", href: "/phuket?category=temple", tag: "temples" },
      { icon: "üëÅÔ∏è", label: "–°–º–æ—Ç—Ä–æ–≤—ã–µ –ø–ª–æ—â–∞–¥–∫–∏", href: "/categories/viewpoints", tag: "viewpoints" },
      { icon: "üé≠", label: "–ö—É–ª—å—Ç—É—Ä–Ω—ã–µ –º–µ—Å—Ç–∞", href: "/phuket?category=temple", tag: "culture" },
    ]
  },
  {
    icon: "üèñÔ∏è",
    label: "–ü–ª—è–∂–∏",
    href: "/beaches",
  },
  {
    icon: "‚ÑπÔ∏è",
    label: "–ü–æ–ª–µ–∑–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è",
    href: "/phuket",
  }
];

interface TourMenuProps {
  trigger?: React.ReactNode;
}

export const TourMenu = ({ trigger }: TourMenuProps) => {
  const [isOpen, setIsOpen] = useState(false);
  const [expandedSection, setExpandedSection] = useState<string | null>(null);

  const toggleSection = (label: string) => {
    setExpandedSection(expandedSection === label ? null : label);
  };

  return (
    <Sheet open={isOpen} onOpenChange={setIsOpen}>
      <SheetTrigger asChild>
        {trigger || (
          <Button variant="ghost" size="sm" className="gap-2">
            <span>üìã</span>
            <span className="hidden sm:inline">–ú–µ–Ω—é</span>
          </Button>
        )}
      </SheetTrigger>
      <SheetContent side="left" className="w-[300px] sm:w-[350px] overflow-y-auto">
        <SheetHeader className="mb-6">
          <SheetTitle className="text-2xl">
            üèùÔ∏è PhuketDa
          </SheetTitle>
        </SheetHeader>
        
        <nav className="space-y-2">
          {menuStructure.map((section) => (
            <div key={section.label} className="space-y-1">
              {section.href ? (
                <Link
                  to={section.href}
                  onClick={() => setIsOpen(false)}
                  className="flex items-center gap-3 px-4 py-3 rounded-lg hover:bg-secondary/80 transition-all group"
                >
                  <span className="text-xl">{section.icon}</span>
                  <span className="font-medium">{section.label}</span>
                  <ChevronRight className="w-4 h-4 ml-auto opacity-0 group-hover:opacity-100 transition-opacity" />
                </Link>
              ) : (
                <>
                  <button
                    onClick={() => toggleSection(section.label)}
                    className={cn(
                      "w-full flex items-center gap-3 px-4 py-3 rounded-lg transition-all",
                      expandedSection === section.label 
                        ? "bg-primary/10 text-primary font-semibold" 
                        : "hover:bg-secondary/80"
                    )}
                  >
                    <span className="text-xl">{section.icon}</span>
                    <span className="font-medium">{section.label}</span>
                    <ChevronDown 
                      className={cn(
                        "w-4 h-4 ml-auto transition-transform",
                        expandedSection === section.label && "rotate-180"
                      )} 
                    />
                  </button>
                  
                  {expandedSection === section.label && section.submenu && (
                    <div className="ml-8 space-y-1 mt-1 animate-in fade-in slide-in-from-top-2">
                      {section.submenu.map((item) => (
                        <Link
                          key={item.href}
                          to={item.href}
                          onClick={() => setIsOpen(false)}
                          className="flex items-center gap-3 px-3 py-2 rounded-lg hover:bg-secondary/60 transition-all text-sm group"
                        >
                          <span>{item.icon}</span>
                          <span>{item.label}</span>
                          <ChevronRight className="w-3 h-3 ml-auto opacity-0 group-hover:opacity-100 transition-opacity" />
                        </Link>
                      ))}
                    </div>
                  )}
                </>
              )}
            </div>
          ))}
        </nav>
      </SheetContent>
    </Sheet>
  );
};
