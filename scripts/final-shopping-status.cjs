const https = require('https');

const SHOPIFY_STORE = 'phuket-telegram-shop-117ck.myshopify.com';
const SHOPIFY_ACCESS_TOKEN = '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';
const SHOPIFY_API_VERSION = '2025-07';

function makeGraphQLRequest(query, variables = {}) {
  return new Promise((resolve, reject) => {
    const postData = JSON.stringify({ query, variables });
    
    const options = {
      hostname: SHOPIFY_STORE,
      port: 443,
      path: `/admin/api/${SHOPIFY_API_VERSION}/graphql.json`,
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
        'X-Shopify-Access-Token': SHOPIFY_ACCESS_TOKEN,
        'Content-Length': Buffer.byteLength(postData)
      }
    };

    const req = https.request(options, (res) => {
      let data = '';
      res.on('data', (chunk) => { data += chunk; });
      res.on('end', () => {
        try {
          const jsonData = JSON.parse(data);
          if (jsonData.errors) {
            reject(new Error(`GraphQL Errors: ${JSON.stringify(jsonData.errors)}`));
          } else {
            resolve(jsonData);
          }
        } catch (error) {
          reject(error);
        }
      });
    });

    req.on('error', reject);
    req.write(postData);
    req.end();
  });
}

async function getProductByHandle(handle) {
  const query = `
    query getProduct($handle: String!) {
      productByHandle(handle: $handle) {
        id
        title
        handle
        productType
        tags
        status
        publishedAt
        descriptionHtml
        images(first: 10) {
          edges {
            node {
              url
              altText
            }
          }
        }
      }
    }
  `;
  const result = await makeGraphQLRequest(query, { handle });
  return result.data?.productByHandle;
}

const shoppingCenters = [
  { handle: 'central-phuket-floresta', name: 'Central Phuket' },
  { handle: 'jungceylon-shopping-center', name: 'Jungceylon' },
  { handle: 'premium-outlet-phuket', name: 'Premium Outlet' },
  { handle: 'big-c-supercenter-phuket', name: 'Big C' },
  { handle: 'robinson-lifestyle-phuket', name: 'Robinson' },
  { handle: 'tesco-lotus-phuket', name: 'Tesco Lotus' },
  { handle: 'patong-night-market', name: 'Patong Night Market' }
];

async function main() {
  console.log('üìä –ò–¢–û–ì–û–í–´–ô –û–¢–ß–ï–¢: –¢–û–†–ì–û–í–´–ï –¶–ï–ù–¢–†–´');
  console.log('='.repeat(60));

  let totalPhotos = 0;
  let centersWithDescription = 0;
  let centersWithPhotos = 0;
  let centersPublished = 0;

  for (let i = 0; i < shoppingCenters.length; i++) {
    const center = shoppingCenters[i];
    console.log(`\nüìù [${i + 1}/${shoppingCenters.length}] ${center.name}`);
    
    try {
      const product = await getProductByHandle(center.handle);
      
      if (!product) {
        console.error(`‚ùå –ü—Ä–æ–¥—É–∫—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω: ${center.handle}`);
        continue;
      }
      
      const photoCount = product.images.edges.length;
      const hasDescription = product.descriptionHtml && product.descriptionHtml.length > 100;
      const isPublished = product.publishedAt !== null;
      
      totalPhotos += photoCount;
      if (hasDescription) centersWithDescription++;
      if (photoCount >= 3) centersWithPhotos++;
      if (isPublished) centersPublished++;
      
      console.log(`   ‚úÖ –ù–∞–∑–≤–∞–Ω–∏–µ: ${product.title}`);
      console.log(`   üì¶ Product Type: ${product.productType}`);
      console.log(`   üè∑Ô∏è Tags: ${product.tags.length} —Ç–µ–≥–æ–≤`);
      console.log(`   üì∏ –§–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π: ${photoCount}`);
      console.log(`   üìù –û–ø–∏—Å–∞–Ω–∏–µ: ${hasDescription ? '‚úÖ –ï—Å—Ç—å' : '‚ùå –ù–µ—Ç'} (${product.descriptionHtml?.length || 0} —Å–∏–º–≤–æ–ª–æ–≤)`);
      console.log(`   üìÖ –û–ø—É–±–ª–∏–∫–æ–≤–∞–Ω: ${isPublished ? '‚úÖ –î–∞' : '‚ùå –ù–µ—Ç'}`);
      console.log(`   üÜî ID: ${product.id}`);
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞—á–µ—Å—Ç–≤–æ –æ–ø–∏—Å–∞–Ω–∏—è
      if (hasDescription) {
        const hasHeadings = product.descriptionHtml.includes('<h1>') || product.descriptionHtml.includes('<h2>');
        const hasLinks = product.descriptionHtml.includes('<a href');
        const hasFormatting = product.descriptionHtml.includes('<div') || product.descriptionHtml.includes('<p>');
        
        console.log(`   üìã –ö–∞—á–µ—Å—Ç–≤–æ –æ–ø–∏—Å–∞–Ω–∏—è:`);
        console.log(`      ${hasHeadings ? '‚úÖ' : '‚ùå'} –ó–∞–≥–æ–ª–æ–≤–∫–∏`);
        console.log(`      ${hasLinks ? '‚úÖ' : '‚ùå'} –°—Å—ã–ª–∫–∏ –Ω–∞ —Å–µ—Ä–≤–∏—Å—ã`);
        console.log(`      ${hasFormatting ? '‚úÖ' : '‚ùå'} HTML —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ`);
      }
      
    } catch (error) {
      console.error(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ ${center.name}:`, error.message);
    }
  }

  console.log('\n' + '='.repeat(60));
  console.log('üìä –ò–¢–û–ì–û–í–ê–Ø –°–¢–ê–¢–ò–°–¢–ò–ö–ê:');
  console.log('='.repeat(60));
  console.log(`‚úÖ –í—Å–µ–≥–æ —Ç–æ—Ä–≥–æ–≤—ã—Ö —Ü–µ–Ω—Ç—Ä–æ–≤: ${shoppingCenters.length}`);
  console.log(`‚úÖ –° –æ–ø–∏—Å–∞–Ω–∏–µ–º: ${centersWithDescription}/${shoppingCenters.length}`);
  console.log(`‚úÖ –° —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è–º–∏ (‚â•3): ${centersWithPhotos}/${shoppingCenters.length}`);
  console.log(`‚úÖ –û–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–Ω—ã—Ö: ${centersPublished}/${shoppingCenters.length}`);
  console.log(`üì∏ –í—Å–µ–≥–æ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π: ${totalPhotos}`);
  console.log(`üì∏ –°—Ä–µ–¥–Ω–µ–µ –Ω–∞ –¢–¶: ${(totalPhotos / shoppingCenters.length).toFixed(1)}`);
  
  console.log('\nüìã –ß–ï–ö–õ–ò–°–¢ –ì–û–¢–û–í–ù–û–°–¢–ò:');
  console.log(`   ${centersWithDescription === shoppingCenters.length ? '‚úÖ' : '‚ùå'} –í—Å–µ –æ–ø–∏—Å–∞–Ω–∏—è –≥–æ—Ç–æ–≤—ã`);
  console.log(`   ${centersWithPhotos === shoppingCenters.length ? '‚úÖ' : '‚ùå'} –í—Å–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –∑–∞–≥—Ä—É–∂–µ–Ω—ã`);
  console.log(`   ${centersPublished === shoppingCenters.length ? '‚úÖ' : '‚ùå'} –í—Å–µ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω—ã`);
  
  if (centersWithDescription === shoppingCenters.length && 
      centersWithPhotos === shoppingCenters.length && 
      centersPublished === shoppingCenters.length) {
    console.log('\nüéâ –í–°–ï –ì–û–¢–û–í–û! –ö–∞—Ç–µ–≥–æ—Ä–∏—è "–¢–æ—Ä–≥–æ–≤—ã–µ —Ü–µ–Ω—Ç—Ä—ã" –ø–æ–ª–Ω–æ—Å—Ç—å—é –∑–∞–ø–æ–ª–Ω–µ–Ω–∞!');
  } else {
    console.log('\n‚ö†Ô∏è –¢–†–ï–ë–£–Æ–¢–°–Ø –î–û–†–ê–ë–û–¢–ö–ò:');
    if (centersWithDescription < shoppingCenters.length) {
      console.log('   - –î–æ–±–∞–≤–∏—Ç—å –æ–ø–∏—Å–∞–Ω–∏—è –¥–ª—è –æ—Å—Ç–∞–≤—à–∏—Ö—Å—è –¢–¶');
    }
    if (centersWithPhotos < shoppingCenters.length) {
      console.log('   - –ó–∞–≥—Ä—É–∑–∏—Ç—å —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –¥–ª—è –æ—Å—Ç–∞–≤—à–∏—Ö—Å—è –¢–¶');
    }
    if (centersPublished < shoppingCenters.length) {
      console.log('   - –û–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å –æ—Å—Ç–∞–≤—à–∏–µ—Å—è –¢–¶');
    }
  }
  
  console.log('\nüîó –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –Ω–∞ —Å–∞–π—Ç–µ: http://localhost:8080/category/shopping');
}

main().catch(console.error);
