const https = require('https');

const SHOPIFY_STORE = 'phuket-telegram-shop-117ck.myshopify.com';
const SHOPIFY_ACCESS_TOKEN = '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';

async function makeGraphQLRequest(query) {
  return new Promise((resolve, reject) => {
    const data = JSON.stringify({ query });
    
    const options = {
      hostname: SHOPIFY_STORE,
      port: 443,
      path: '/admin/api/2025-07/graphql.json',
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
        'X-Shopify-Access-Token': SHOPIFY_ACCESS_TOKEN,
        'Content-Length': data.length
      }
    };

    const req = https.request(options, (res) => {
      let responseData = '';
      res.on('data', (chunk) => {
        responseData += chunk;
      });
      res.on('end', () => {
        try {
          const result = JSON.parse(responseData);
          resolve(result);
        } catch (error) {
          console.log('Raw response:', responseData);
          reject(error);
        }
      });
    });

    req.on('error', (error) => {
      reject(error);
    });

    req.write(data);
    req.end();
  });
}

async function getProductId(handle) {
  const query = `query { productByHandle(handle: "${handle}") { id title } }`;
  const result = await makeGraphQLRequest(query);
  return result.data.productByHandle;
}

function generateCompactCardStyle(place) {
  return `<div class="space-y-6">
  <div class="bg-gradient-to-r from-blue-500 to-purple-600 rounded-2xl p-6 text-white">
    <h1 class="text-2xl font-bold mb-2">${place.icon} ${place.title.split('(')[0].trim()} (${place.russianTitle})</h1>
    <p class="text-blue-100 text-lg">${place.shortDescription}</p>
    <div class="flex items-center gap-4 mt-4">
      <div class="flex items-center gap-1"><span class="text-yellow-300">‚≠ê</span><span class="font-semibold">${place.rating}</span></div>
      <div class="flex items-center gap-1"><span class="text-green-300">üí∞</span><span>${'$'.repeat(place.priceLevel)}</span></div>
      <div class="flex items-center gap-1"><span class="text-blue-300">üìç</span><span>${place.district}</span></div>
    </div>
  </div>
  
  <div class="grid grid-cols-2 gap-4">
    <div class="bg-white rounded-xl p-4 shadow-sm border border-gray-100">
      <div class="flex items-center gap-2 mb-2"><span class="text-2xl">üïê</span><span class="font-semibold text-gray-900">–ß–∞—Å—ã —Ä–∞–±–æ—Ç—ã</span></div>
      <p class="text-gray-600 text-sm">${place.workingHours}</p>
    </div>
    <div class="bg-white rounded-xl p-4 shadow-sm border border-gray-100">
      <div class="flex items-center gap-2 mb-2"><span class="text-2xl">üöó</span><span class="font-semibold text-gray-900">–ü–∞—Ä–∫–æ–≤–∫–∞</span></div>
      <p class="text-gray-600 text-sm">–ë–µ—Å–ø–ª–∞—Ç–Ω–∞—è</p>
    </div>
  </div>
  
  <div class="bg-white rounded-xl p-6 shadow-sm border border-gray-100">
    <h2 class="text-xl font-bold text-gray-900 mb-4">–û —Ç–æ—Ä–≥–æ–≤–æ–º —Ü–µ–Ω—Ç—Ä–µ</h2>
    <p class="text-gray-600 leading-relaxed mb-4">${place.fullDescription}</p>
  </div>
  
  <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
    ${place.sections.map(section => `
    <div class="bg-gradient-to-br ${section.gradient} rounded-xl p-5 border ${section.border}">
      <div class="flex items-center gap-3 mb-3"><span class="text-3xl">${section.icon}</span><h3 class="text-lg font-bold text-gray-900">${section.title}</h3></div>
      <p class="text-gray-600 text-sm mb-3">${section.description}</p>
      ${section.items ? `<div class="space-y-2">${section.items.map(item => `<div class="flex items-center gap-2"><span class="text-${item.color}-500">${item.icon}</span><span class="text-sm text-gray-700">${item.text}</span></div>`).join('')}</div>` : ''}
    </div>
    `).join('')}
  </div>
  
  ${place.mustSee ? `
  <div class="bg-gradient-to-r from-yellow-400 to-orange-500 rounded-xl p-5 text-white">
    <div class="flex items-center gap-3 mb-3"><span class="text-2xl">‚≠ê</span><h3 class="text-lg font-bold">–û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –∫ –ø–æ—Å–µ—â–µ–Ω–∏—é!</h3></div>
    <div class="space-y-2">
      <div class="flex items-center gap-2"><span class="text-2xl">${place.mustSee.icon}</span><div><p class="font-semibold">${place.mustSee.title}</p><p class="text-yellow-100 text-sm">${place.mustSee.description}</p></div></div>
    </div>
  </div>
  ` : ''}
  
  <div class="bg-white rounded-xl p-6 shadow-sm border border-gray-100">
    <h3 class="text-lg font-bold text-gray-900 mb-4">–£–¥–æ–±—Å—Ç–≤–∞</h3>
    <div class="grid grid-cols-2 md:grid-cols-3 gap-3">
      ${place.amenities.map(amenity => `<div class="flex items-center gap-2 p-2 rounded-lg bg-gray-50"><span class="text-${amenity.color}-500">${amenity.icon}</span><span class="text-sm text-gray-700">${amenity.text}</span></div>`).join('')}
    </div>
  </div>
  
  <div class="space-y-4">
    <h3 class="text-lg font-bold text-gray-900">–ü–ª–∞–Ω–∏—Ä—É–µ—Ç–µ –ø–æ–µ–∑–¥–∫—É?</h3>
    <div class="grid grid-cols-1 md:grid-cols-3 gap-3">
      <a href="/phuket" class="group bg-gradient-to-r from-blue-500 to-blue-600 text-white rounded-xl p-4 text-center hover:from-blue-600 hover:to-blue-700 transition-all duration-200 shadow-lg hover:shadow-xl transform hover:scale-105">
        <div class="flex items-center justify-center gap-2 mb-2"><span class="text-xl">üèùÔ∏è</span><span class="font-semibold">–¢—É—Ä—ã</span></div>
        <p class="text-blue-100 text-sm">–° –≥–∏–¥–æ–º</p>
      </a>
      <a href="/services/car-rental" class="group bg-gradient-to-r from-green-500 to-green-600 text-white rounded-xl p-4 text-center hover:from-green-600 hover:to-green-700 transition-all duration-200 shadow-lg hover:shadow-xl transform hover:scale-105">
        <div class="flex items-center justify-center gap-2 mb-2"><span class="text-xl">üöó</span><span class="font-semibold">–ê—Ä–µ–Ω–¥–∞ –∞–≤—Ç–æ</span></div>
        <p class="text-green-100 text-sm">–°–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ</p>
      </a>
      <a href="/services/currency-exchange" class="group bg-gradient-to-r from-purple-500 to-purple-600 text-white rounded-xl p-4 text-center hover:from-purple-600 hover:to-purple-700 transition-all duration-200 shadow-lg hover:shadow-xl transform hover:scale-105">
        <div class="flex items-center justify-center gap-2 mb-2"><span class="text-xl">üí±</span><span class="font-semibold">–û–±–º–µ–Ω –≤–∞–ª—é—Ç—ã</span></div>
        <p class="text-purple-100 text-sm">–í—ã–≥–æ–¥–Ω—ã–π –∫—É—Ä—Å</p>
      </a>
    </div>
  </div>
  
  <div class="bg-gradient-to-r from-gray-50 to-gray-100 rounded-xl p-6 text-center">
    <p class="text-gray-600 italic">${place.conclusion}</p>
  </div>
</div>`;
}

const shoppingCenters = [
  {
    handle: 'jungceylon-shopping-center',
    title: 'Jungceylon Shopping Center',
    russianTitle: '–î–∂–∞–Ω–≥—Ü–µ–ª–æ–Ω',
    icon: 'üõçÔ∏è',
    shortDescription: '–ö—Ä—É–ø–Ω–µ–π—à–∏–π —Ç–æ—Ä–≥–æ–≤—ã–π —Ü–µ–Ω—Ç—Ä –≤ —Å–∞–º–æ–º —Ü–µ–Ω—Ç—Ä–µ –ü–∞—Ç–æ–Ω–≥–∞',
    fullDescription: 'Jungceylon ‚Äî —ç—Ç–æ –Ω–µ –ø—Ä–æ—Å—Ç–æ —Ç–æ—Ä–≥–æ–≤—ã–π —Ü–µ–Ω—Ç—Ä, —ç—Ç–æ —Ü–µ–Ω—Ç—Ä –∂–∏–∑–Ω–∏ –ü–∞—Ç–æ–Ω–≥–∞. –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –ø—Ä–æ–≤–µ—Å—Ç–∏ —Ü–µ–ª—ã–π –¥–µ–Ω—å: –ø–æ—à–æ–ø–∏—Ç—å—Å—è, –ø–æ–µ—Å—Ç—å, —Ä–∞–∑–≤–ª–µ—á—å—Å—è –∏ –æ—Ç–¥–æ—Ö–Ω—É—Ç—å –≤ –ø—Ä–æ—Ö–ª–∞–¥–µ –∫–æ–Ω–¥–∏—Ü–∏–æ–Ω–µ—Ä–æ–≤.',
    rating: 4.6,
    priceLevel: 2,
    district: '–ü–∞—Ç–æ–Ω–≥',
    workingHours: '11:00-23:00 –µ–∂–µ–¥–Ω–µ–≤–Ω–æ',
    amenities: [
      { icon: 'üì∂', text: 'Wi-Fi', color: 'green' },
      { icon: 'üÖøÔ∏è', text: '–ü–∞—Ä–∫–æ–≤–∫–∞', color: 'blue' },
      { icon: 'üçΩÔ∏è', text: '–§—É–¥-–∫–æ—Ä—Ç', color: 'orange' },
      { icon: 'üé¨', text: '–ö–∏–Ω–æ', color: 'purple' },
      { icon: 'üé≥', text: '–ë–æ—É–ª–∏–Ω–≥', color: 'cyan' },
      { icon: 'üë∂', text: '–î–µ—Ç—Å–∫–∏–µ –∑–æ–Ω—ã', color: 'pink' }
    ],
    sections: [
      {
        icon: 'üõí',
        title: '–ú–∞–≥–∞–∑–∏–Ω—ã –∏ –±—É—Ç–∏–∫–∏',
        description: '–®–∏—Ä–æ–∫–∏–π –≤—ã–±–æ—Ä –º–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω—ã—Ö –∏ –º–µ—Å—Ç–Ω—ã—Ö –±—Ä–µ–Ω–¥–æ–≤',
        gradient: 'from-orange-50 to-orange-100',
        border: 'border-orange-200',
        items: [
          { icon: 'üëî', text: 'H&M, Zara, Uniqlo, Adidas, Nike', color: 'blue' },
          { icon: 'üíÑ', text: 'Sephora, Boots, Watsons', color: 'pink' },
          { icon: 'üì±', text: '–ú–∞–≥–∞–∑–∏–Ω—ã —Ç–µ—Ö–Ω–∏–∫–∏, –∞–∫—Å–µ—Å—Å—É–∞—Ä—ã', color: 'purple' }
        ]
      },
      {
        icon: 'üçΩÔ∏è',
        title: '–ï–¥–∞ –∏ –Ω–∞–ø–∏—Ç–∫–∏',
        description: '–†–∞–∑–Ω–æ–æ–±—Ä–∞–∑–∏–µ –∫—É—Ö–æ–Ω—å –º–∏—Ä–∞',
        gradient: 'from-green-50 to-green-100',
        border: 'border-green-200',
        items: [
          { icon: 'üçú', text: '–¢–∞–π—Å–∫–∞—è, –∫–∏—Ç–∞–π—Å–∫–∞—è, —è–ø–æ–Ω—Å–∫–∞—è, –µ–≤—Ä–æ–ø–µ–π—Å–∫–∞—è –∫—É—Ö–Ω—è', color: 'orange' },
          { icon: '‚òï', text: 'Starbucks, McDonald\'s, –º–µ—Å—Ç–Ω—ã–µ –∫–∞—Ñ–µ', color: 'brown' }
        ]
      }
    ],
    mustSee: {
      icon: 'üé¨',
      title: 'Major Cineplex',
      description: '–°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ –∑–∞–ª—ã —Å 3D —Ñ–∏–ª—å–º–∞–º–∏ –∏ –∫–æ–º—Ñ–æ—Ä—Ç–Ω—ã–º–∏ –∫—Ä–µ—Å–ª–∞–º–∏'
    },
    conclusion: 'Jungceylon ‚Äî —ç—Ç–æ –Ω–µ –ø—Ä–æ—Å—Ç–æ —Ç–æ—Ä–≥–æ–≤—ã–π —Ü–µ–Ω—Ç—Ä, —ç—Ç–æ —Ü–µ–Ω—Ç—Ä –∂–∏–∑–Ω–∏ –ü–∞—Ç–æ–Ω–≥–∞. –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –ø—Ä–æ–≤–µ—Å—Ç–∏ —Ü–µ–ª—ã–π –¥–µ–Ω—å: –ø–æ—à–æ–ø–∏—Ç—å—Å—è, –ø–æ–µ—Å—Ç—å, —Ä–∞–∑–≤–ª–µ—á—å—Å—è –∏ –æ—Ç–¥–æ—Ö–Ω—É—Ç—å –≤ –ø—Ä–æ—Ö–ª–∞–¥–µ –∫–æ–Ω–¥–∏—Ü–∏–æ–Ω–µ—Ä–æ–≤.'
  }
];

async function updateShoppingCenter(place) {
  try {
    console.log(`\nüîÑ –û–±–Ω–æ–≤–ª—è–µ–º ${place.title}...`);
    
    const product = await getProductId(place.handle);
    if (!product) {
      console.log(`‚ùå –ü—Ä–æ–¥—É–∫—Ç ${place.handle} –Ω–µ –Ω–∞–π–¥–µ–Ω`);
      return;
    }

    const descriptionHtml = generateCompactCardStyle(place);
    
    const mutation = `mutation {
      productUpdate(input: {
        id: "${product.id}",
        descriptionHtml: ${JSON.stringify(descriptionHtml)}
      }) {
        product { id title }
        userErrors { field message }
      }
    }`;

    const result = await makeGraphQLRequest(mutation);
    
    if (result.data.productUpdate.userErrors.length > 0) {
      console.log(`‚ùå –û—à–∏–±–∫–∏:`, result.data.productUpdate.userErrors);
    } else {
      console.log(`‚úÖ ${place.title} —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω!`);
    }

    await new Promise(resolve => setTimeout(resolve, 1500));
    
  } catch (error) {
    console.log(`‚ùå –û—à–∏–±–∫–∞:`, error.message);
  }
}

async function main() {
  console.log('üöÄ –û–±–Ω–æ–≤–ª—è–µ–º Jungceylon —Å –∫–∞—Ä—Ç–æ—á–Ω—ã–º —Å—Ç–∏–ª–µ–º...');
  await updateShoppingCenter(shoppingCenters[0]);
  console.log('\nüéâ –ì–æ—Ç–æ–≤–æ! –ü—Ä–æ–≤–µ—Ä—å—Ç–µ: http://localhost:5173/place/jungceylon-shopping-center');
}

main();
