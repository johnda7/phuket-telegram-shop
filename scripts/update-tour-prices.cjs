#!/usr/bin/env node

/**
 * üöÄ –û–ë–ù–û–í–õ–ï–ù–ò–ï –¶–ï–ù –¢–£–†–û–í –ò–ó PUKEO.COM
 * ============================================================
 * 
 * –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–µ—Ç –∞–∫—Ç—É–∞–ª—å–Ω—ã–µ —Ü–µ–Ω—ã —Ç—É—Ä–æ–≤ –≤ –±–∞—Ç–∞—Ö –∏–∑ pukeo.com
 * 
 * –ò—Å—Ç–æ—á–Ω–∏–∫: pukeo.com (–¥–æ–Ω–æ—Ä-—Å–∞–π—Ç)
 * –¶–µ–ª–µ–≤–æ–π: Shopify Admin API
 * 
 * –¶–µ–Ω—ã –≤ –±–∞—Ç–∞—Ö (THB) –Ω–∞ 2025 –≥–æ–¥
 */

// –ò—Å–ø–æ–ª—å–∑—É–µ–º –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π fetch (Node.js 18+)

// ============================================================
// –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–Ø SHOPIFY
// ============================================================

const SHOPIFY_STORE = 'phuket-telegram-shop-117ck.myshopify.com';
const ADMIN_API_TOKEN = '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';
const API_VERSION = '2025-07';

// ============================================================
// –ê–ö–¢–£–ê–õ–¨–ù–´–ï –¶–ï–ù–´ –¢–£–†–û–í –ò–ó PUKEO.COM (2025)
// ============================================================

const TOUR_PRICES = {
  // –ü–æ–ø—É–ª—è—Ä–Ω—ã–µ —Ç—É—Ä—ã
  'phi-phi-2-days-1-night': {
    title: '–ü—Ö–∏-–ü—Ö–∏ 2 –¥–Ω—è/1 –Ω–æ—á—å',
    variants: [
      { title: '–í–∑—Ä–æ—Å–ª—ã–π', price: '4500.00' }, // 4500 –±–∞—Ç
      { title: '–î–µ—Ç—Å–∫–∏–π (4-11 –ª–µ—Ç)', price: '3950.00' } // 3950 –±–∞—Ç (–∞–∫—Ç—É–∞–ª—å–Ω–æ —Å phukeo.com)
    ]
  },
  
  'james-bond-island-tour': {
    title: 'James Bond Island - –æ—Å—Ç—Ä–æ–≤ –∏–∑ —Ñ–∏–ª—å–º–∞',
    variants: [
      { title: '–í–∑—Ä–æ—Å–ª—ã–π', price: '1800.00' }, // 1800 –±–∞—Ç
      { title: '–î–µ—Ç—Å–∫–∏–π (4-11 –ª–µ—Ç)', price: '1400.00' } // 1400 –±–∞—Ç
    ]
  },
  
  '4-pearls-andaman-sea': {
    title: '4 Pearls Andaman Sea - 4 –æ—Å—Ç—Ä–æ–≤–∞',
    variants: [
      { title: '–í–∑—Ä–æ—Å–ª—ã–π', price: '2200.00' }, // 2200 –±–∞—Ç
      { title: '–î–µ—Ç—Å–∫–∏–π (4-11 –ª–µ—Ç)', price: '1800.00' } // 1800 –±–∞—Ç
    ]
  },
  
  '11-islands-mega-tour': {
    title: '11 Islands Mega Tour - –º–∞–∫—Å–∏–º—É–º –æ—Å—Ç—Ä–æ–≤–æ–≤',
    variants: [
      { title: '–í–∑—Ä–æ—Å–ª—ã–π', price: '3500.00' }, // 3500 –±–∞—Ç
      { title: '–î–µ—Ç—Å–∫–∏–π (4-11 –ª–µ—Ç)', price: '2800.00' } // 2800 –±–∞—Ç
    ]
  },
  
  'similan-islands-1-day': {
    title: '–°–∏–º–∏–ª–∞–Ω—Å–∫–∏–µ –æ—Å—Ç—Ä–æ–≤–∞ 1 –¥–µ–Ω—å',
    variants: [
      { title: '–í–∑—Ä–æ—Å–ª—ã–π', price: '2800.00' }, // 2800 –±–∞—Ç
      { title: '–î–µ—Ç—Å–∫–∏–π (4-11 –ª–µ—Ç)', price: '2200.00' } // 2200 –±–∞—Ç
    ]
  },
  
  'rafting-spa-atv': {
    title: 'Rafting + SPA + ATV - –ø—Ä–∏–∫–ª—é—á–µ–Ω–∏—è',
    variants: [
      { title: '–í–∑—Ä–æ—Å–ª—ã–π', price: '3200.00' }, // 3200 –±–∞—Ç
      { title: '–î–µ—Ç—Å–∫–∏–π (4-11 –ª–µ—Ç)', price: '2500.00' } // 2500 –±–∞—Ç
    ]
  },
  
  'krabi-4-islands': {
    title: '–ö—Ä–∞–±–∏ 4 –æ—Å—Ç—Ä–æ–≤–∞ - –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–∞ –ü—Ö–∏-–ü—Ö–∏',
    variants: [
      { title: '–í–∑—Ä–æ—Å–ª—ã–π', price: '2000.00' }, // 2000 –±–∞—Ç
      { title: '–î–µ—Ç—Å–∫–∏–π (4-11 –ª–µ—Ç)', price: '1600.00' } // 1600 –±–∞—Ç
    ]
  },
  
  'coral-island': {
    title: 'Coral Island - –±–ª–∏–∑–∫–æ –∫ –ü—Ö—É–∫–µ—Ç—É',
    variants: [
      { title: '–í–∑—Ä–æ—Å–ª—ã–π', price: '1200.00' }, // 1200 –±–∞—Ç
      { title: '–î–µ—Ç—Å–∫–∏–π (4-11 –ª–µ—Ç)', price: '900.00' } // 900 –±–∞—Ç
    ]
  },
  
  'temples-tour': {
    title: 'Temples Tour - –∫—É–ª—å—Ç—É—Ä–Ω—ã–µ –¥–æ—Å—Ç–æ–ø—Ä–∏–º–µ—á–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏',
    variants: [
      { title: '–í–∑—Ä–æ—Å–ª—ã–π', price: '800.00' }, // 800 –±–∞—Ç
      { title: '–î–µ—Ç—Å–∫–∏–π (4-11 –ª–µ—Ç)', price: '600.00' } // 600 –±–∞—Ç
    ]
  },
  
  'sunset-cruise': {
    title: 'Sunset Cruise - —Ä–æ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∏–π —Ç—É—Ä',
    variants: [
      { title: '–í–∑—Ä–æ—Å–ª—ã–π', price: '1500.00' }, // 1500 –±–∞—Ç
      { title: '–î–µ—Ç—Å–∫–∏–π (4-11 –ª–µ—Ç)', price: '1200.00' } // 1200 –±–∞—Ç
    ]
  }
};

// ============================================================
// –£–¢–ò–õ–ò–¢–´
// ============================================================

async function shopifyRequest(query, variables = {}) {
  const response = await fetch(`https://${SHOPIFY_STORE}/admin/api/${API_VERSION}/graphql.json`, {
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
      'X-Shopify-Access-Token': ADMIN_API_TOKEN
    },
    body: JSON.stringify({ query, variables })
  });

  const data = await response.json();
  
  if (data.errors) {
    throw new Error(`GraphQL Errors: ${JSON.stringify(data.errors, null, 2)}`);
  }
  
  return data;
}

async function sleep(ms) {
  return new Promise(resolve => setTimeout(resolve, ms));
}

// ============================================================
// –û–°–ù–û–í–ù–´–ï –§–£–ù–ö–¶–ò–ò
// ============================================================

async function getTourByHandle(handle) {
  const query = `
    query getProductByHandle($handle: String!) {
      productByHandle(handle: $handle) {
        id
        title
        handle
        variants(first: 10) {
          edges {
            node {
              id
              title
              price
            }
          }
        }
      }
    }
  `;

  const result = await shopifyRequest(query, { handle });
  return result.data.productByHandle;
}

async function updateTourPrices(productId, variants) {
  console.log(`   üîÑ –û–±–Ω–æ–≤–ª—è—é —Ü–µ–Ω—ã –¥–ª—è ${variants.length} –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤...`);
  
  // –ò—Å–ø–æ–ª—å–∑—É–µ–º bulk update –¥–ª—è –≤—Å–µ—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ —Å—Ä–∞–∑—É
  const mutation = `
    mutation productVariantsBulkUpdate($productId: ID!, $variants: [ProductVariantsBulkInput!]!) {
      productVariantsBulkUpdate(productId: $productId, variants: $variants) {
        product {
          id
          title
        }
        productVariants {
          id
          title
          price
        }
        userErrors {
          field
          message
        }
      }
    }
  `;

  const variables = {
    productId: productId,
    variants: variants.map(variant => ({
      id: variant.id,
      price: variant.price
    }))
  };

  try {
    const result = await shopifyRequest(mutation, variables);
    
    if (result.data.productVariantsBulkUpdate.userErrors.length > 0) {
      console.error(`   ‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤:`, result.data.productVariantsBulkUpdate.userErrors);
    } else {
      console.log(`   ‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–æ ${variants.length} –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤:`);
      result.data.productVariantsBulkUpdate.productVariants.forEach(variant => {
        console.log(`      ${variant.title}: ${variant.price} –±–∞—Ç`);
      });
    }
  } catch (error) {
    console.error(`   ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤:`, error.message);
  }
}

async function updateTour(tourHandle, tourData) {
  console.log(`\nüöÄ –û–±–Ω–æ–≤–ª—è—é —Ç—É—Ä: ${tourData.title}`);
  console.log(`   Handle: ${tourHandle}`);

  try {
    // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–π —Ç—É—Ä
    const product = await getTourByHandle(tourHandle);
    
    if (!product) {
      console.log(`   ‚ö†Ô∏è  –¢—É—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω: ${tourHandle}`);
      return false;
    }

    console.log(`   üì¶ –ù–∞–π–¥–µ–Ω —Ç—É—Ä: ${product.title}`);
    console.log(`   üîó ID: ${product.id}`);

    // –û–±–Ω–æ–≤–ª—è–µ–º —Ü–µ–Ω—ã –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤
    const currentVariants = product.variants.edges.map(edge => edge.node);
    
    if (currentVariants.length === 0) {
      console.log(`   ‚ö†Ô∏è  –£ —Ç—É—Ä–∞ –Ω–µ—Ç –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è`);
      return false;
    }

    // –°–æ–ø–æ—Å—Ç–∞–≤–ª—è–µ–º –≤–∞—Ä–∏–∞–Ω—Ç—ã –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é
    const updatedVariants = currentVariants.map(variant => {
      const newVariant = tourData.variants.find(v => 
        v.title.toLowerCase().includes(variant.title.toLowerCase()) ||
        variant.title.toLowerCase().includes(v.title.toLowerCase())
      );
      
      if (newVariant) {
        return {
          ...variant,
          price: newVariant.price
        };
      }
      
      return variant;
    });

    await updateTourPrices(product.id, updatedVariants);
    
    console.log(`   ‚úÖ –¢—É—Ä –æ–±–Ω–æ–≤–ª–µ–Ω: ${tourData.title}`);
    return true;

  } catch (error) {
    console.error(`   ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Ç—É—Ä–∞ ${tourHandle}:`, error.message);
    return false;
  }
}

async function updateAllTours() {
  console.log('üöÄ –û–ë–ù–û–í–õ–ï–ù–ò–ï –¶–ï–ù –¢–£–†–û–í –ò–ó PUKEO.COM');
  console.log('============================================================');
  console.log(`üìÖ –î–∞—Ç–∞: ${new Date().toLocaleString('ru-RU')}`);
  console.log(`üí∞ –í–∞–ª—é—Ç–∞: –¢–∞–π—Å–∫–∏–µ –±–∞—Ç—ã (THB)`);
  console.log(`üè™ –ú–∞–≥–∞–∑–∏–Ω: ${SHOPIFY_STORE}`);
  console.log('============================================================\n');

  let successCount = 0;
  let errorCount = 0;

  for (const [handle, tourData] of Object.entries(TOUR_PRICES)) {
    const success = await updateTour(handle, tourData);
    
    if (success) {
      successCount++;
    } else {
      errorCount++;
    }

    // –ü–∞—É–∑–∞ –º–µ–∂–¥—É —Ç—É—Ä–∞–º–∏
    await sleep(1500);
  }

  console.log('\n============================================================');
  console.log('üìä –ò–¢–û–ì–û–í–´–ô –û–¢–ß–ï–¢');
  console.log('============================================================');
  console.log(`‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–æ: ${successCount}`);
  console.log(`‚ùå –û—à–∏–±–æ–∫: ${errorCount}`);
  console.log(`üìà –£—Å–ø–µ—à–Ω–æ—Å—Ç—å: ${Math.round((successCount / (successCount + errorCount)) * 100)}%`);
  console.log('\nüöÄ –ì–æ—Ç–æ–≤–æ! –¶–µ–Ω—ã —Ç—É—Ä–æ–≤ –æ–±–Ω–æ–≤–ª–µ–Ω—ã –≤ Shopify.');
  console.log('üí° –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤ –∞–¥–º–∏–Ω–∫–µ Shopify.');
}

// ============================================================
// –ó–ê–ü–£–°–ö
// ============================================================

if (require.main === module) {
  updateAllTours().catch(console.error);
}

module.exports = { updateAllTours, TOUR_PRICES };
