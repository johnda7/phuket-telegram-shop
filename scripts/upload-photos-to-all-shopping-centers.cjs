// –ó–∞–≥—Ä—É–∂–∞–µ–º 3 —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –≤–æ –≤—Å–µ —Ç–æ—Ä–≥–æ–≤—ã–µ —Ü–µ–Ω—Ç—Ä—ã
// –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ç–µ –∂–µ —Ñ–æ—Ç–æ, —á—Ç–æ –∏ –¥–ª—è Robinson Lifestyle

const https = require('https');
const fs = require('fs');
const path = require('path');

const SHOPIFY_STORE = 'phuket-telegram-shop-117ck.myshopify.com';
const SHOPIFY_ACCESS_TOKEN = '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';

// –ü–∞–ø–∫–∞ —Å —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è–º–∏
const photosDir = path.join(__dirname, '..', 'photos', 'robinson');

// –¢–æ—Ä–≥–æ–≤—ã–µ —Ü–µ–Ω—Ç—Ä—ã –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–æ—Ç–æ (–∏—Å–∫–ª—é—á–∞–µ–º —Ç–µ, —É –∫–æ—Ç–æ—Ä—ã—Ö —É–∂–µ –µ—Å—Ç—å —Ñ–æ—Ç–æ)
const shoppingCenters = [
  {
    name: 'Jungceylon Shopping Center',
    handle: 'jungceylon-shopping-center',
    productId: '7974403080246'
  },
  {
    name: 'Premium Outlet Phuket',
    handle: 'premium-outlet-phuket',
    productId: '7974403145782'
  },
  {
    name: 'Big C Supercenter Phuket',
    handle: 'big-c-supercenter-phuket',
    productId: '7974403244086'
  },
  {
    name: 'Tesco Lotus Phuket',
    handle: 'tesco-lotus-phuket',
    productId: '7974403604534'
  }
];

// –§–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ (—Ç–µ –∂–µ, —á—Ç–æ –∏ –¥–ª—è Robinson)
const photoFiles = [
  { 
    filename: 'robinson-exterior.jpg', 
    alt: '–°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞—Å–∞–¥ —Ç–æ—Ä–≥–æ–≤–æ–≥–æ —Ü–µ–Ω—Ç—Ä–∞',
    newName: 'shopping-center-exterior.jpg'
  },
  { 
    filename: 'robinson-food-court.jpg', 
    alt: '–ü—Ä–æ—Å—Ç–æ—Ä–Ω—ã–π —Ñ—É–¥-–∫–æ—Ä—Ç —Å —Ä–µ—Å—Ç–æ—Ä–∞–Ω–∞–º–∏',
    newName: 'shopping-center-food-court.jpg'
  },
  { 
    filename: 'robinson-stores.jpg', 
    alt: '–†–æ–∑–Ω–∏—á–Ω—ã–µ –º–∞–≥–∞–∑–∏–Ω—ã –∏ –±—É—Ç–∏–∫–∏',
    newName: 'shopping-center-stores.jpg'
  }
];

// –§—É–Ω–∫—Ü–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ Shopify —á–µ—Ä–µ–∑ REST API
function uploadImageToShopify(productId, filePath, filename, alt) {
  return new Promise((resolve, reject) => {
    // –ß–∏—Ç–∞–µ–º —Ñ–∞–π–ª –∏ –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –≤ base64
    const fileBuffer = fs.readFileSync(filePath);
    const base64Image = fileBuffer.toString('base64');
    
    // –°–æ–∑–¥–∞–µ–º JSON payload –¥–ª—è REST API
    const imageData = JSON.stringify({
      image: {
        attachment: base64Image,  // ‚úÖ base64 –†–ê–ë–û–¢–ê–ï–¢ —Å Trial account!
        filename: filename,
        alt: alt
      }
    });

    // –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∑–∞–ø—Ä–æ—Å–∞
    const options = {
      hostname: SHOPIFY_STORE,
      path: `/admin/api/2025-07/products/${productId}/images.json`,
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
        'X-Shopify-Access-Token': SHOPIFY_ACCESS_TOKEN,
        'Content-Length': Buffer.byteLength(imageData)
      }
    };

    // –í—ã–ø–æ–ª–Ω—è–µ–º –∑–∞–ø—Ä–æ—Å
    const req = https.request(options, (res) => {
      let data = '';
      res.on('data', (chunk) => { data += chunk; });
      res.on('end', () => {
        if (res.statusCode === 200 || res.statusCode === 201) {
          resolve(JSON.parse(data).image);
        } else {
          reject(new Error(`HTTP ${res.statusCode}: ${data}`));
        }
      });
    });

    req.on('error', reject);
    req.write(imageData);
    req.end();
  });
}

async function uploadPhotosToAllCenters() {
  console.log('üì∏ –ó–ê–ì–†–£–ó–ö–ê –§–û–¢–û–ì–†–ê–§–ò–ô –í–û –í–°–ï –¢–û–†–ì–û–í–´–ï –¶–ï–ù–¢–†–´\n');
  console.log(`üìã –ó–∞–≥—Ä—É–∂–∞–µ–º –≤ ${shoppingCenters.length} —Ç–æ—Ä–≥–æ–≤—ã—Ö —Ü–µ–Ω—Ç—Ä–æ–≤`);
  console.log(`üì∑ –ü–æ ${photoFiles.length} —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π –≤ –∫–∞–∂–¥—ã–π\n`);

  let totalSuccess = 0;
  let totalErrors = 0;

  for (let i = 0; i < shoppingCenters.length; i++) {
    const center = shoppingCenters[i];
    console.log(`üè¢ [${i + 1}/${shoppingCenters.length}] ${center.name}`);
    console.log(`   ID: ${center.productId}`);
    console.log(`   Handle: ${center.handle}\n`);

    let centerSuccess = 0;
    let centerErrors = 0;

    for (let j = 0; j < photoFiles.length; j++) {
      const photo = photoFiles[j];
      const localPath = path.join(photosDir, photo.filename);
      
      console.log(`   üì∑ [${j + 1}/${photoFiles.length}] ${photo.newName}`);
      
      try {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞
        if (!fs.existsSync(localPath)) {
          throw new Error(`–§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: ${localPath}`);
        }
        
        const fileSizeKB = (fs.statSync(localPath).size / 1024).toFixed(2);
        console.log(`      üìÅ –†–∞–∑–º–µ—Ä: ${fileSizeKB} KB`);
        console.log(`      ‚¨ÜÔ∏è  –ó–∞–≥—Ä—É–∂–∞–µ–º...`);
        
        const result = await uploadImageToShopify(
          center.productId, 
          localPath, 
          photo.newName, 
          `${center.name} - ${photo.alt}`
        );
        console.log(`      ‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–æ! ID: ${result.id}`);
        
        centerSuccess++;
        totalSuccess++;
        
        // –ó–∞–¥–µ—Ä–∂–∫–∞ –º–µ–∂–¥—É –∑–∞–≥—Ä—É–∑–∫–∞–º–∏
        if (j < photoFiles.length - 1) {
          await new Promise(resolve => setTimeout(resolve, 1500));
        }
      } catch (error) {
        console.error(`      ‚ùå –û—à–∏–±–∫–∞:`, error.message);
        centerErrors++;
        totalErrors++;
      }
      
      console.log(''); // –ü—É—Å—Ç–∞—è —Å—Ç—Ä–æ–∫–∞ –¥–ª—è —á–∏—Ç–∞–µ–º–æ—Å—Ç–∏
    }

    console.log(`   üìä ${center.name}: ${centerSuccess}/${photoFiles.length} —É—Å–ø–µ—à–Ω–æ\n`);
    
    // –ó–∞–¥–µ—Ä–∂–∫–∞ –º–µ–∂–¥—É —Ç–æ—Ä–≥–æ–≤—ã–º–∏ —Ü–µ–Ω—Ç—Ä–∞–º–∏
    if (i < shoppingCenters.length - 1) {
      console.log('   ‚è≥ –ü–∞—É–∑–∞ 3 —Å–µ–∫—É–Ω–¥—ã...\n');
      await new Promise(resolve => setTimeout(resolve, 3000));
    }
  }

  console.log('='.repeat(60));
  console.log('üìä –ò–¢–û–ì–ò –ó–ê–ì–†–£–ó–ö–ò:');
  console.log('='.repeat(60));
  console.log(`‚úÖ –í—Å–µ–≥–æ —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω–æ: ${totalSuccess}/${shoppingCenters.length * photoFiles.length}`);
  console.log(`‚ùå –í—Å–µ–≥–æ –æ—à–∏–±–æ–∫: ${totalErrors}/${shoppingCenters.length * photoFiles.length}`);
  
  if (totalSuccess > 0) {
    console.log('\nüéâ –§–û–¢–û–ì–†–ê–§–ò–ò –ó–ê–ì–†–£–ñ–ï–ù–´ –í–û –í–°–ï –¢–û–†–ì–û–í–´–ï –¶–ï–ù–¢–†–´!');
    console.log('üîó –ü—Ä–æ–≤–µ—Ä—å –≤ Shopify Admin:');
    shoppingCenters.forEach(center => {
      console.log(`   ${center.name}: https://admin.shopify.com/store/phuket-telegram-shop-117ck/products/${center.productId}`);
    });
  }
}

uploadPhotosToAllCenters().catch(console.error);
