#!/usr/bin/env node

/**
 * üöÄ –°–ö–†–ò–ü–¢ –î–õ–Ø –°–ö–ê–ß–ò–í–ê–ù–ò–Ø –ò–ó–û–ë–†–ê–ñ–ï–ù–ò–ô –ü–•–ò-–ü–•–ò –ò–ó GITHUB –†–ï–ü–û–ó–ò–¢–û–†–ò–Ø
 * 
 * –ò—Å—Ç–æ—á–Ω–∏–∫: https://github.com/johnda7/island-travel-echo-clone
 * –ü–∞–ø–∫–∞: src/assets/phi-phi-2days/
 * 
 * –í—Å–µ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π: 17
 */

import https from 'https';
import fs from 'fs';
import path from 'path';
import { fileURLToPath } from 'url';

const __filename = fileURLToPath(import.meta.url);
const __dirname = path.dirname(__filename);

// GitHub raw content URL
const GITHUB_RAW = 'https://raw.githubusercontent.com/johnda7/island-travel-echo-clone/main/src/assets/phi-phi-2days/';

// –°–ø–∏—Å–æ–∫ –í–°–ï–• 17 –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –∏–∑ phi-phi-2days
const images = [
  'maya-bay-1.jpg',
  'maya-bay-2.jpg',
  'maya-bay-3.jpg',
  'maya-bay-4.jpg',
  'mayabay-1.jpg',
  'mayabay-2.jpg',
  'mayabay-3.jpg',
  'mayabay-5.jpg',
  'mayabay-6.jpg',
  'pileh-lagoon.jpg',
  'viking-cave.jpg',
  'bamboo-island.webp',
  'fire-show-1.jpg',
  'fire-show-2.jpg',
  'fire-show-3.jpg',
  'rang-yai-1.jpg',
  'rang-yai-2.jpg'
];

// –ü–∞–ø–∫–∞ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è
const OUTPUT_DIR = path.join(__dirname, '../src/assets/phi-phi-tour');

// –°–æ–∑–¥–∞—ë–º –ø–∞–ø–∫—É –µ—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
if (!fs.existsSync(OUTPUT_DIR)) {
  fs.mkdirSync(OUTPUT_DIR, { recursive: true });
  console.log(`‚úÖ –°–æ–∑–¥–∞–Ω–∞ –ø–∞–ø–∫–∞: ${OUTPUT_DIR}`);
}

/**
 * –°–∫–∞—á–∏–≤–∞–µ—Ç —Ñ–∞–π–ª —Å GitHub
 */
function downloadImage(filename) {
  return new Promise((resolve, reject) => {
    const url = GITHUB_RAW + filename;
    const outputPath = path.join(OUTPUT_DIR, filename);

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Ñ–∞–π–ª
    if (fs.existsSync(outputPath)) {
      console.log(`‚è≠Ô∏è  –ü—Ä–æ–ø—É—â–µ–Ω–æ (—É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç): ${filename}`);
      resolve();
      return;
    }

    console.log(`üì• –°–∫–∞—á–∏–≤–∞—é: ${filename}...`);

    https.get(url, (response) => {
      if (response.statusCode === 200) {
        const fileStream = fs.createWriteStream(outputPath);
        response.pipe(fileStream);

        fileStream.on('finish', () => {
          fileStream.close();
          const sizeKB = (fs.statSync(outputPath).size / 1024).toFixed(2);
          console.log(`‚úÖ –°–∫–∞—á–∞–Ω–æ: ${filename} (${sizeKB} KB)`);
          resolve();
        });
      } else if (response.statusCode === 302 || response.statusCode === 301) {
        // –†–µ–¥–∏—Ä–µ–∫—Ç - —Å–ª–µ–¥—É–µ–º –∑–∞ –Ω–∏–º
        https.get(response.headers.location, (redirectResponse) => {
          const fileStream = fs.createWriteStream(outputPath);
          redirectResponse.pipe(fileStream);

          fileStream.on('finish', () => {
            fileStream.close();
            const sizeKB = (fs.statSync(outputPath).size / 1024).toFixed(2);
            console.log(`‚úÖ –°–∫–∞—á–∞–Ω–æ: ${filename} (${sizeKB} KB)`);
            resolve();
          });
        }).on('error', reject);
      } else {
        reject(new Error(`HTTP ${response.statusCode} –¥–ª—è ${filename}`));
      }
    }).on('error', reject);
  });
}

/**
 * –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
 */
async function downloadAllImages() {
  console.log('üöÄ –ù–ê–ß–ò–ù–ê–Æ –°–ö–ê–ß–ò–í–ê–ù–ò–ï –ò–ó–û–ë–†–ê–ñ–ï–ù–ò–ô –ü–•–ò-–ü–•–ò –ò–ó GITHUB');
  console.log('üìÇ –ò—Å—Ç–æ—á–Ω–∏–∫:', GITHUB_RAW);
  console.log('üìÅ –ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ:', OUTPUT_DIR);
  console.log('üñºÔ∏è  –í—Å–µ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π:', images.length);
  console.log('‚îÄ'.repeat(60));

  let downloaded = 0;
  let skipped = 0;
  let errors = 0;

  for (const image of images) {
    try {
      const outputPath = path.join(OUTPUT_DIR, image);
      if (fs.existsSync(outputPath)) {
        skipped++;
      } else {
        downloaded++;
      }
      await downloadImage(image);
      // –ó–∞–¥–µ—Ä–∂–∫–∞ –º–µ–∂–¥—É –∑–∞–ø—Ä–æ—Å–∞–º–∏ (0.5 —Å–µ–∫)
      await new Promise(resolve => setTimeout(resolve, 500));
    } catch (error) {
      console.error(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–∫–∞—á–∏–≤–∞–Ω–∏–∏ ${image}:`, error.message);
      errors++;
    }
  }

  console.log('‚îÄ'.repeat(60));
  console.log('üìä –°–¢–ê–¢–ò–°–¢–ò–ö–ê:');
  console.log(`   ‚úÖ –°–∫–∞—á–∞–Ω–æ: ${downloaded}`);
  console.log(`   ‚è≠Ô∏è  –ü—Ä–æ–ø—É—â–µ–Ω–æ: ${skipped}`);
  console.log(`   ‚ùå –û—à–∏–±–æ–∫: ${errors}`);
  console.log(`   üìÅ –í—Å–µ–≥–æ —Ñ–∞–π–ª–æ–≤: ${images.length}`);
  console.log('‚îÄ'.repeat(60));

  if (downloaded > 0) {
    console.log('üéâ –ì–æ—Ç–æ–≤–æ! –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤:', OUTPUT_DIR);
    console.log('');
    console.log('üìã –°–õ–ï–î–£–Æ–©–ò–ï –®–ê–ì–ò:');
    console.log('   1. –ü—Ä–æ–≤–µ—Ä—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è: ls -lh src/assets/phi-phi-tour/');
    console.log('   2. –°–æ–∑–¥–∞–π —Ñ–∞–π–ª –∏–º–ø–æ—Ä—Ç–æ–≤ –¥–ª—è Shopify –ø—Ä–æ–¥—É–∫—Ç–∞');
    console.log('   3. –î–æ–±–∞–≤—å —Ç—É—Ä "–ü—Ö–∏-–ü—Ö–∏ 2 –¥–Ω—è/1 –Ω–æ—á—å" —á–µ—Ä–µ–∑ Shopify Admin API');
  }
}

// –ó–∞–ø—É—Å–∫
downloadAllImages().catch(console.error);
