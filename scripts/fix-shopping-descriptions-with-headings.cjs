const https = require('https');

const SHOPIFY_STORE = 'phuket-telegram-shop-117ck.myshopify.com';
const SHOPIFY_ACCESS_TOKEN = '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';
const SHOPIFY_API_VERSION = '2025-07';

function makeGraphQLRequest(query, variables = {}) {
  return new Promise((resolve, reject) => {
    const postData = JSON.stringify({ query, variables });
    
    const options = {
      hostname: SHOPIFY_STORE,
      port: 443,
      path: `/admin/api/${SHOPIFY_API_VERSION}/graphql.json`,
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
        'X-Shopify-Access-Token': SHOPIFY_ACCESS_TOKEN,
        'Content-Length': Buffer.byteLength(postData)
      }
    };

    const req = https.request(options, (res) => {
      let data = '';
      res.on('data', (chunk) => { data += chunk; });
      res.on('end', () => {
        try {
          const jsonData = JSON.parse(data);
          if (jsonData.errors) {
            reject(new Error(`GraphQL Errors: ${JSON.stringify(jsonData.errors)}`));
          } else {
            resolve(jsonData);
          }
        } catch (error) {
          reject(error);
        }
      });
    });

    req.on('error', reject);
    req.write(postData);
    req.end();
  });
}

async function getProductIdByHandle(handle) {
  const query = `
    query getProduct($handle: String!) {
      productByHandle(handle: $handle) {
        id
        title
      }
    }
  `;
  const result = await makeGraphQLRequest(query, { handle });
  return result.data?.productByHandle;
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –æ–ø–∏—Å–∞–Ω–∏—è —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ –∑–∞–≥–æ–ª–æ–≤–∫–∞–º–∏
function generateDescriptionWithHeadings(center) {
  const { title, description } = center;
  const cleanTitle = title.split('(')[0].trim();
  
  return `
<div class="space-y-6">
  <h1 class="text-4xl font-black text-gray-900 mb-6">${title}</h1>

  <p class="text-lg text-gray-700 leading-relaxed">${description}</p>

  <div class="bg-gradient-to-r from-blue-500 to-purple-600 text-white p-6 rounded-xl shadow-lg mb-6">
    <p class="text-lg font-semibold mb-2">üéØ –•–æ—Ç–∏—Ç–µ –ø–æ—Å–µ—Ç–∏—Ç—å ${cleanTitle}?</p>
    <p>–ó–∞–±—Ä–æ–Ω–∏—Ä—É–π—Ç–µ <a href="/phuket" class="underline hover:no-underline font-bold">—Ç—É—Ä —Å –≥–∏–¥–æ–º</a> –∏–ª–∏ <a href="/services/car-rental" class="underline hover:no-underline font-bold">–∞—Ä–µ–Ω–¥—É–π—Ç–µ –∞–≤—Ç–æ</a> –¥–ª—è —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ–π –ø–æ–µ–∑–¥–∫–∏!</p>
  </div>

  <div class="grid md:grid-cols-2 gap-8">
    <div class="bg-white p-6 rounded-xl shadow-lg border border-gray-200">
      <h2 class="text-2xl font-bold text-gray-900 mb-4">üõçÔ∏è –ú–∞–≥–∞–∑–∏–Ω—ã –∏ –±—Ä–µ–Ω–¥—ã</h2>
      <p class="text-gray-600">–ó–¥–µ—Å—å –≤—ã –Ω–∞–π–¥–µ—Ç–µ —à–∏—Ä–æ–∫–∏–π –≤—ã–±–æ—Ä –º–∞–≥–∞–∑–∏–Ω–æ–≤, –æ—Ç –º–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω—ã—Ö –±—Ä–µ–Ω–¥–æ–≤ –¥–æ –º–µ—Å—Ç–Ω—ã—Ö –±—É—Ç–∏–∫–æ–≤.</p>
    </div>

    <div class="bg-gradient-to-br from-yellow-50 to-orange-50 p-6 rounded-xl shadow-lg border border-yellow-200">
      <h2 class="text-2xl font-bold text-gray-900 mb-4">üçΩÔ∏è –ï–¥–∞ –∏ –Ω–∞–ø–∏—Ç–∫–∏</h2>
      <p class="text-gray-600">–ú–Ω–æ–∂–µ—Å—Ç–≤–æ —Ä–µ—Å—Ç–æ—Ä–∞–Ω–æ–≤ –∏ –∫–∞—Ñ–µ –Ω–∞ –ª—é–±–æ–π –≤–∫—É—Å, –æ—Ç —Ñ–∞—Å—Ç—Ñ—É–¥–∞ –¥–æ –∏–∑—ã—Å–∫–∞–Ω–Ω–æ–π –∫—É—Ö–Ω–∏.</p>
    </div>
  </div>

  <div class="bg-gradient-to-r from-green-500 to-blue-600 text-white p-8 rounded-xl shadow-xl">
    <h2 class="text-3xl font-bold mb-6">üéØ –ü–ª–∞–Ω–∏—Ä—É–µ—Ç–µ –ø–æ–µ–∑–¥–∫—É –≤ ${cleanTitle}?</h2>

    <div class="flex flex-wrap gap-4 mb-6">
      <a href="/phuket" class="bg-white text-blue-600 px-6 py-3 rounded-lg font-bold hover:bg-gray-100 transition-colors">üèùÔ∏è –ó–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å —Ç—É—Ä —Å –≥–∏–¥–æ–º</a>
      <a href="/services/car-rental" class="bg-white text-green-600 px-6 py-3 rounded-lg font-bold hover:bg-gray-100 transition-colors">üöó –ê—Ä–µ–Ω–¥–æ–≤–∞—Ç—å –∞–≤—Ç–æ</a>
      <a href="/services/currency-exchange" class="bg-white text-purple-600 px-6 py-3 rounded-lg font-bold hover:bg-gray-100 transition-colors">üí± –û–±–º–µ–Ω—è—Ç—å –≤–∞–ª—é—Ç—É</a>
    </div>

    <p class="text-lg">üí° <strong>–°–æ–≤–µ—Ç:</strong> –õ—É—á—à–µ–µ –≤—Ä–µ–º—è –¥–ª—è –ø–æ—Å–µ—â–µ–Ω–∏—è ‚Äî —É—Ç—Ä–æ–º –∏–ª–∏ –≤–µ—á–µ—Ä–æ–º, –∫–æ–≥–¥–∞ –º–µ–Ω—å—à–µ –≤—Å–µ–≥–æ –ª—é–¥–µ–π.</p>
  </div>

  <p class="text-lg text-gray-600 italic text-center mt-8">${cleanTitle} ‚Äî —ç—Ç–æ –æ—Ç–ª–∏—á–Ω–æ–µ –º–µ—Å—Ç–æ –¥–ª—è —à–æ–ø–∏–Ω–≥–∞, —Ä–∞–∑–≤–ª–µ—á–µ–Ω–∏–π –∏ –æ—Ç–¥—ã—Ö–∞ –Ω–∞ –ü—Ö—É–∫–µ—Ç–µ.</p>
</div>
  `.trim();
}

const shoppingCenters = [
  {
    handle: 'central-phuket-floresta',
    title: 'Central Phuket (–¶–µ–Ω—Ç—Ä–∞–ª –ü—Ö—É–∫–µ—Ç)',
    description: '–ö—Ä—É–ø–Ω–µ–π—à–∏–π —Ç–æ—Ä–≥–æ–≤—ã–π —Ü–µ–Ω—Ç—Ä –Ω–∞ –ü—Ö—É–∫–µ—Ç–µ, —Å–æ—Å—Ç–æ—è—â–∏–π –∏–∑ –¥–≤—É—Ö –∫—Ä—ã–ª—å–µ–≤: Central Festival –∏ Central Floresta. –ü—Ä–µ–¥–ª–∞–≥–∞–µ—Ç —à–∏—Ä–æ–∫–∏–π –≤—ã–±–æ—Ä –º–∞–≥–∞–∑–∏–Ω–æ–≤, —Ä–µ—Å—Ç–æ—Ä–∞–Ω–æ–≤, —Ä–∞–∑–≤–ª–µ—á–µ–Ω–∏–π –∏ –∞–∫–≤–∞—Ä–∏—É–º.'
  },
  {
    handle: 'jungceylon-shopping-center',
    title: 'Jungceylon Shopping Center (–î–∂–∞–Ω–≥—Ü–µ–ª–æ–Ω)',
    description: '–û–¥–∏–Ω –∏–∑ —Å–∞–º—ã—Ö –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö —Ç–æ—Ä–≥–æ–≤—ã—Ö —Ü–µ–Ω—Ç—Ä–æ–≤ –Ω–∞ –ü–∞—Ç–æ–Ω–≥–µ, –ø—Ä–µ–¥–ª–∞–≥–∞—é—â–∏–π —à–∏—Ä–æ–∫–∏–π –≤—ã–±–æ—Ä –º–∞–≥–∞–∑–∏–Ω–æ–≤, —Ä–µ—Å—Ç–æ—Ä–∞–Ω–æ–≤ –∏ —Ä–∞–∑–≤–ª–µ—á–µ–Ω–∏–π.'
  },
  {
    handle: 'premium-outlet-phuket',
    title: 'Premium Outlet Phuket (–ü—Ä–µ–º–∏—É–º –ê—É—Ç–ª–µ—Ç –ü—Ö—É–∫–µ—Ç)',
    description: '–ö—Ä—É–ø–Ω—ã–π –∞—É—Ç–ª–µ—Ç-—Ü–µ–Ω—Ç—Ä —Å –¥–∏—Å–∫–æ–Ω—Ç–Ω—ã–º–∏ –º–∞–≥–∞–∑–∏–Ω–∞–º–∏ –∏–∑–≤–µ—Å—Ç–Ω—ã—Ö –±—Ä–µ–Ω–¥–æ–≤, —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–Ω—ã–π –Ω–µ–¥–∞–ª–µ–∫–æ –æ—Ç –ü—Ö—É–∫–µ—Ç –¢–∞—É–Ω–∞.'
  },
  {
    handle: 'big-c-supercenter-phuket',
    title: 'Big C Supercenter Phuket (–ë–∏–≥ –°–∏ –°—É–ø–µ—Ä—Ü–µ–Ω—Ç—Ä –ü—Ö—É–∫–µ—Ç)',
    description: '–ì–∏–ø–µ—Ä–º–∞—Ä–∫–µ—Ç, –≥–¥–µ –º–æ–∂–Ω–æ –Ω–∞–π—Ç–∏ –ø—Ä–æ–¥—É–∫—Ç—ã, –æ–¥–µ–∂–¥—É, —ç–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫—É –∏ —Ç–æ–≤–∞—Ä—ã –¥–ª—è –¥–æ–º–∞ –ø–æ –¥–æ—Å—Ç—É–ø–Ω—ã–º —Ü–µ–Ω–∞–º.'
  },
  {
    handle: 'robinson-lifestyle-phuket',
    title: 'Robinson Lifestyle Phuket (–†–æ–±–∏–Ω—Å–æ–Ω –õ–∞–π—Ñ—Å—Ç–∞–π–ª –ü—Ö—É–∫–µ—Ç)',
    description: '–°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ç–æ—Ä–≥–æ–≤—ã–π —Ü–µ–Ω—Ç—Ä —Å –º–∞–≥–∞–∑–∏–Ω–∞–º–∏, —Ä–µ—Å—Ç–æ—Ä–∞–Ω–∞–º–∏, –∫–∏–Ω–æ—Ç–µ–∞—Ç—Ä–æ–º –∏ –∑–æ–Ω–∞–º–∏ –æ—Ç–¥—ã—Ö–∞.'
  },
  {
    handle: 'tesco-lotus-phuket',
    title: 'Tesco Lotus Phuket (–¢–µ—Å–∫–æ –õ–æ—Ç—É—Å –ü—Ö—É–∫–µ—Ç)',
    description: '–ï—â–µ –æ–¥–∏–Ω –∫—Ä—É–ø–Ω—ã–π –≥–∏–ø–µ—Ä–º–∞—Ä–∫–µ—Ç, –ø—Ä–µ–¥–ª–∞–≥–∞—é—â–∏–π —à–∏—Ä–æ–∫–∏–π –∞—Å—Å–æ—Ä—Ç–∏–º–µ–Ω—Ç —Ç–æ–≤–∞—Ä–æ–≤, –æ—Ç –ø—Ä–æ–¥—É–∫—Ç–æ–≤ –¥–æ –±—ã—Ç–æ–≤–æ–π —Ç–µ—Ö–Ω–∏–∫–∏.'
  },
  {
    handle: 'patong-night-market',
    title: 'Patong Night Market (–ù–æ—á–Ω–æ–π —Ä—ã–Ω–æ–∫ –ü–∞—Ç–æ–Ω–≥)',
    description: '–û–∂–∏–≤–ª–µ–Ω–Ω—ã–π –Ω–æ—á–Ω–æ–π —Ä—ã–Ω–æ–∫ —Å —É–ª–∏—á–Ω–æ–π –µ–¥–æ–π, —Å—É–≤–µ–Ω–∏—Ä–∞–º–∏, –æ–¥–µ–∂–¥–æ–π –∏ –º–µ—Å—Ç–Ω—ã–º–∏ —Ç–æ–≤–∞—Ä–∞–º–∏.'
  }
];

async function main() {
  console.log('üîß –û–ë–ù–û–í–õ–ï–ù–ò–ï –û–ü–ò–°–ê–ù–ò–ô –° –ó–ê–ì–û–õ–û–í–ö–ê–ú–ò');
  console.log('='.repeat(50));

  for (let i = 0; i < shoppingCenters.length; i++) {
    const center = shoppingCenters[i];
    console.log(`\nüìù [${i + 1}/${shoppingCenters.length}] ${center.title}`);
    
    try {
      const product = await getProductIdByHandle(center.handle);
      if (!product) {
        console.error(`‚ùå –ü—Ä–æ–¥—É–∫—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω: ${center.handle}`);
        continue;
      }

      const descriptionHtml = generateDescriptionWithHeadings(center);

      const mutation = `
        mutation updateProduct($id: ID!, $descriptionHtml: String!) {
          productUpdate(input: {
            id: $id,
            descriptionHtml: $descriptionHtml
          }) {
            product {
              id
              title
            }
            userErrors {
              field
              message
            }
          }
        }
      `;

      const data = await makeGraphQLRequest(mutation, {
        id: product.id,
        descriptionHtml: descriptionHtml
      });

      if (data.data.productUpdate.userErrors.length > 0) {
        console.error('‚ùå User Errors:', data.data.productUpdate.userErrors);
      } else {
        console.log('‚úÖ –û–ø–∏—Å–∞–Ω–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–æ!');
      }

      await new Promise(resolve => setTimeout(resolve, 1500));
    } catch (error) {
      console.error(`‚ùå –û—à–∏–±–∫–∞: ${error.message}`);
    }
  }

  console.log('\n' + '='.repeat(50));
  console.log('üéâ –í–°–ï –û–ü–ò–°–ê–ù–ò–Ø –û–ë–ù–û–í–õ–ï–ù–´ –° –ó–ê–ì–û–õ–û–í–ö–ê–ú–ò!');
  console.log('üîó –ü—Ä–æ–≤–µ—Ä—å—Ç–µ: http://localhost:8080/category/shopping');
}

main().catch(console.error);
