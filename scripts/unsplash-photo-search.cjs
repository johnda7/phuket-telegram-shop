// –ü–æ–∏—Å–∫ –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π —á–µ—Ä–µ–∑ Unsplash API
// –ë–µ—Å–ø–ª–∞—Ç–Ω—ã–π –∏ –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–π –∏—Å—Ç–æ—á–Ω–∏–∫ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π

const UNSPLASH_ACCESS_KEY = 'YOUR_UNSPLASH_ACCESS_KEY'; // –ù—É–∂–µ–Ω API –∫–ª—é—á –æ—Ç Unsplash
const UNSPLASH_URL = 'https://api.unsplash.com/search/photos';

// –ü–æ–∏—Å–∫–æ–≤—ã–µ –∑–∞–ø—Ä–æ—Å—ã –¥–ª—è Robinson Lifestyle Phuket
const searchQueries = [
  'shopping mall Thailand',
  'modern shopping center exterior',
  'mall interior Thailand',
  'food court shopping center',
  'cinema theater Thailand',
  'retail stores shopping mall'
];

async function searchUnsplashPhotos() {
  try {
    console.log('üîç –ü–û–ò–°–ö –§–û–¢–û–ì–†–ê–§–ò–ô –ß–ï–†–ï–ó UNSPLASH API\n');
    console.log('üìã Unsplash - —ç—Ç–æ –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–π –∏—Å—Ç–æ—á–Ω–∏–∫ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π');
    console.log('‚úÖ –í—Å–µ —Ñ–æ—Ç–æ –≤—ã—Å–æ–∫–æ–≥–æ –∫–∞—á–µ—Å—Ç–≤–∞');
    console.log('‚úÖ –ë–µ—Å–ø–ª–∞—Ç–Ω—ã–µ –¥–ª—è –∫–æ–º–º–µ—Ä—á–µ—Å–∫–æ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è');
    console.log('‚úÖ –ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏\n');
    
    const allPhotos = [];
    
    for (let i = 0; i < searchQueries.length; i++) {
      const query = searchQueries[i];
      console.log(`üì∑ [${i + 1}/${searchQueries.length}] –ü–æ–∏—Å–∫: "${query}"`);
      
      const searchUrl = `${UNSPLASH_URL}?query=${encodeURIComponent(query)}&per_page=3&orientation=landscape&order_by=relevant`;
      
      try {
        const response = await fetch(searchUrl, {
          headers: {
            'Authorization': `Client-ID ${UNSPLASH_ACCESS_KEY}`
          }
        });
        
        const data = await response.json();
        
        if (data.results && data.results.length > 0) {
          console.log(`   ‚úÖ –ù–∞–π–¥–µ–Ω–æ ${data.results.length} —Ñ–æ—Ç–æ`);
          
          data.results.forEach((photo, index) => {
            const photoData = {
              id: photo.id,
              title: photo.alt_description || photo.description || 'Shopping Mall Photo',
              url: photo.urls.regular,
              fullUrl: photo.urls.full,
              thumbnail: photo.urls.thumb,
              width: photo.width,
              height: photo.height,
              size: photo.width * photo.height,
              source: 'Unsplash',
              photographer: photo.user.name,
              photographerUrl: photo.user.links.html,
              query: query,
              aspectRatio: photo.width / photo.height
            };
            
            // –ö—Ä–∏—Ç–µ—Ä–∏–∏ –∫–∞—á–µ—Å—Ç–≤–∞ –¥–ª—è Unsplash
            const isHighQuality = photoData.width >= 800 && photoData.height >= 600;
            const isGoodAspectRatio = photoData.aspectRatio >= 1.2 && photoData.aspectRatio <= 2.5;
            
            if (isHighQuality && isGoodAspectRatio) {
              allPhotos.push(photoData);
              console.log(`     ‚úÖ ${index + 1}. ${photoData.title} (${photoData.width}x${photoData.height})`);
              console.log(`        –§–æ—Ç–æ–≥—Ä–∞—Ñ: ${photoData.photographer}`);
            } else {
              console.log(`     ‚ùå ${index + 1}. ${photoData.title} - –Ω–µ –ø–æ–¥—Ö–æ–¥–∏—Ç –ø–æ —Ä–∞–∑–º–µ—Ä—É`);
            }
          });
        } else {
          console.log(`   ‚ùå –§–æ—Ç–æ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –¥–ª—è: ${query}`);
        }
      } catch (error) {
        console.log(`   ‚ùå –û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞: ${error.message}`);
      }
      
      // –ü–∞—É–∑–∞ –º–µ–∂–¥—É –∑–∞–ø—Ä–æ—Å–∞–º–∏
      await new Promise(resolve => setTimeout(resolve, 1000));
    }
    
    console.log(`\nüìä === –†–ï–ó–£–õ–¨–¢–ê–¢–´ –ü–û–ò–°–ö–ê ===`);
    console.log(`‚úÖ –í—Å–µ–≥–æ –Ω–∞–π–¥–µ–Ω–æ –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö —Ñ–æ—Ç–æ: ${allPhotos.length}`);
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–ø-6 –ª—É—á—à–∏—Ö —Ñ–æ—Ç–æ
    const topPhotos = allPhotos
      .sort((a, b) => b.size - a.size)
      .slice(0, 6);
    
    console.log(`\nüèÜ –¢–û–ü-6 –õ–£–ß–®–ò–• –§–û–¢–û:`);
    topPhotos.forEach((photo, index) => {
      console.log(`${index + 1}. ${photo.title}`);
      console.log(`   URL: ${photo.url}`);
      console.log(`   –†–∞–∑–º–µ—Ä: ${photo.width}x${photo.height}`);
      console.log(`   –§–æ—Ç–æ–≥—Ä–∞—Ñ: ${photo.photographer}`);
      console.log(`   –ò—Å—Ç–æ—á–Ω–∏–∫: ${photo.source}`);
      console.log('');
    });
    
    return topPhotos;
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error);
    return [];
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –ø–æ–∏—Å–∫
searchUnsplashPhotos();
